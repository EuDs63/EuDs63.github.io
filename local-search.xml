<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>暑期项目的感悟</title>
    <link href="/2023/09/13/Enlightenment-of-summer-project/"/>
    <url>/2023/09/13/Enlightenment-of-summer-project/</url>
    
    <content type="html"><![CDATA[<p>这次暑期学校的一个月时间都是用来开发一个项目。说是一个月，但实际用来编码的时间大约在三个星期。更具体的时间是早上八点半到下午五点半。最后这一个礼拜晚上也会拿来编码。</p><p>三个礼拜的时间说多不多，但这种经历倒是少有，踩了不少坑，也有不少收获，这里记录一下。</p><h2 id="学习新技术"><a href="#学习新技术" class="headerlink" title="学习新技术"></a>学习新技术</h2><p>这次用的几个技术栈都是之前没有接触过的：前端React，后端Flask。项目后期还引入了Redux和useSWR。</p><p>我对学习新技术倒是蛮有热情，之所以选用这些也是出于想尝试些之前所没有接触过的事物。并且这次用到的技术栈，上手也都是比较容易的，除了Redux现在还是云里雾里，所以整体的开发体验下来并不会因为都是自己没接触过的技术而寸步难行。</p><p>但我还是发现了一个蛮大的问题：因为要赶最后的ddl，所以比较偏向于急于求成，看了看用法和示例就开始写了，虽然最后也确实能写出点东西，但总有种半生不熟的感觉，没有一种确确实实掌握的踏实感。</p><p>我还意识到，一个人的时间和精力是有限的，而技术却是日新月异的。所谓庄子所说的：吾生也有涯，而知也无涯。所谓贪多嚼不烂，就是这个道理。</p><h2 id="DRY与AHA"><a href="#DRY与AHA" class="headerlink" title="DRY与AHA"></a>DRY与AHA</h2><p>这次项目中，后端几乎是我在负责的。但就是这样一个自己在开发的两千行左右的代码，到第三周的时候就还是偶尔会冒出想推倒重写某个部分的想法。</p><p>尤其是action这个部分。在这个项目中，我将用户收藏、评分、评论这三个功能抽象成一个action。自己刚开始写的时候还有点沾沾自喜，认为自己是做到了合理的内聚。</p><p>但后来却发现其中的弊端：当我想单独修改其中某一部分，因为其耦合性，导致我需要修改一些本不需要修改的代码。而到了项目后期，前端已经和后端对接已经完成百分之八九十。这时候修改一个核心功能，可谓是牵一发而动全身。改是能改，但是却不敢改，因为承担不起所需的时间成本。最后的解决方式是另外又写了几个方法，这就导致代码变得很丑。这时候就真切体验到了垒屎山是一种什么样的心情了。</p><p>回顾过去，思考如何在以后能尽量避免这种情况，我想有两个原则可能会起作用：</p><ol><li>DRY<br>“Don’t repeat yourself”的缩写。我虽然有意识去将一些常用的代码封装为一个方法。但还是有不少代码，我选择了直接复制粘贴原有可用代码，并在其基础上进行些许修改。这样子固然省事，写的时候也很畅快，但后期想要修改时，却就要之前的偷懒付出相当的代价。而如若我之前多花些时间，将其封装，这样我的代码也就更方便修改。</li><li>AHA<br>“avoid hasty abstractions”的缩写。这个原则让我不禁想到一句话”premature optimization is root of all evil”。还是以action为例，如果我在将三个操作耦合成一个时多想一想，那会好许多。但话又说回来，怎么样才算是不仓促，怎么样才算不是过早。我觉得现阶段的我还是缺乏经验，所以下次遇到类似的情况时，我想我大概率还是会为自己的某个小聪明而沾沾自喜，并毫不犹豫地踏进给自己挖的又一个坑。</li></ol><h2 id="项目流程"><a href="#项目流程" class="headerlink" title="项目流程"></a>项目流程</h2><p>这次的流程是采用瀑布模式，相比于上学期所使用的Scrum总觉得不得劲。我个人感觉最大的差异是在项目前期，连续多天都是花在写一些比较虚的文档。而这些文档：需求文档，设计文档之类，我们这几个甚至连初出茅庐都还不算的新人，没办法考虑得那么周到。而且多日时间上的付出只是一些文字，这样的体验感实在不好。</p><p>总的来说，这样的经历在我的学生阶段中算是比较一个独特的经历，一个月的时间也没有怎么白白浪费掉，对自己还是较为满意的。</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>感想</tag>
      
      <tag>软件工程</tag>
      
      <tag>感受</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>换域名喽</title>
    <link href="/2023/08/17/change-domain-name/"/>
    <url>/2023/08/17/change-domain-name/</url>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>我博客有相当一段时间，一直是使用默认的域名。而且我其实并不太想去修改，原因是我博客使用的是Github Page。我想信：背靠着微软，GitHub所提供的这项服务的可靠性会比我私人所申请的域名要可靠得多。而我一直秉持着这样一个观点：一个博客的死亡并不是其不再更新，而是无法访问。也就是说，我认为博客的持续性是要优先于其他很多方面的。</p><p>但今天意外发现邮箱里有封邮件，通知我说申请的域名通过了。十分惊喜，因为我已经忘了这件事了。既然手头上有一个域名，上学期也学了相关的知识，干脆就试一试，在此次梳理下相应的步骤。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>申请&#x2F;购买域名</p><p>我使用的是<a href="https://nic.eu.org/">EU.org</a>。好处是免费，但所需时间很长。我在5月27日申请的，直到昨天（8月16日）才通过。</p></li><li><p>选择域名解析服务商</p><p>我选择的是<a href="https://hostry.com/">hostry</a>,原因是免费。</p></li><li><p>Navigate to your DNS provider and create either an ALIAS, ANAME, or A record.</p><p>以下是我设置中的一部分：</p><table><thead><tr><th>SUBDOMAIN</th><th>TYPE</th><th>VALUE</th><th>TTL, SEC</th></tr></thead><tbody><tr><td>@</td><td>A</td><td>185.199.108.153</td><td>86400</td></tr><tr><td>@</td><td>AAAA</td><td>2606:50c0:8000::153</td><td>86400</td></tr><tr><td>www</td><td>CNAME</td><td>euds63.github.io</td><td>86400</td></tr></tbody></table></li></ol><p>  在Claude的帮助下，我知道：</p><ul><li>A记录(Address Record):将域名直接映射到一个IPv4地址。它是最基本的域名记录类型。GitHub提供了4个IP地址,而不是一个IP,主要出于负载均衡和容错的考虑</li><li>AAAA记录(Quad-A record):用于将域名映射到IPv6地址。   </li><li>CNAME记录(Canonical Name Record):将域名映射到另一个域名,实现域名别名的作用</li></ul><p>  值得注意的是<code>www CNAME euds63.github.io 86400</code>，我看到其他的教程有的是将SUBDOMAIN设置为<code>@</code>,但我的情况下会报错<code>Existing record &#39;SOA&#39; conflicts with the code you are trying to create Cname should not have the same name as other records</code></p><ol start="4"><li>Github配置<ul><li>Under “Custom domain”, type your custom domain, then click Save.</li><li>勾选Enforce HTTPS</li></ul></li></ol><p>  <strong>很明显，这里Github帮我们简化了许多操作。包括哪些呢?</strong></p><p>  由<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/securing-your-github-pages-site-with-https">Securing your GitHub Pages site with HTTPS</a>可知，当set or change your custom domain in the Pages setting后，GitHub</p><ol><li>begin an automatic DNS check . This check determines if your DNS settings are configured to allow GitHub to obtain a certificate automatically. </li><li>If the check is successful, GitHub queues a job to request a TLS certificate from Let’s Encrypt. </li><li>On receiving a valid certificate, GitHub automatically uploads it to the servers that handle TLS termination for Pages. When this process completes successfully, a check mark is displayed beside your custom domain name.</li></ol><p>  <strong>但如果不是用的Github Page，要怎么做呢？</strong></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ping ds63.eu.org<br>正在 Ping ds63.eu.org [185.199.108.153] 具有 32 字节的数据:<br>来自 185.199.108.153 的回复: 字节=32 时间=77ms TTL=54<br>来自 185.199.108.153 的回复: 字节=32 时间=103ms TTL=54<br>来自 185.199.108.153 的回复: 字节=32 时间=76ms TTL=54<br>来自 185.199.108.153 的回复: 字节=32 时间=77ms TTL=54<br><br>185.199.108.153 的 Ping 统计信息:<br>    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，<br>往返行程的估计时间(以毫秒为单位):<br>    最短 = 76ms，最长 = 103ms，平均 = 83ms<br><br>$ ping -6 ds63.eu.org<br><br>正在 Ping ds63.eu.org [2606:50c0:8001::153] 具有 32 字节的数据:<br>来自 2606:50c0:8001::153 的回复: 时间=74ms<br>来自 2606:50c0:8001::153 的回复: 时间=81ms<br>来自 2606:50c0:8001::153 的回复: 时间=74ms<br>来自 2606:50c0:8001::153 的回复: 时间=72ms<br><br>2606:50c0:8001::153 的 Ping 统计信息:<br>    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，<br>往返行程的估计时间(以毫秒为单位):<br>    最短 = 72ms，最长 = 81ms，平均 = 75ms<br></code></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">Managing a custom domain for your GitHub Pages site</a></li><li><a href="https://www.yong.eu.org/detail/15112.html">GitHub Pages绑定个人域名并启用https</a></li><li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/securing-your-github-pages-site-with-https">Securing your GitHub Pages site with HTTPS</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my opinion about LK-99</title>
    <link href="/2023/08/03/my-opinion-about-LK-99/"/>
    <url>/2023/08/03/my-opinion-about-LK-99/</url>
    
    <content type="html"><![CDATA[<h1 id="我看LK-99"><a href="#我看LK-99" class="headerlink" title="我看LK-99"></a>我看LK-99</h1><p>自<a href="https://arxiv.org/abs/2307.12008">The First Room-Temperature Ambient-Pressure Superconductor</a>发表已过去十多天了。可谓是众说纷纭。</p><p>我，一个物理水平停留在大二、化学水平局限在高中的会考的普通学生，对超导完全处于是门外汉水平，连科普的内容都没有完全读过。对于这个相当惊人的发现，或者再推广出去，对于自己不懂的领域，我一直秉持着不懂就不要乱说这一原则，但我还是忍不住在十多天后，谈谈自己的想法。</p><p>这篇文章的标题是我看LK-99，但实际上更应该是我看别人怎么看LK-99。</p><p>我获取相关信息的渠道主要有：Twitter、百度贴吧、B站、同学群。平台不同，言论也不同，可以说是很精彩。</p><p>我尝试去总结归纳：</p><ol><li>无脑贬低：</li></ol><ul><li>出现地方：贴吧比较多，更精确地说应该是某些贴吧的某些人。</li><li>表现：主要是以一种戏谑的嘲讽为主。代表言论是说：“棒子怎么可能有这种发现”，主打一个瞧不起。</li><li>我的想法：我现在越来越反感对其他国家的贬称，诸如“阿三、棒子、加麻大、丑国”等等。这种言论给我一种十分自大的感觉，但实际上你的国家真的比别人的国家强上多少吗？我看不尽然。</li></ul><ol start="2"><li>攻击相关的科研人员<ul><li>出现地方：几乎都能看到些</li><li>表现：当有些实验室宣布对LK-99的复现出现问题时，LK-99的提出者就可能受到攻击，被说是哗众取宠的小丑。</li><li>我的想法：到目前已经十天过去了，还保持着很高的热度，但似乎还没有完全有力的证伪出现，并且有观点认为这可能引出新的思路。我觉得他们能做到这点就已经很值得认可了。科学本来就是在不断试错中进步。</li></ul></li><li>侃侃而谈<ul><li>出现地方：推特上似乎比较多</li><li>表现: 一些KOL追热点、尽管这并不是其领域</li><li>我的想法：能理解，但看多了我觉得厌烦。但话又说回来，我不也是个完完全全的门外汉，但我不也写了这么多。</li></ul></li><li>赛博斗蛐蛐<ul><li>出现地方： 同学群、大学贴吧</li><li>表现： 国内各大学不少都尝试去复现，并根据结果去发表看法。然后就根据这些发表的看法的准确度、实时程度去给这些大学排名。</li><li>我的想法： 我觉得去复现、并发表自己的复现结果的行为都是值得肯定的。但实验过程中可能因为各种原因会出现不同的现象，倒也能理解。为了时效性和曝光度可能会操之太急，倒也是。</li></ul></li></ol><p>最后说说我的想法；</p><ul><li>肯定是希望其能成功。</li><li>就算不成功，这也是种新材料，也可能是种新的思路。所以也是件好事，也十分值得去肯定。</li></ul>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>感受</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rust_Learning</title>
    <link href="/2023/07/18/rust-learning/"/>
    <url>/2023/07/18/rust-learning/</url>
    
    <content type="html"><![CDATA[<h1 id="Rust-Learning"><a href="#Rust-Learning" class="headerlink" title="Rust_Learning"></a>Rust_Learning</h1><p><strong>记录我的Rust学习</strong></p><h2 id="Cargo使用"><a href="#Cargo使用" class="headerlink" title="Cargo使用"></a>Cargo使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">cargo new<br>cargo build <br>cargo run<br>cargo check<br>cargo doc --open <span class="hljs-comment">#build documentation provided by all your dependencies locally and open it in your browser</span><br></code></pre></td></tr></table></figure><h2 id="Rust特点"><a href="#Rust特点" class="headerlink" title="Rust特点"></a>Rust特点</h2><ul><li>Patterns and the match construct</li><li>a strong, static type system.</li><li>type inference</li><li>shadow</li><li>Rust uses the term panicking when a program exits with an error</li><li>requiring type annotations in function definitions</li><li>Rust’s goal is to compile programs into efficient binaries that <em>require as few runtime checks as possible</em></li><li>A foundational goal of Rust is to ensure that your programs never have undefined behavior</li></ul><h2 id="Chapter3-Common-Programming-Concepts"><a href="#Chapter3-Common-Programming-Concepts" class="headerlink" title="Chapter3 Common Programming Concepts"></a>Chapter3 Common Programming Concepts</h2><ul><li>constant v.s. variable<ol><li>Constants aren’t just immutable by default;they’re always immutable.</li><li>Constants can be declared in any scope</li><li>Constants may be set only to a constant expression, not the result of a value that could only be computed at runtime.</li></ol></li><li>shadow ends until<ol><li>it itself is shadowed </li><li>the scope ends</li></ol></li><li>Integer division truncates toward zero to the nearest integer</li><li>tuple和array区别<ol><li>tuple的各类型可以不同；</li><li>array的大小固定,在定义时就指定了</li><li>tuple更灵活,可存储不同类型,一般用于临时组合数据</li><li>array大小固定,用于存储大量相同类型的数据</li></ol></li><li>expression and statement<ol><li>Expressions do not include ending semicolons</li><li>statement does not return a value</li><li>the return value of the function is synonymous with <em>the value of the final expression in the block of the body of a function</em></li></ol></li><li>Control Flow<ol><li>This means the values that have the potential to be results from each arm of the if must be the same type</li><li>Rust does not have a concept of “truthy” or “falsy” values.So <em>The condition to an if-expression must be a boolean</em></li></ol></li></ul><h2 id="Chapter4-Understanding-Ownship"><a href="#Chapter4-Understanding-Ownship" class="headerlink" title="Chapter4 Understanding Ownship"></a>Chapter4 Understanding Ownship</h2><ul><li>The stack holds data associated with a specific function, while the heap holds data that can outlive a function</li><li>Rust does not allow programs to manually deallocate memory. That policy avoids the kinds of undefined behaviors shown above.</li><li>Box deallocation principle : If a variable owns a box, when Rust deallocates the variable’s frame, then Rust deallocates the box’s heap memory.</li><li>Moved heap data principle: if a variable x moves ownership of heap data to another variable y, then x cannot be used after the move.</li><li>A reference is a kind of pointer.</li><li>Rust implicitly inserts dereferences and references in certain cases, such as calling a method with the dot operator</li><li><em>Pointer Safety Principle</em>: data should never be aliased and mutated at the same time.</li><li>Permissions are defined on <em>paths</em> and not just variables. A path is anything you can put on the left-hand side of an assignment.</li><li>Creating a reference to data (“<em>borrowing</em>“ it) causes that data to be temporarily read-only until the reference is no longer used.</li><li>Rust’s borrow checker does not contain different paths for a[0], a[1], and so on. It uses a single path a[_] that represents all indexes of a.</li><li>Slices are special kinds of references because they are “fat” pointers, or pointers with metadata. Here, the metadata is the length of the slice.</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>优势<ol><li>improving runtime performance by avoiding garbage collection</li><li>improving predictability by preventing accidental “leaks” of data.</li></ol></li><li>Pointers can be created through <ol><li>boxes (pointers owning data on the heap) </li><li>references (non-owning pointers).</li></ol></li><li>move v.s. borrow<ul><li>A move of a variable with a non-copyable type (like Box<T> or String) requires the RO permissions, and the move eliminates all permissions on the variable. That rule prevents the use of moved variables:</li><li>Borrowing a variable (creating a reference to it) temporarily removes some of the variable’s permissions<ul><li>An immutable borrow creates an immutable reference, and also <em>disables the borrowed data from being mutated or moved.</em></li><li>A mutable borrow creates a mutable reference, which* disables the borrowed data from being read, written, or moved*</li></ul></li></ul></li><li>use-after-free: <em>Immutable borrows</em> remove the W permission to avoid use-after-free,</li><li>double-frees: Dereferences of references to non-copyable data do not have the O permission to avoid double-frees</li></ul><h2 id="Chapter5-Struct"><a href="#Chapter5-Struct" class="headerlink" title="Chapter5 Struct"></a>Chapter5 Struct</h2><ul><li>Rust <em>does not have a keyword for constructor functions</em>. The idiomatic way to define a constructor function is to make an associated function called new, but that is not enforced by the language.</li><li>tuple struct. e.g. <code>struct Color (i32,i32,i32);</code></li><li>Rust will insert as many references and dereferences as needed to make the types match up for the self parameter</li><li>Rust does not auto-derive Copy for stability across API changes. <code>#[derive(Copy, Clone)]</code></li><li>when you see an error like “cannot move out of *self”, that’s usually because you’re trying to call a self method on a reference like &amp;self or &amp;mut self. Rust is protecting you from a double-free</li></ul><h2 id="Chapter6-Enum"><a href="#Chapter6-Enum" class="headerlink" title="Chapter6 Enum"></a>Chapter6 Enum</h2><ul><li>advantage to using an enum rather than a struct:</li></ul><ol><li>each variant can have different types and amounts of associated data</li><li>the name of each enum variant that we define also becomes a function that constructs an instance of the enum</li><li>you can put any kind of data inside an enum variant: strings, numeric types, or structs, for example. You can even include another enum</li></ol><ul><li><p>The Option Enum </p><ol><li>the compiler can check whether you’ve handled all the cases you should be handling</li><li>a null is a value that is currently invalid or absent for some reason.</li><li>Rust does not have nulls, but it does have an enum that can encode the concept of a value being present or absent.</li><li>The function Option::unwrap expects <em>self</em>, meaning it expects <em>ownership</em> of arg. However arg is an <em>immutable reference</em> to an option, so it cannot provide ownership of the option.</li></ol></li><li><p>match</p></li><li><p>Each match is tried from top to bottom</p></li><li><p>opt is a plain enum — its type is Option<String> and not a reference like &amp;Option<String>. Therefore a match on opt will move non-ignored fields like s. </p></li><li><p>If we want to peek into opt without moving its contents, the idiomatic solution is to match on a reference:</p></li><li><p><code>if let</code></p><ul><li>if let as syntax sugar for a match that runs code when the value matches one pattern and then ignores all other values.</li><li>The block of code that goes with the else is the same as the block of code that would go with the _ case in the match expression that is equivalent to the if let and else</li></ul></li></ul><h2 id="Chapter7-Managing-Growing-Projects-with-Packages-Crates-and-Modules"><a href="#Chapter7-Managing-Growing-Projects-with-Packages-Crates-and-Modules" class="headerlink" title="Chapter7 Managing Growing Projects with Packages, Crates, and Modules"></a>Chapter7 Managing Growing Projects with Packages, Crates, and Modules</h2><h3 id="Packages-A-Cargo-feature-that-lets-you-build-test-and-share-crates"><a href="#Packages-A-Cargo-feature-that-lets-you-build-test-and-share-crates" class="headerlink" title="Packages: A Cargo feature that lets you build, test, and share crates"></a>Packages: A Cargo feature that lets you build, test, and share crates</h3><ul><li>a bundle of one or more crates that provides a set of functionality.</li><li>A package can contain as many binary crates as you like, but at most only one library crate.</li><li>Using External Packages<ol><li>the standard std library is also a crate that’s external to our package.we <em>don’t</em> need to change Cargo.toml to include std. But <em>we do need to refer to it</em> with use to bring items from there into our package’s scope</li></ol></li></ul><h3 id="Crates-A-tree-of-modules-that-produces-a-library-or-executable"><a href="#Crates-A-tree-of-modules-that-produces-a-library-or-executable" class="headerlink" title="Crates: A tree of modules that produces a library or executable"></a>Crates: A tree of modules that produces a library or executable</h3><ul><li>Binary create: must have a function called <code>main</code></li><li>Library crates : define functionality intended to be shared with multiple projects.<br>Rustaceans say “crate”, they mean library crate, and they use “crate” interchangeably with the general programming concept of a <em>“library”</em>.</li></ul><h3 id="Modules-and-use-Let-you-control-the-organization-scope-and-privacy-of-paths"><a href="#Modules-and-use-Let-you-control-the-organization-scope-and-privacy-of-paths" class="headerlink" title="Modules and use: Let you control the organization, scope, and privacy of paths"></a>Modules and use: Let you control the organization, scope, and privacy of paths</h3><ul><li>用处<ol><li>let us organize code within a crate for readability and easy reuse</li><li>allow us to control the privacy of items, because code within a module is private by default</li></ol></li><li>parent and child<ol><li>all items (functions, methods, structs, enums, modules, and constants) <em>are private to parent modules</em> by default. </li><li>Items in a parent module can’t use the private items inside child modules, but items in child modules can use the items in their ancestor modules.</li></ol></li></ul><h3 id="Paths-A-way-of-naming-an-item-such-as-a-struct-function-or-module"><a href="#Paths-A-way-of-naming-an-item-such-as-a-struct-function-or-module" class="headerlink" title="Paths: A way of naming an item, such as a struct, function, or module"></a>Paths: A way of naming an item, such as a struct, function, or module</h3><ul><li>the idiomatic way<ol><li>Bringing the function’s parent module into scope with use</li><li>when bringing in structs, enums, and other items with use, it’s idiomatic to specify the full path</li></ol></li><li><code>use std::io::Result as IoResult;</code></li><li>we can use nested paths to bring the same items into scope in one line.<code>use std::&#123;cmp::Ordering, io&#125;;</code>,<code>use std::io::&#123;self, Write&#125;;</code></li></ul><h2 id="Chapter8"><a href="#Chapter8" class="headerlink" title="Chapter8"></a>Chapter8</h2><h3 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3><ul><li>Reason for a reference to the first element care about changes at the end of the vector <ol><li>adding a new element onto the end of the vector might require allocating new memory and copying the old elements <em>to the new space</em></li><li>the reference to the first element would be pointing to <em>deallocated memory</em></li></ol></li><li>Vec::push moves its argument, so s is not usable after calling v.push(s)</li><li>When the vector gets dropped, all of its contents are also dropped, meaning the integers it holds will be cleaned up.</li></ul><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><ul><li>the compiler can coerce the &amp;String argument into a &amp;str  </li><li>Rust strings don’t support indexing to <em>avoid returning an unexpected value and causing bugs that might not be discovered immediately</em></li><li>three relevant ways to look at strings from Rust’s perspective<ol><li>bytes</li><li>scalar values</li><li>grapheme clusters</li></ol></li><li>The best way to operate on pieces of strings is to <em>be explicit about whether you want</em> characters or bytes</li><li>&amp;str is a promise that the byte sequence it points to will always be valid UTF-8</li></ul><h3 id="hash-map"><a href="#hash-map" class="headerlink" title="hash map"></a>hash map</h3><ul><li>Hash maps are useful when you want to look up data not by using an index, as you can with vectors, but by using a key that can be of any type</li><li>For types that implement the Copy trait, like i32, the values are copied into the hash map. - For <em>owned values</em> like String, the values will be moved and the hash map will be <em>the owner of those values</em></li></ul><h2 id="chapter10"><a href="#chapter10" class="headerlink" title="chapter10"></a>chapter10</h2><h3 id="Generic-Data-Types"><a href="#Generic-Data-Types" class="headerlink" title="Generic Data Types"></a>Generic Data Types</h3><ul><li>Rust instead requires you to state the expected capabilities of generic types up front</li><li>Without restrictions, a generic type T has no capabilities: it cannot be printed, cloned, or mutated (although it can be dropped).</li><li>Rust does not have inheritance-like mechanisms for specializing methods as you might find in an object-oriented language,</li><li>Monomorphization is the process of turning generic code into specific code by filling in the concrete types that are used when compiled</li></ul><h3 id="trait"><a href="#trait" class="headerlink" title="trait"></a>trait</h3><ul><li>A trait defines functionality a particular type has and can share with other types.</li><li>One restriction to note is that we can implement a trait on a type only if at least one of the trait or the type is local to our crate.</li><li>Default implementations can call other methods in the same trait, even if those other methods don’t have a default implementation</li><li>traits in parameter<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">some_function</span>&lt;T:Display + <span class="hljs-built_in">Clone</span> ,U: <span class="hljs-built_in">Clone</span> + <span class="hljs-built_in">Debug</span>&gt;(t:&amp;T,u:&amp;U) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">i32</span>&#123;&#125;<br><span class="hljs-comment">// Clearer Trait Bounds with where Clauses</span><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">some_function</span>&lt;T,U&gt;()(t:&amp;T,u:&amp;U) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">i32</span><br><span class="hljs-keyword">where</span> <br>  T:Display + <span class="hljs-built_in">Clone</span> ,<br>  U: <span class="hljs-built_in">Clone</span> + <span class="hljs-built_in">Debug</span><br>&#123;&#125;<br></code></pre></td></tr></table></figure></li><li>can only use impl Trait if you’re returning a single type</li><li>Using Trait Bounds to Conditionally Implement Methods<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs Rust"><span class="hljs-keyword">use</span> std::fmt::Display;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Pair</span>&lt;T&gt; &#123;<br>    x: T,<br>    y: T,<br>&#125;<br><br><span class="hljs-keyword">impl</span>&lt;T&gt; Pair&lt;T&gt; &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">new</span>(x: T, y: T) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span> &#123;<br>        <span class="hljs-keyword">Self</span> &#123; x, y &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">impl</span>&lt;T: Display + <span class="hljs-built_in">PartialOrd</span>&gt; Pair&lt;T&gt; &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">cmp_display</span>(&amp;<span class="hljs-keyword">self</span>) &#123;<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">self</span>.x &gt;= <span class="hljs-keyword">self</span>.y &#123;<br>            <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;The largest member is x = &#123;&#125;&quot;</span>, <span class="hljs-keyword">self</span>.x);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;The largest member is y = &#123;&#125;&quot;</span>, <span class="hljs-keyword">self</span>.y);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>conditionally implement a trait for any type that implements another trait<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Rust"><span class="hljs-keyword">impl</span>&lt;T: Display&gt; <span class="hljs-built_in">ToString</span> <span class="hljs-keyword">for</span> <span class="hljs-title class_">T</span> &#123;<br>  <span class="hljs-comment">// --snip--</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="lifetime"><a href="#lifetime" class="headerlink" title="lifetime"></a>lifetime</h3><ul><li>Lifetime annotations don’t change how long any of the references live. Rather, they describe the relationships of the lifetimes of multiple references to each other without affecting the lifetimes</li><li>the names of lifetime parameters must start with an apostrophe (‘) and are usually all lowercase and very short</li><li>when we specify the lifetime parameters in this function signature, we’re not changing the lifetimes of any values passed in or returned. Rather, we’re specifying that the borrow checker should reject any values that don’t adhere to these constraints.</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>Rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《操作系统：设计与实现》笔记</title>
    <link href="/2023/06/27/learn-os-vias-jyy/"/>
    <url>/2023/06/27/learn-os-vias-jyy/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://space.bilibili.com/202224425/channel/collectiondetail?sid=192498">操作系统：设计与实现 (2022 春季学期)</a>的学习笔记</strong></p><h3 id="p3-多处理器编程：从入门到放弃-线程库；现代处理器和宽松内存模型"><a href="#p3-多处理器编程：从入门到放弃-线程库；现代处理器和宽松内存模型" class="headerlink" title="p3 多处理器编程：从入门到放弃 (线程库；现代处理器和宽松内存模型)"></a>p3 多处理器编程：从入门到放弃 (线程库；现代处理器和宽松内存模型)</h3><ul><li><p>并发程序的三个麻烦</p><ul><li>原子性</li><li>顺序</li><li>可见性</li></ul></li><li><p>gcc 编译</p><ul><li>不优化,并查看汇编代码<br><code>gcc -c -O1 sum.c &amp;&amp; objdump -d sum.o</code></li><li><code>asm volatile(&quot;&quot; : : &quot;memory&quot;); // compiler barrier</code></li></ul></li><li><p>统计次数<br><code> ./a.out | head -n 1000 | sort | uniq -c</code></p></li><li><p>现代处理器</p><ul><li>也是动态编译器：汇编指令也是由多个uop所组成的。</li><li>维护一个uop的“池子” 指令的有向无环图</li><li>乱序执行，顺序提交</li></ul></li></ul><h3 id="p4-理解并发程序执行-Peterson算法、模型检验与软件自动化工具"><a href="#p4-理解并发程序执行-Peterson算法、模型检验与软件自动化工具" class="headerlink" title="p4 理解并发程序执行 (Peterson算法、模型检验与软件自动化工具)"></a>p4 理解并发程序执行 (Peterson算法、模型检验与软件自动化工具)</h3><ul><li>C语言的形式语义<ul><li>全局变量加多个栈帧；每个栈帧有其局部变量和pc</li></ul></li><li>Peterson算法<ul><li>看上去是谦让的，但其实是自私的</li><li>证明正确性：画出状态机<ul><li>困境：不敢不画，不敢乱画</li><li>解决： <a href="https://jyywiki.cn/pages/OS/2022/demos/model-checker.py">model-checker</a></li><li>把程序的问题变成图论的问题<ul><li>safety 红色状态不可达</li><li>liveness : 从任意状态出发，都能到达绿&#x2F;蓝色状态 强连通分量</li></ul></li></ul></li><li>许多重要的想法，凝练以后就是概念</li></ul></li><li>并发程序 &#x3D; 状态机</li><li>Python generator<ul><li>e.g.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">numbers</span>(<span class="hljs-params">init=<span class="hljs-number">0</span>,step=<span class="hljs-number">1</span></span>):<br>    n = init<br>    <span class="hljs-keyword">while</span> Trye:<br>    n += step<br>    <span class="hljs-keyword">yield</span> n<br>g = numbers()<br>g.__next__()<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="p5-并发控制：互斥-自旋锁、互斥锁和-futex"><a href="#p5-并发控制：互斥-自旋锁、互斥锁和-futex" class="headerlink" title="p5 并发控制：互斥 (自旋锁、互斥锁和 futex)"></a>p5 并发控制：互斥 (自旋锁、互斥锁和 futex)</h3><ul><li>不能解决问题的时候，可以找到所依赖的假设，并大胆地打破它</li><li>spin 线程直接共享 locked</li><li>mutex 通过系统调用访问 locked</li><li>futex(Fast Userspace muTexes)<ul><li>Fast path: 一条原子指令，上锁成功立即返回</li><li>Slow path: 上锁失败，执行系统调用睡眠</li></ul></li></ul><h2 id="p6-并发控制：同步-条件变量、信号量、生产者-消费者和哲♂学家吃饭问题"><a href="#p6-并发控制：同步-条件变量、信号量、生产者-消费者和哲♂学家吃饭问题" class="headerlink" title="p6 并发控制：同步 (条件变量、信号量、生产者-消费者和哲♂学家吃饭问题)"></a>p6 并发控制：同步 (条件变量、信号量、生产者-消费者和哲♂学家吃饭问题)</h2><ul><li>思考： 有一堆任务，平均切分成n堆。有x个线程负责完成该任务(x &lt; n) 一个线程一次只能完成一个任务，完成后会自动去做下一个任务。要怎么实现？</li><li>有万能的方法，就要用万能的方法。<ul><li>他是这样诠释的。当项目代码量不大（一千行以内），项目还是比较好维护的，这时候用写聪明的写法没问题。但当项目到了几万行甚至几百万行时，这时候就需要多个人来进行协作。而人和人之间最大的障碍就是无法完全沟通，理解对方的心意。</li><li>不要试图用聪明的办法解决并发问题</li><li>个人想法：第一次听这种说法，有一定道理。</li></ul></li><li><h2 id="万能同步方法-——-条件变量-Conditional-Variables-API-wait-cv-mutex-💤-调用时必须保证已经获得-mutex-释放-mutex、进入睡眠状态-signal-x2F-notify-cv-💬-私信：走起-如果有线程正在等待-cv，则唤醒其中一个线程-broadcast-x2F-notifyAll-cv-📣-所有人：走起-唤醒全部正在等待-cv-的线程"><a href="#万能同步方法-——-条件变量-Conditional-Variables-API-wait-cv-mutex-💤-调用时必须保证已经获得-mutex-释放-mutex、进入睡眠状态-signal-x2F-notify-cv-💬-私信：走起-如果有线程正在等待-cv，则唤醒其中一个线程-broadcast-x2F-notifyAll-cv-📣-所有人：走起-唤醒全部正在等待-cv-的线程" class="headerlink" title="万能同步方法 —— 条件变量(Conditional Variables )- API  - wait(cv, mutex) 💤    调用时必须保证已经获得 mutex    释放 mutex、进入睡眠状态  - signal&#x2F;notify(cv) 💬 私信：走起    如果有线程正在等待 cv，则唤醒其中一个线程  - broadcast&#x2F;notifyAll(cv) 📣 所有人：走起    唤醒全部正在等待 cv 的线程"></a>万能同步方法 —— 条件变量(Conditional Variables )<br>- API<br>  - wait(cv, mutex) 💤<br>    调用时必须保证已经获得 mutex<br>    释放 mutex、进入睡眠状态<br>  - signal&#x2F;notify(cv) 💬 私信：走起<br>    如果有线程正在等待 cv，则唤醒其中一个线程<br>  - broadcast&#x2F;notifyAll(cv) 📣 所有人：走起<br>    唤醒全部正在等待 cv 的线程</h2>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 需要等待条件满足时</span><br>mutex_lock(&amp;mutex);<br><span class="hljs-keyword">while</span> (!cond) &#123;<br>  wait(&amp;cv, &amp;mutex);<br>&#125;<br>assert(cond);<br><span class="hljs-comment">// ...</span><br><span class="hljs-comment">// 互斥锁保证了在此期间条件 cond 总是成立</span><br><span class="hljs-comment">// ...</span><br>mutex_unlock(&amp;mutex);<br><br><span class="hljs-comment">// 其他线程条件可能被满足时</span><br>broadcast(&amp;cv);<br></code></pre></td></tr></table></figure><ul><li>debug -&gt; 隔离出bug触发的最小条件</li></ul></li></ul><h2 id="p7-真实世界的并发编程-高性能计算-x2F-数据中心-x2F-人机交互中的并发编程"><a href="#p7-真实世界的并发编程-高性能计算-x2F-数据中心-x2F-人机交互中的并发编程" class="headerlink" title="p7 真实世界的并发编程 (高性能计算&#x2F;数据中心&#x2F;人机交互中的并发编程)"></a>p7 真实世界的并发编程 (高性能计算&#x2F;数据中心&#x2F;人机交互中的并发编程)</h2><ul><li>谈block chain &gt; 是个很好的技术。但觉得不太对。因为造成了相当大的资源浪费。</li><li><a href="https://www.youtube.com/watch?v=FFftmWSzgmk&ab_channel=Numberphile">What’s so special about the Mandelbrot Set? - Numberphile</a></li><li><a href="https://github.com/atanunq/viu">atanunq&#x2F;viu</a></li><li>搜索降低了知识的获取成本，ChatGPT等再一次降低了成本。</li><li>go语言，编程友好、性能优化</li><li>博客是web2.0 的第一步</li><li>Ajax (Asynchronous JavaScript + XML)</li><li>这次课中讲了三种并发编程，根据不同的需要，实现并发的方式也不同。</li></ul><h2 id="p8-并发-bug-和应对-死锁-x2F-数据竞争-x2F-原子性违反；防御性编程和动态分析"><a href="#p8-并发-bug-和应对-死锁-x2F-数据竞争-x2F-原子性违反；防御性编程和动态分析" class="headerlink" title="p8 并发 bug 和应对 (死锁&#x2F;数据竞争&#x2F;原子性违反；防御性编程和动态分析)"></a>p8 并发 bug 和应对 (死锁&#x2F;数据竞争&#x2F;原子性违反；防御性编程和动态分析)</h2><ul><li>软件是需求在计算机数字世界的投影。</li><li>assert的使用</li><li>没有工具不做系统</li><li>premature optimization is root of all evil</li><li>编程语言的缺陷——对程序员的完全信任：因为计算资源的宝贵</li><li>动态分析工具 <code>-fsanitize</code></li><li>Canary msvc 中 debug mode 的canary  <code>(b&#39;\xcc&#39; * 80).decode(&#39;gb2312&#39;)</code></li></ul><h2 id="p9-操作系统的状态机模型-操作系统的加载-thread-os-代码讲解"><a href="#p9-操作系统的状态机模型-操作系统的加载-thread-os-代码讲解" class="headerlink" title="p9 操作系统的状态机模型 (操作系统的加载; thread-os 代码讲解)"></a>p9 操作系统的状态机模型 (操作系统的加载; thread-os 代码讲解)</h2><ul><li>大学的真正意义:f将已有的知识和方法重新消化，为大家建立好 “台阶”，在有限的时间里迅速赶上数十年来建立起的学科体系。</li></ul><h2 id="p10-状态机模型的应用-细胞自动机-gdb-x2F-rr-x2F-perf-代码验证工具"><a href="#p10-状态机模型的应用-细胞自动机-gdb-x2F-rr-x2F-perf-代码验证工具" class="headerlink" title="p10 状态机模型的应用 (细胞自动机; gdb&#x2F;rr&#x2F;perf; 代码验证工具)"></a>p10 状态机模型的应用 (细胞自动机; gdb&#x2F;rr&#x2F;perf; 代码验证工具)</h2><ul><li>分布式系统也是一种并发程序，但要更复杂。因为并发程序假设了每个thread都能正常运行，而分布式系统则要考虑节点丢失的情况。</li></ul><h2 id="p11-操作系统上的进程-最小-Linux-fork-execve-和-exit"><a href="#p11-操作系统上的进程-最小-Linux-fork-execve-和-exit" class="headerlink" title="p11 操作系统上的进程 (最小 Linux; fork, execve 和 exit)"></a>p11 操作系统上的进程 (最小 Linux; fork, execve 和 exit)</h2><ul><li>Linux 操作系统启动流程<br>CPU Reset → Firmware → Loader → Kernel _start() → 第一个程序 &#x2F;bin&#x2F;init → 程序 (状态机) 执行 + 系统调用</li><li>Fork Bomb:<br><code>:()&#123;:|:&amp;&#125;;:</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">  :() &#123;         <span class="hljs-comment"># 格式化一下</span><br>  : | : &amp;<br>  &#125;; :<br>- stdout:<br>  终端: line buffer<br>  pipe , file :full buffer (除非显示地调用fflush)<br></code></pre></td></tr></table></figure></li><li><strong>fork</strong><ul><li>程序就是状态机，正在执行的程序也是状态机，fork创建状态机的副本；</li><li>创建的进程返回+1，子进程返回为0 </li><li>把所有的寄存器和内存都复制</li></ul></li><li><strong>execve</strong><ul><li>将当前运行的状态机重置成成另一个程序的初始状态</li></ul></li><li><strong>_exit</strong></li></ul><h2 id="p12-进程的地址空间-pmap-vdso-mmap-游戏修改器-x2F-外挂"><a href="#p12-进程的地址空间-pmap-vdso-mmap-游戏修改器-x2F-外挂" class="headerlink" title="p12 进程的地址空间 (pmap; vdso; mmap; 游戏修改器&#x2F;外挂)"></a>p12 进程的地址空间 (pmap; vdso; mmap; 游戏修改器&#x2F;外挂)</h2><ul><li>端序<ul><li>大端 (big endian): 低地址存放<em>高</em>有效字节</li><li>小端 (little endian): 低字节存放<em>低</em>有效字节</li></ul></li><li>工具使用<ul><li>gdb</li><li>readelf</li><li>pmap</li></ul></li><li>计算机世界没有魔法。因为程序就是状态机。</li><li>vdso:不进入操作系统内核，实现系统调用</li><li>mmap：  </li><li>文件&#x3D;字节序列；内存&#x3D;字节序列； everything is a file</li></ul><h2 id="p13-系统调用和-Shell-freestanding-shell-终端和-job-control"><a href="#p13-系统调用和-Shell-freestanding-shell-终端和-job-control" class="headerlink" title="p13 系统调用和 Shell (freestanding shell, 终端和 job control)"></a>p13 系统调用和 Shell (freestanding shell, 终端和 job control)</h2><ul><li>cd是内部命令：改变当前目录是用系统调用实现的</li><li><code>strace -f gcc a.c 2&gt;&amp;1 | vim -</code> This will pipe both stdout and stderr to vim. The <code>-</code> argument tells vim to read from stdin.</li><li><code>strace pmap 152 |&amp; vim - </code><br> <code>|&amp;</code> : This is a shorthand for <code>2&gt;&amp;1 |</code> in bash and zsh. It passes both standard output and standard error of one command as input to another.</li><li>fish, zsh 和 bash 都是常用的命令行 shell; sh是比较原始的</li><li>clear 清屏</li><li><code>,./a.out &amp;</code>  后台执行.&#x2F;a.out</li></ul><h2 id="p14-C-标准库的实现-系统调用的封装；内存空间管理"><a href="#p14-C-标准库的实现-系统调用的封装；内存空间管理" class="headerlink" title="p14 C 标准库的实现 (系统调用的封装；内存空间管理)"></a>p14 C 标准库的实现 (系统调用的封装；内存空间管理)</h2><ul><li>文件描述符还是不理解。印象中这是第二次谈到了”everything is a file”<ul><li>os的对象和对象的访问</li></ul></li><li>gdn的使用<ul><li><code>No symbol table is loaded.  Use the &quot;file&quot; command</code>。可能是编译选项未包含debug信息,如gcc没有添加-g选项。</li></ul></li><li>premature optimization is the root of all evil.</li><li>脱离workload谈优化就是耍流氓</li><li>经典的设计：<ul><li>fast path</li><li>slow path</li></ul></li></ul><h2 id="p15-fork-的应用-文件描述符的复制；写时复制；创建平行宇宙的魔法"><a href="#p15-fork-的应用-文件描述符的复制；写时复制；创建平行宇宙的魔法" class="headerlink" title="p15 fork 的应用 (文件描述符的复制；写时复制；创建平行宇宙的魔法)"></a>p15 fork 的应用 (文件描述符的复制；写时复制；创建平行宇宙的魔法)</h2><ul><li>fork 状态机复制包括持有的所有操作系统对象</li><li>包括持有的所有操作系统对象</li><li>文件描述符（file discriptor）<ul><li>一个指向操作系统内对象的 “指针”</li><li>dup() 的两个文件描述符是共享 offset</li></ul></li><li>访问空指针也会造成缺页中断</li><li>“Copy-on-write” 只有被写入的页面才会复制一份<ul><li>被复制后，整个地址空间都被标记为 “只读”</li><li>操作系统捕获 Page Fault 后酌情复制页面</li><li>fork-execve 效率得到提升</li></ul></li><li>操作系统会维护每个页面的引用计数</li><li>定义进程所占用的内存</li><li>page是归os所有的，而非进程</li><li>使用fork来搜索并行化。</li></ul><h2 id="p16-什么是可执行文件-调试信息；Stack-Unwinding；静态链接中的重定位"><a href="#p16-什么是可执行文件-调试信息；Stack-Unwinding；静态链接中的重定位" class="headerlink" title="p16 什么是可执行文件 (调试信息；Stack Unwinding；静态链接中的重定位)"></a>p16 什么是可执行文件 (调试信息；Stack Unwinding；静态链接中的重定位)</h2><ul><li>可执行文件描述了状态机，是一个描述了状态机的初始状态 + 迁移的数据结构</li><li>os没有魔法，所有东西都有解释</li><li><code>She-bang</code> <code>#! interpreter [optional-arg]</code></li><li>GNU binutils<ul><li>生成可执行文件<ul><li>ld (linker), as (assembler)</li><li>ar, ranlib</li></ul></li><li>分析可执行文件<ul><li>objcopy&#x2F;objdump&#x2F;readelf</li><li>addr2line, size, nm</li></ul></li></ul></li><li><code>objdump -d a.out | less</code> disasm</li><li><code>addr2line 401122 a.out</code></li><li>elf: 小精灵；dwarf：矮人</li><li>将一个 assembly (机器) 状态映射到 “C 世界” 状态很难</li><li>gcc等仍存在着许多不完美</li><li>编译器，汇编器，链接器</li></ul><h2 id="p17-动态链接和加载-静态-ELF-加载器实现；调试-Linux-内核；动态链接和加载"><a href="#p17-动态链接和加载-静态-ELF-加载器实现；调试-Linux-内核；动态链接和加载" class="headerlink" title="p17 动态链接和加载 (静态 ELF 加载器实现；调试 Linux 内核；动态链接和加载)"></a>p17 动态链接和加载 (静态 ELF 加载器实现；调试 Linux 内核；动态链接和加载)</h2><ul><li>自定义了一个二进制格式文件</li><li>GOT ： global offset table</li><li>PLT : procedure linkage table</li></ul><h2 id="p23-1-Bit-数据的存储-延迟线-x2F-磁芯-x2F-DRAM-x2F-SRAM-x2F-磁带-x2F-磁盘-x2F-光盘-x2F-Flash-SSD"><a href="#p23-1-Bit-数据的存储-延迟线-x2F-磁芯-x2F-DRAM-x2F-SRAM-x2F-磁带-x2F-磁盘-x2F-光盘-x2F-Flash-SSD" class="headerlink" title="p23 1-Bit 数据的存储 (延迟线&#x2F;磁芯&#x2F;DRAM&#x2F;SRAM&#x2F;磁带&#x2F;磁盘&#x2F;光盘&#x2F;Flash SSD)"></a>p23 1-Bit 数据的存储 (延迟线&#x2F;磁芯&#x2F;DRAM&#x2F;SRAM&#x2F;磁带&#x2F;磁盘&#x2F;光盘&#x2F;Flash SSD)</h2><ul><li>volatile: 确保该变量的实际值与内存中的值一致,每次读取都是最新值,也禁止编译器对其进行优化。</li><li>core dumped 磁性内存年代开始的概念。</li><li>局部性原理 -&gt; 可以按照大块来读写</li></ul><h2 id="p24-输入输出设备模型-串口-x2F-键盘-x2F-磁盘-x2F-打印机-x2F-总线-x2F-中断控制器-x2F-DMA-和-GPU"><a href="#p24-输入输出设备模型-串口-x2F-键盘-x2F-磁盘-x2F-打印机-x2F-总线-x2F-中断控制器-x2F-DMA-和-GPU" class="headerlink" title="p24 输入输出设备模型 (串口&#x2F;键盘&#x2F;磁盘&#x2F;打印机&#x2F;总线&#x2F;中断控制器&#x2F;DMA 和 GPU"></a>p24 输入输出设备模型 (串口&#x2F;键盘&#x2F;磁盘&#x2F;打印机&#x2F;总线&#x2F;中断控制器&#x2F;DMA 和 GPU</h2><ul><li>DMA: direct memory access : 一个专门执行”memcpy”程序的cpu</li><li>IPC: Instruction per second</li><li>GPU: <ul><li>一个通用计算设备</li><li>大量并行相似的任务</li></ul></li><li>异构计算：都能做，但选那个最合适的。（jjy在22年说的现在已经能感觉到有相关的趋势了。不过倒不是里面举例的挖矿，而是llm模型）</li></ul><h2 id="p25-设备驱动程序-Linux-设备驱动-GPU-和-CUDA-存储设备抽象"><a href="#p25-设备驱动程序-Linux-设备驱动-GPU-和-CUDA-存储设备抽象" class="headerlink" title="p25 设备驱动程序 (Linux 设备驱动; GPU 和 CUDA; 存储设备抽象)"></a>p25 设备驱动程序 (Linux 设备驱动; GPU 和 CUDA; 存储设备抽象)</h2><ul><li>设备抽象成 支持各类操作的对象 (文件)<ul><li>read - 从设备某个指定的位置读出数据</li><li>write - 向设备某个指定位置写入数据</li><li>ioctl - 读取&#x2F;设置设备的状态</li></ul></li><li><code>stty -a</code></li><li>GPU<ul><li>Single Instruction, Multiple Thread</li></ul></li><li>读优先的正确性</li></ul><h2 id="p26-文件系统-API-设备在应用间的共享；目录和文件-API"><a href="#p26-文件系统-API-设备在应用间的共享；目录和文件-API" class="headerlink" title="p26 文件系统 API (设备在应用间的共享；目录和文件 API)"></a>p26 文件系统 API (设备在应用间的共享；目录和文件 API)</h2><ul><li>信息的局部性</li><li>Windows从c盘开始时是受其前身Dos系统的影响，那个有a、b</li><li><code>mount disk.img  /mnt</code></li><li><code>umount /mnt</code></li><li>硬（hard）链接 <ul><li><code>ln /usr/local/python3 python</code></li><li>目录中仅存储指向文件数据的指针</li><li>允许一个文件被多个目录引用.</li><li>无法用来链接目录，也不能跨文件系统</li><li>通过<code>ls -i</code>查看是否为硬链接</li></ul></li><li>软 (symbolic) 链接<ul><li>“快捷方式”</li><li><code> ln -s ../p24 p24</code> </li><li>目录从“树”变为了“图”，还是有环图</li></ul></li><li><code>cd</code>的特殊性<ul><li>每个进程都有一个对应的工作目录（pwd），而这个目录只有系统调用才能够修改</li></ul></li></ul><h2 id="p27-FAT-和-UNIX-文件系统-数据结构视角的文件系统-FAT-手册导读和目录树遍历"><a href="#p27-FAT-和-UNIX-文件系统-数据结构视角的文件系统-FAT-手册导读和目录树遍历" class="headerlink" title="p27 FAT 和 UNIX 文件系统 (数据结构视角的文件系统; FAT 手册导读和目录树遍历)"></a>p27 FAT 和 UNIX 文件系统 (数据结构视角的文件系统; FAT 手册导读和目录树遍历)</h2><ul><li>数据结构的假设：数据是以字节来存储的。</li><li>RAM 和 block的区别</li><li>FAT(File Allocation Table)<ul><li>将指针集中存放在文件系统的某个区域</li><li>适合小文件</li><li>会产生碎片（fragmentation）</li><li>基本假设<ul><li>链表无环且长度和文件大小一致</li><li>FREE的cluster不能有入边</li></ul></li></ul></li><li>cluster </li><li>sector</li><li>ext2<ul><li>大文件的随机读写性能提升明显 (O(1))</li><li>支持链接 (一定程度减少空间浪费)</li><li>inode 在磁盘上连续存储，便于缓存&#x2F;预取</li><li>碎片</li></ul></li></ul><h2 id="p28-持久数据的可靠性-RAID-崩溃一致性-FSCK-和日志"><a href="#p28-持久数据的可靠性-RAID-崩溃一致性-FSCK-和日志" class="headerlink" title="p28 持久数据的可靠性 (RAID; 崩溃一致性; FSCK 和日志)"></a>p28 持久数据的可靠性 (RAID; 崩溃一致性; FSCK 和日志)</h2><ul><li>虚拟化<ul><li>cpu的虚拟化：通过分时等技术让多个进程并行，相当于虚拟出了多个cpu</li><li>内存的虚拟化：一份内存通过mmu，虚拟成每个进程的地址空间</li><li>RAID：反向的虚拟化：多个磁盘虚拟化一个磁盘</li></ul></li><li>RAID<ul><li>RAID0 : 交错排列： 提升容量和带宽</li><li>RAID1 : 提升容错和读带宽</li><li>RAID4 : 额外的一块校验盘<ul><li>致命缺陷：随机写的性能只能有校验盘性能的一半</li></ul></li><li>RAID5 : Rotating Parity</li></ul></li><li>RAID带来的联想：<br>多个磁盘虚拟化为一个又大又快又可靠的磁盘，多台电脑虚拟化为一个又大又快又可靠的电脑<br>那能不能多个神经网络虚拟化为一个更好的神经网络</li><li>崩溃一致性  (Crash Consistency)<ul><li>场景：写入的时候突然断电了怎么办？</li><li>方法1：按照一定顺序来写，且 “all or nothing”<ul><li>困难：磁盘不提供多块读写 “all or nothing” 的支持，甚至为了性能，没有顺序保证。</li></ul></li><li>方法2： File System Checking (FSCK)<ul><li>根据磁盘上已有的信息，恢复出 “最可能” 的数据结构</li><li>困难：难；如果修复的时候再掉一次电？</li></ul></li><li>方法3： 日志</li><li>具体：<ul><li>数据结构操作发生时，用 (2) append-only 记录日志</li><li>日志落盘后，用 (1) 更新数据结构</li><li>崩溃后，重放日志并清除 (称为 redo log；相应也可以 undo log)</li></ul></li><li>优化: journaling (jdb2)</li></ul></li></ul><h2 id="p30-现代存储系统-关系数据库和分布式存储系统"><a href="#p30-现代存储系统-关系数据库和分布式存储系统" class="headerlink" title="p30 现代存储系统 (关系数据库和分布式存储系统)"></a>p30 现代存储系统 (关系数据库和分布式存储系统)</h2><ul><li>数据库<ul><li>关键<ul><li>索引</li><li>查询优化</li></ul></li><li>magic：你只管写sql语句，相应的搜索优化它来做</li><li>要求：acid<ul><li>Atoming</li><li>Consistency</li><li>Isolation</li><li>Durability</li></ul></li></ul></li><li>图灵奖<ul><li>这门课听下来，听到了好多知识点背后都是获得过图灵奖的研究，甚至开创了一整个产业。</li></ul></li><li>关系型数据库跟不上社交网络的需求</li><li>cap theorem<ul><li>Consistency</li><li>Availability</li><li>Partition Tolerance</li></ul></li><li>分布式存储系统</li></ul><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>蒋炎炎这门课还是别人推荐的。第一次看到还不以为意，但出现的次数多了就觉得有必要去看看。发现是一大惊喜。</p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ol><li>原版书能看得下来了。大段的英文，之前看着有点怕，现在觉得也能看下来，并且速度还可以。</li></ol><h2 id="课外资料"><a href="#课外资料" class="headerlink" title="课外资料"></a>课外资料</h2><ul><li><a href="https://plantegg.github.io/2022/06/05/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%E5%BC%80%E9%94%80/">上下文切换的代价</a></li><li><a href="https://plantegg.github.io/2021/06/01/CPU%E7%9A%84%E5%88%B6%E9%80%A0%E5%92%8C%E6%A6%82%E5%BF%B5/">CPU的制造和概念</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>笔记</tag>
      
      <tag>操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>操作系统复习笔记</title>
    <link href="/2023/06/19/learn-os/"/>
    <url>/2023/06/19/learn-os/</url>
    
    <content type="html"><![CDATA[<h1 id="期末复习"><a href="#期末复习" class="headerlink" title="期末复习"></a>期末复习</h1><h2 id="Chpter-3-Process"><a href="#Chpter-3-Process" class="headerlink" title="Chpter 3 Process"></a>Chpter 3 Process</h2><ul><li>操作系统进行任务调度和资源分配的基本单位</li><li>Process include:<ol><li>Program code</li></ol><ul><li>text section</li></ul><p><br>2. program counter and processors’ registers<br>3. Stack</p><ul><li>Function parameters</li><li>Return address</li><li>Local variables</li></ul><ol start="4"><li>data section</li></ol><ul><li>Global variables</li></ul><ol start="5"><li>Heap</li></ol><ul><li>Dynamically allocated memory</li></ul></li><li>Process State<ul><li>五态模型<ul><li>new</li><li>ready:waiting to be assigned to a processor</li><li>waiting: waiting for some event to occur</li><li>running</li><li>terminated</li></ul></li></ul></li><li>Process control block（PCB）<ul><li>包含信息有：<ul><li>Process number</li><li>Process state</li><li>Program counter<ul><li>下条指令的地址</li></ul></li><li>CPU registers</li><li>CPU scheduling information</li><li>Memory-management information</li><li>Accounting information</li><li>I&#x2F;O status information</li></ul></li></ul></li></ul><h3 id="Process-Scheduling"><a href="#Process-Scheduling" class="headerlink" title="Process Scheduling"></a>Process Scheduling</h3><ul><li><p>Scheduling queues</p><ol><li>Job queue</li></ol><ul><li>set of all processes in the system</li><li>As processes&#x2F;job enter the system，they are put into the job queue</li></ul><ol start="2"><li>Ready queue</li></ol><ul><li>set of all processes residing in “(main) memory”, ready and “waiting” to execute</li></ul><ol start="3"><li>Device queues</li></ol><ul><li>set of processes waiting for an I&#x2F;O device</li></ul></li><li><p>Scheduler(调度器)</p><ol><li>Long-term scheduler or job scheduler</li></ol><ul><li>job queue -&gt; ready queue</li><li>may  be absent on Time-sharing system such as UNIX  and Windows<ul><li>They put every new process in memory for the short-term scheduler</li></ul></li></ul><ol start="2"><li>Short-term scheduler Or CPU scheduler: 进程调度</li></ol><ul><li>selects which process should be executed next and allocates CPU</li><li>因为其执行十分频繁，所以每次选择不能耗时太长，否则就overhead</li></ul><ol start="3"><li>Medium-term scheduler Or swapping</li></ol><ul><li>swap out: removes processes from memory to disk and reduces the degree of multiprogramming</li><li>swap in: introduce process into memory</li></ul></li><li><p>Context Switch</p><ul><li>CPU switches to another process</li></ul></li></ul><h3 id="Operations-on-Processes"><a href="#Operations-on-Processes" class="headerlink" title="Operations on Processes"></a>Operations on Processes</h3><ol><li>fork()<ul><li>The new process consists of a copy of the address space of the original process</li><li>The return code for the fork() is zero for the child process</li><li>子进程会复制父进程的地址空间和资源，但并不会复制父进程的线程</li></ul></li></ol><h3 id="Interprocess-Communication"><a href="#Interprocess-Communication" class="headerlink" title="Interprocess Communication"></a>Interprocess Communication</h3><ul><li>Shared memory</li><li>Message passing</li></ul><h3 id="名词解释："><a href="#名词解释：" class="headerlink" title="名词解释："></a>名词解释：</h3><ul><li>multiprogramming： is to have some process running at all times, to maximize CPU utilization</li><li>time sharing ： is to switch the CPU among processes so frequently that users can interact with each process</li></ul><h2 id="Chapter-4-Thread"><a href="#Chapter-4-Thread" class="headerlink" title="Chapter 4 Thread"></a>Chapter 4 Thread</h2><ul><li>进程 vs 线程<ul><li>线程是CPU的分布单位</li><li>进程是资源的分布单位</li><li>线程是进程中的执行单元<ul><li>一个进程可以包含多个线程，它们共享相同的地址空间和系统资源，如open files, signals。</li><li>每个线程有自己的栈空间和执行上下文，但它们在同一个进程内共享代码段、数据段和堆等资源。</li></ul></li></ul></li><li>benefits of multithreaded programming <ol><li>Responsiveness</li><li>Resource sharing</li><li>Economy</li><li>utilization of multiprocessor architectures</li></ol></li></ul><h3 id="Multithreading-Models"><a href="#Multithreading-Models" class="headerlink" title="Multithreading Models"></a>Multithreading Models</h3><ul><li><p>两种线程</p><ul><li>User Threads<ul><li>Provided by a thread library at the user level</li></ul></li><li>Kernel Threads<ul><li>Provided and managed by the OS directly</li></ul></li></ul></li><li><p>Relationship between kernel threads and user threads</p><ol><li>Many-to-one model</li><li>One-to-one model- </li><li>Many-to-many model</li><li>Two-level Model<ul><li>主体是Many-to-many model</li><li>A user thread (important task) can be bound to a kernel thread</li></ul></li></ol></li><li><p>Two versions of fork() in UNIX systems</p><ol><li>To duplicate all the threads<ul><li>If exec() is not called after forking, then to duplicate all threads</li></ul></li><li>To only duplicate the thread that invoked the fork() system call<ul><li>If exec() is called immediately after forking, then only to duplicate the calling threads</li></ul></li></ol></li></ul><h2 id="Chapter-5-CPU-Scheduling"><a href="#Chapter-5-CPU-Scheduling" class="headerlink" title="Chapter 5 CPU Scheduling"></a>Chapter 5 CPU Scheduling</h2><h3 id="Basic-Concepts"><a href="#Basic-Concepts" class="headerlink" title="Basic Concepts"></a>Basic Concepts</h3><ul><li>CPU scheduling decisions may take place when a process:<ol><li>Switches from running to waiting state<ul><li>The result of  an I&#x2F;O request</li><li>An invocation of wait for the termination of one of the child processes （e.g. wait(NULL);）</li></ul></li><li>Switches from running to ready state<ul><li>When a interrupt occurs</li></ul></li><li>Switches from waiting to ready<ul><li>Completion of I&#x2F;O</li></ul></li><li>Terminates</li></ol></li><li>Non-preemptive (非剥夺)<ul><li>Once the CPU has been allocated to a process, the process keeps the CPU until it releases the CPU </li><li>调度只可能发生在情况 1. 和 4.</li><li>简单，硬件要求低</li></ul></li><li>Preemptive(剥夺)</li></ul><h3 id="Scheduling-Criteria"><a href="#Scheduling-Criteria" class="headerlink" title="Scheduling Criteria"></a>Scheduling Criteria</h3><ol><li>CPU utilization</li><li>CPU throughout<ul><li>number of processes that complete their execution per time unit.</li></ul></li><li>Process turnaround time <ul><li>From the time of submission of a process to the time of completion, include<ul><li>Waiting to get into memory</li><li>Waiting in the ready queue</li><li>Executing on the CPU</li><li>Doing I&#x2F;O</li></ul></li></ul></li><li>Process waiting time (等待时间)<ul><li>amount of time that a process spent waiting in the ready queue.</li></ul></li><li>Process response time (响应时间)<ul><li>amount of the time from the submission of a request until the first response&#x2F;result is produced</li></ul></li></ol><h3 id="Scheduling-Algorithms"><a href="#Scheduling-Algorithms" class="headerlink" title="Scheduling Algorithms"></a>Scheduling Algorithms</h3><ol><li>First come first served (FCFS) <ul><li>non-preemptive</li><li>Convoy effect (护航效应)</li></ul></li><li>Shortest job first (SJF) <ul><li>minimum average waiting time </li><li>种类<ol><li>Preemptive SJF allows to preempt the currently executing process</li><li>Non-preemptive</li></ol></li><li>比较适用于长程调度</li></ul></li><li>Priority scheduling <ul><li>问题：starvation</li><li>解决： Aging (时效) – as time progresses increase the priority of the process</li></ul></li><li>Round robin (RR) <ul><li>Is designed for especially for time-sharing systems</li><li>preemptive</li><li>time quantum<ul><li>需要保证 80%的cpu bursts &lt; the time quantum</li></ul></li><li>Response time &#x3D; 2*(n-1)*q</li></ul></li><li>Multilevel queue algorithm </li><li>Multilevel feedback queue algorithm <ul><li>the most general scheduling algorithm</li></ul></li></ol><h3 id="Multiple-Processor-Scheduling"><a href="#Multiple-Processor-Scheduling" class="headerlink" title="Multiple-Processor Scheduling"></a>Multiple-Processor Scheduling</h3><ul><li>homogeneous vs. heterogeneous CPUs<ul><li>homogeneous: 各处理器都一样</li></ul></li><li>Approaches to multiple-processor scheduling<ul><li>Asymmetric multiprocessing <ul><li>only one processor (the master server) has all scheduling decision, I&#x2F;O processing</li></ul></li><li>Symmetric multiprocessing<ul><li>each processor is self-scheduling</li></ul></li></ul></li></ul><h2 id="Chapter-6-Process-synchronization"><a href="#Chapter-6-Process-synchronization" class="headerlink" title="Chapter 6 Process synchronization"></a>Chapter 6 Process synchronization</h2><ul><li>Race condition <ul><li>The situation where several processes access and manipulate shared data concurrently. </li><li>The final value of the shared data depends upon which process finishes last.</li></ul></li></ul><h3 id="The-Critical-Section-Problem"><a href="#The-Critical-Section-Problem" class="headerlink" title="The Critical-Section Problem"></a>The Critical-Section Problem</h3><ul><li><p>critical section</p><ul><li>Each process has a code segment, called critical section, in which the shared data is accessed</li><li>有几个共享变量就有几个临界区</li></ul></li><li><p>Criteria for the critical section problem solution</p><ol><li>Mutual exclusion 互斥</li><li>progress 空闲让进</li><li>Bounded waiting 有限等待</li></ol></li><li><p>Peterson’s Solution</p><ul><li>举手+令牌</li></ul></li><li><p>hardware-based solution </p><ul><li>关中断<ul><li>多处理机不适合</li></ul></li><li>原子操作</li></ul></li></ul><h3 id="Semaphores"><a href="#Semaphores" class="headerlink" title="Semaphores"></a>Semaphores</h3><ul><li><p>A Semaphore S – integer variable</p><ul><li>may be initialized via a non-negative value</li><li>Can only be accessed via two indivisible (atomic) operations: P() and V()</li></ul></li><li><p>P(): the wait() operation</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gcode">wait <span class="hljs-comment">(S)</span> &#123; <br>  <span class="hljs-keyword">while</span> <span class="hljs-comment">(S.value &lt;= 0)</span> ; <span class="hljs-comment">// no-op</span><br>    S.value--;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>V() The signal() operation</p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-title function_">signal</span>(<span class="hljs-params">S</span>)&#123;<br>  <span class="hljs-variable">S</span>.<span class="hljs-property">value</span><span class="hljs-operator">+</span><span class="hljs-operator">+</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>main problem : busy waiting (spinlock)</p><ul><li>advantages<ol><li>No context switch is required when a process must wait on a lock</li><li>If locks are expected to be held for short times, the spinlocks are useful</li></ol></li><li>disadvantages<ol><li>wastes the CPU cycles that can be used by other processes productively</li></ol></li><li>解决：modify the definition of the wait() and signal() <strong>适用于 multiprocessor system</strong><ul><li>Wait(): the process can block() itself rather than engaging in busy waiting</li><li>Signal(): change the blocking process from the waiting state to the ready state</li></ul></li></ul></li><li><p>implementation</p><ol><li>In a single-processor environment</li></ol><ul><li>Disable interrupt</li></ul><ol start="2"><li>In a multi-processor environment</li></ol><ul><li>Critical section can be applied</li></ul></li></ul><h2 id="Chapter-7-Deadlocks"><a href="#Chapter-7-Deadlocks" class="headerlink" title="Chapter 7 Deadlocks"></a>Chapter 7 Deadlocks</h2><ul><li>Necessary conditions<ol><li>Mutual exclusion</li><li>Hold and wait </li><li>No preemption</li><li>Circular wait</li></ol></li></ul><h3 id="Methods-for-Handling-Deadlocks"><a href="#Methods-for-Handling-Deadlocks" class="headerlink" title="Methods for Handling Deadlocks"></a>Methods for Handling Deadlocks</h3><ol><li><p>Prevention</p><ul><li>Provides a set of methods for ensuring that at least one of necessary conditions cannot be held</li><li>针对条件2： all or nothing; 没有资源的时候才去申请</li><li>针对条件3： 谦让； 抢夺</li><li>针对条件4： 顺序执行</li><li>缺点： low device utilization and reduce system throughput.</li></ul></li><li><p>Avoidance </p><ul><li>using the addition information,decide whether the current request can be satisfied or must be delay</li><li>方法：<ol><li>Resource-allocation graph<ul><li>有环：处于unsafe state;可能处于死锁状态</li></ul></li><li>Banker’s algorithm</li></ol></li></ul></li><li><p>Detection and recovery</p><ul><li>方法:<ul><li>Wait-for graph <ul><li>not appilcable to a resource-allocation system with multiple instances of each resource type</li></ul></li><li>Banker’s Algorithm</li></ul></li><li>When, and how often, to invoke detection algorithm. it depends on:<ul><li>How often a deadlock is likely to occur?</li><li>How many processes will need to be rolled back?</li></ul></li></ul></li><li><p>Ignorance</p></li></ol><h2 id="Chapter-8"><a href="#Chapter-8" class="headerlink" title="Chapter 8"></a>Chapter 8</h2><ul><li><p>Address may be represented in </p><ol><li>symbolic address</li><li>re-locatable address</li><li>absolute address</li></ol></li><li><p>address binding </p><ul><li>转换：<ul><li>symbolic address -&gt; re-locatable address : compiler</li><li>re-locatable address -&gt; absolute address : linkage editor or loader</li></ul></li><li>发生的时期<ol><li>Compile time<ul><li>If memory location known at compile time, absolute code can be generated</li><li>If memory location is not known at compile time, Must generate re-locatable code</li></ul></li><li>Load time （+linkage time）<ul><li>if memory location is known at load time, absolute code can be generated at this time</li></ul></li><li>Execution time<ul><li>If memory location is not known at compile time and load time, Binding is delayed until run time</li><li>absolute code must be generated at run time</li></ul></li></ol></li></ul></li></ul><h3 id="Logical-vs-Physical-Address-Space"><a href="#Logical-vs-Physical-Address-Space" class="headerlink" title="Logical vs. Physical Address Space"></a>Logical vs. Physical Address Space</h3><ul><li><p>Logical address ：CPU</p><ul><li>also referred to as virtual address</li><li>重定位地址和逻辑地址没有直接关系</li></ul></li><li><p>Physical address ：memory unit </p></li><li><p>logical (virtual) and physical addresses differ in execution-time address-binding scheme</p><ul><li>re-locatable code are seen by CPU</li><li>absolute code are seen by the memory unit</li></ul></li><li><p>Memory-Management Unit (MMU)</p><ul><li>Hardware device that maps virtual address to physical address in the run-time</li></ul></li><li><p>Dynamic load</p><ul><li>not loaded the entire program and data of a process be in physical memory for the process to execute until it is called</li><li>好处： <ol><li>Better memory-space utilization</li><li>No special support is required from the operating system</li></ol></li></ul></li><li><p>Dynamic linking</p><ul><li>Linking is postponed until execution time</li><li>requires help from the OS</li></ul></li></ul><h3 id="Contiguous-Memory-Allocation"><a href="#Contiguous-Memory-Allocation" class="headerlink" title="Contiguous Memory Allocation"></a>Contiguous Memory Allocation</h3><ol><li>Fixed-Sized Contiguous Partition<ul><li>Strengths (advantages)<ul><li>Simple to implement</li><li>little overhead</li></ul></li><li>Weaknesses(drawbacks)<ul><li>internal fragmentation<ul><li>allocated memory may be larger than requested memory</li></ul></li><li>fixed number of processes</li></ul></li></ul></li><li>Dynamic Contiguous partition（可变分区）<ul><li>Hole – block of available memory</li><li>Allocation algorithms <ol><li>first fit:<ul><li>从头开始，或者是从当前位置开始</li></ul></li><li>best-fit <ul><li>Need to search all entire list, unless the list is ordered by size</li><li>produces the smallest leftover hole that may be wasted</li></ul></li><li>worst-fit<ul><li>Need to search all entire list, unless the list is ordered by size</li><li>小进程多的 效果好</li></ul></li></ol></li><li>问题：<ul><li>External Fragmentation</li></ul></li></ul></li></ol><ul><li><p>Solutions to fragmentation</p><ol><li>Compaction(紧凑)<ul><li>To reduce external fragmentation</li><li>Shuffle memory contents to place all free memory together in one large block</li><li>It is done at execution time， it’s possible only if relocation is dynamic</li><li>May be expensive in moving the processes and the holes</li></ul></li><li>paging</li><li>segmentation</li></ol></li><li><p>Disadvantage of Contiguous Memory Allocation</p><ul><li>Fragmentation in main memory</li><li>Compaction is impossible on the disk</li></ul></li></ul><h3 id="paging"><a href="#paging" class="headerlink" title="paging"></a>paging</h3><ul><li><p>frame: Divide physical memory into fixed-sized blocks </p></li><li><p>page : Divide logical memory into fixed-sized blocks </p><ul><li>page size is equal to frame size</li><li>Finding n free frames for loading a program of size n pages</li></ul></li><li><p>Translating logical address to physical address<br>If the address space is 2^m and the page size is 2^n</p><ul><li>Every logical address generated by CPU is divided into:<ol><li>Page number (p: 页号) <ul><li>used as an index into a page table</li><li>页表中包含每一页在physical memory 的 base address (f:块号)</li><li>p &#x3D;address&#x2F;2^n   is equal to m-n bit of the address</li></ul></li><li>Page offset (d: 偏移) <ul><li>combined with base address (f:块号) to define the physical memory address that is sent to the memory unit</li><li>d &#x3D;address%2n is equal to n bit of the address</li></ul></li></ol></li><li>Physical address <ol><li>frame number（f: 帧号、块号)</li><li>page offset      (d:页偏移、块偏移)</li></ol></li></ul></li><li><p>page size的选择</p><ul><li>越大： <ul><li>Disk I&#x2F;O is more efficient</li><li>page table size 越小</li></ul></li><li>越小：<ul><li>internal fragmentation 越小</li></ul></li></ul></li><li><p>Frame table (主存分块表)</p><ul><li>Has one entry for each physical page frame<br>Indicating <ul><li>whether the frame is free or it is allocated to which process</li></ul></li></ul><p></p></li><li><p>page table</p><ul><li>each process must maintain a copy of the page table </li><li>计算<ul><li>if page-table entry is 4 bytes long<ul><li>Can point to one of 2^32 physical page frames (1比特&#x3D;8字节)</li><li>If frame size(&#x3D; page size) is 4KB, the system can address 2^44 bytes(2^32×2^12&#x3D;16TB) of physical memory</li></ul></li><li>对于32位cpu<ul><li>page size: 4k (&#x3D;2^12)</li><li>Table size：2^32&#x2F;2^12&#x3D;1M </li><li>each entry’s size : 4 bytes</li><li>page table 的大小为： 4 MB</li></ul></li></ul></li><li>位置<ol><li>直接存放在寄存器中：<ul><li>Efficient and expensive</li><li>当page table is reasonable small 时可以</li></ul></li><li>存放在main memory ，然后用Page-table base register (PTBR：页表基址寄存器)存放其位置<ul><li>进程切换时，加载页表只需要改变PTBR</li><li>every data&#x2F;instruction access requires two memory accesses<ul><li>One for the page table</li><li>One for the data&#x2F;instruction</li></ul></li></ul></li><li>Translation Look-aside Buffer (TLB) also called Associate Memory(联想寄存器)<ul><li>并行查找</li><li>contains only a few of page-table entries</li></ul></li></ol></li></ul></li></ul><h3 id="Structure-of-the-Page-Table"><a href="#Structure-of-the-Page-Table" class="headerlink" title="Structure of the Page Table"></a>Structure of the Page Table</h3><ul><li>问题: The page table can be excessively large</li><li>Solution： Divide the page table into smaller pieces<ol><li>Hierarchical Paging （分层页表）</li><li>Hashed Page Tables（哈希页表）</li><li>Inverted Page Tables（反置页表）</li></ol></li></ul><ol><li>Hierarchical Paging （分层页表）<ul><li>缺陷：</li></ul><ol><li>需遍历，进程太多</li><li>可能有共享，而进程号只能填一个</li><li>不适用于64位</li></ol><ul><li>好：<ol><li>需要的空间小</li></ol></li></ul></li><li>Hashed Page Tables<ul><li>hash table -&gt; 在链表中遍历匹配</li></ul></li><li>Inverted Page Table(反置页表&#x2F;主存分块表)</li></ol><ul><li>Only a page table in the system</li><li>One entry for each real page (or physical frame) of memory</li><li>缺点：<ul><li>increases time needed to search the table when a page reference occurs</li><li>Lead to memory share difficulty</li></ul></li></ul><h3 id="segmentation"><a href="#segmentation" class="headerlink" title="segmentation"></a>segmentation</h3><ul><li>User’s View of a Program: A program is a collection of segments，a segment is a logical unit such as:<ul><li>main program<ul><li>procedure ，function，method，object</li><li>local variables, global   variables</li><li>common block</li><li>stack</li><li>symbol table</li><li>arrays</li></ul></li></ul></li></ul><h2 id="Chapter-9-Virtual-Memory"><a href="#Chapter-9-Virtual-Memory" class="headerlink" title="Chapter 9 Virtual Memory"></a>Chapter 9 Virtual Memory</h2><ul><li><p>the entire program is not needed to be in physical memory.这样的好处有：</p><ul><li>程序的大小不再受内存所限制</li><li>更多程序可以同时运行</li><li>Less I&#x2F;O would be needed to load or swap each user program into memory, so program would start to run faster</li></ul></li><li><p>Virtual memory management </p><ul><li>a term used to describe a technique whereby the computer appears to have much more memory than it actually does</li></ul></li><li><p>Virtual memory can be implemented via:</p><ul><li>Demand paging </li><li>Demand segmentation</li></ul></li></ul><h3 id="Demand-paging"><a href="#Demand-paging" class="headerlink" title="Demand paging"></a>Demand paging</h3><ul><li><p>思想： Bring a page into memory only when it is needed</p><ul><li>Be similar to a paging system with swapping</li></ul></li><li><p>Hardware</p><ul><li>Page table. 需要加一位valid–invalid bit <ul><li>v -》 The page is legal and in memory</li></ul></li><li>Secondary memory<ul><li>A high-speed disk, Swap space</li><li>Hold those page that are not present in memory</li></ul></li></ul></li><li><p>Page Fault</p><ul><li>Access to a page marked invalid causes a page-fault trap</li><li>handle<ol><li>Operating system looks at another table (PCB) to decide:<ul><li>Invalid reference -&gt; abort</li><li>Just not in memory（go on to 2））</li></ul></li><li>Get empty frame</li><li>Swap the desired page into the frame</li><li>modify the page table, Set validation bit &#x3D; v</li><li>Restart the instruction that caused the page fault</li></ol></li><li>特殊：<ol><li>一条指令可产生多个缺页中断</li><li>指令复执</li><li>在指令执行时中断。</li></ol></li><li>对比普通中断：<ul><li>一条指令在执行完后，检查是否有中断请求<ul><li>有：执行中断</li><li>无：执行下一条指令</li></ul></li></ul></li></ul></li></ul><h3 id="Page-Replacement"><a href="#Page-Replacement" class="headerlink" title="Page Replacement"></a>Page Replacement</h3><p><strong>替换算法</strong></p><ol><li><p>FIFO page Replacement</p><ul><li>Belady’s Anomaly : more frames -&gt; more page faults</li></ul></li><li><p>Optimal Page Replacement (OPT) </p><ul><li>替换最晚才用的页 或 后面最长时间用不到的页</li></ul></li><li><p>Least Recently Used (LRU) Algorithm</p><ul><li>思想： The recent past as an approximation of the near future</li><li>实现：</li><li>counters</li><li>stack</li></ul></li><li><p>LRU Approximation Algorithms</p><ol><li>Additional-reference-bits algorithm</li><li>Second chance (clock) </li><li>Enhanced second-chance algorithm</li></ol></li><li><p>Counting-Based Page Replacement </p><ul><li>Least Frequently used </li><li>Most Frequently used</li></ul></li><li><p>Page-Buffering Algorithm</p><ul><li>Assistant procedure to a page-replacement algorithm</li></ul></li></ol><h3 id="Allocation-of-Frames"><a href="#Allocation-of-Frames" class="headerlink" title="Allocation of Frames"></a>Allocation of Frames</h3><ul><li><p>Two major allocation schemes</p><ol><li>fixed allocation<ul><li>Equal allocation</li><li>Proportional allocation</li></ul></li><li>priority allocation<ul><li>Use a proportional allocation scheme using priorities rather than size</li></ul></li></ol></li><li><p>Global vs. Local Allocation</p><ol><li>Local replacement<ul><li>To allow a process to select from only its own set of allocated frames. </li><li>Cannot increase the number of frames allocated</li><li>Not affected by external circumstances</li></ul></li><li>Global replacement<ul><li>To allow a process to select a replacement frame from the set of all frames, even if that frame is currently allocated to some other process</li><li>Can increase the number of frames allocated</li><li>Cannot control its page-fault rate.</li></ul></li></ol><ul><li>In general, global replacement is better.</li></ul></li></ul><h3 id="Thrashing"><a href="#Thrashing" class="headerlink" title="Thrashing"></a>Thrashing</h3><ul><li>A process is thrashing （颠簸）if it is spending more time paging than executing</li><li>approach<ol><li>Using a local replacement algorithm</li><li>Working-set strategy <ul><li>To compute the working-set size for each process in the system</li></ul></li><li>Page-Fault Frequency (PFF) Scheme  (水多了加面，面多了加水)<ul><li>If actual rate too low, remove  a frame from the process</li><li>If actual rate too high, allocate another frame to the process</li><li>If no frames are free, suspend it</li></ul></li></ol></li></ul><h3 id="Other-Considerations"><a href="#Other-Considerations" class="headerlink" title="Other Considerations"></a>Other Considerations</h3><ul><li>page size 大小的选择要考虑到：<ol><li>内碎片</li><li>页表的大小</li><li>I&#x2F;O overhead (seek time, latency time, transfer time)</li><li>Locality</li><li>Page fault rate<ul><li>顺序访问： page size越大，则缺页中断率越小</li><li>随机访问： page size越大，则more paging action could ensue because fewer pages can be kept in memory and more data is transferred per page fault.</li></ul></li></ol></li><li>Install a faster hard disk, or multiple controllers with multiple hard disks<ul><li>for as the disk bottleneck is removed by faster response and more throughput to the disks, the CPU will get more data more quickly</li></ul></li></ul><h2 id="Chapter-10-File-System-Interface"><a href="#Chapter-10-File-System-Interface" class="headerlink" title="Chapter 10 File-System Interface"></a>Chapter 10 File-System Interface</h2><ul><li>File <ul><li>A file is named collection of related information that is recorded on secondary storage</li><li>Six basic operations<ol><li>create</li><li>read&#x2F;write&#x2F;seek</li><li>delete</li><li>truncate: to erase the contents of a file but keep its attributes except for it’s length</li></ol></li><li>Assistant operations<ul><li>open(F):<ol><li>search the directory structure on disk for entry F</li><li>copy the directory entry into the open-file table</li><li>allocate a file descriptor</li></ol></li><li>close(F):<ol><li>copy the directory entry in the open-file table to the directory structure on disk</li><li>free the file descriptor</li></ol></li></ul></li></ul></li></ul><h3 id="Access-Methods"><a href="#Access-Methods" class="headerlink" title="Access Methods"></a>Access Methods</h3><ul><li>The information in the file can be accessed in<ol><li>sequentical access</li><li>direct access</li><li>other access <ul><li>involve the construction of an index for the file</li></ul></li></ol></li></ul><h3 id="Directory-Structure"><a href="#Directory-Structure" class="headerlink" title="Directory Structure"></a>Directory Structure</h3><ul><li><p>symbol table </p><ul><li>The directory can be viewed as a symbol table that translates file names into their directory entries</li></ul></li><li><p>Criteria </p><ol><li>efficiency</li><li>naming</li><li>grouping</li></ol></li><li><p>shemes </p><ol><li>Single-Level Directory</li><li>Two-Level Directory<ul><li>Positive<ul><li>Efficient searching</li></ul></li><li>Negative<ul><li>No grouping capability</li><li>Difficult to share file among different users</li></ul></li></ul></li><li>Tree-Structured Directories<ul><li>Positive<ul><li>Efficient searching</li><li>Grouping Capability</li></ul></li><li>Negative<ul><li>Difficult to share file among different users</li></ul></li></ul></li><li>Acyclic-Graph Directories<ul><li>Tree-structured directory + shared subdirectories or files</li><li>Created a new directory entry  called a link to implement sharing</li><li>The difficulty is to avoid cycles as new links are added</li></ul></li><li>General Graph Directory<ul><li>Add the links to an existing tree-structure directory</li><li>Acyclic-Graph Directories更好</li></ul></li></ol></li><li><p>硬（hard）链接 </p><ul><li><code>ln /usr/local/python3 python</code></li><li>目录中仅存储指向文件数据的指针</li><li>允许一个文件被多个目录引用.</li><li>无法用来链接目录，也不能跨文件系统</li><li>通过<code>ls -i</code>查看是否为硬链接</li></ul></li><li><p>软 (symbolic) 链接</p><ul><li>“快捷方式”</li><li>软链接也是一个文件</li><li><code> ln -s ../p24 p24</code> </li><li>目录从“树”变为了“图”，还是有环图</li></ul></li><li><p>ACL: access-control list</p><ul><li>Each file or directory has an ACL</li></ul></li></ul><h2 id="File-System-Implementation"><a href="#File-System-Implementation" class="headerlink" title="File-System Implementation"></a>File-System Implementation</h2><ul><li>File system organized into layers<ol><li>application program</li><li>logical file system<ul><li>FCB: file control blocks</li></ul></li><li>file-organizational module</li><li>basic file system</li><li>I&#x2F;O control</li><li>devices</li></ol></li></ul><h3 id="Allocation-Methods"><a href="#Allocation-Methods" class="headerlink" title="Allocation Methods"></a>Allocation Methods</h3><ul><li><p>An allocation method refers to how disk blocks are allocated for files</p></li><li><p>Contiguous allocation</p><ul><li>Each file occupies a set of contiguous blocks on the disk</li><li>Supports both sequential access and direct access （Random access）</li><li>问题：<ol><li>External fragmentation </li><li>Files cannot grow</li></ol></li></ul></li><li><p>Linked allocation</p><ul><li>Each file is a linked list of disk blocks: blocks may be scattered anywhere on the disk</li><li>优点<ol><li>容易实现</li><li>无外碎片</li><li>文件增长方便</li></ol></li><li>缺点：<ol><li>No random access</li><li>Poor reliability</li><li>慢（链表是保存在磁盘上的，所以需要多次查询）</li></ol></li><li>改进： File-allocation table (FAT) <ul><li>把链表信息放到了一个单独的FAT表中，而不是各个数据块中，且进行备份</li></ul></li></ul></li><li><p>Indexed allocation</p><ul><li><p>Bringing all the pointers together into one location: index block </p></li><li><p>Solutions to large files</p><ol><li>Linked sheme<ul><li>Link blocks of index table</li></ul></li><li>Multilevel index</li><li>Combined scheme<ul><li>一部分是 direct pointers ，一部分是multi-indirect block</li></ul></li></ol></li><li><p>Criteria</p><ol><li>storage utilization efficiency</li><li>data block access time</li></ol><ul><li>Contiguous allocation: Good for known-size file</li><li>Linked allocation: Good for storage utilization </li><li>Indexed allocation: Access time depends on index structure, file size, block position</li></ul></li></ul></li></ul><h3 id="Free-Space-Management"><a href="#Free-Space-Management" class="headerlink" title="Free-Space Management"></a>Free-Space Management</h3><ul><li>The free-space list 的实现<ol><li>Bit vector<ul><li>优点<ul><li>Simple to implement </li><li>Efficient to find the first free block</li></ul></li><li>缺点<ul><li>Bit map requires extra space</li><li>Inefficient unless the entire vector is kept in main memory</li></ul></li></ul></li><li>Linked Lists (free list)<ul><li>优点<ul><li>No waste of space</li></ul></li><li>缺点<ul><li>Inefficient when traversing the list</li></ul></li></ul></li><li>Grouping</li></ol><ul><li>The first free block store the addresses of n free blocks</li><li>Easier to find a large number of free blocks</li></ul></li></ul><h2 id="Mass-Storage-Systems"><a href="#Mass-Storage-Systems" class="headerlink" title="Mass-Storage Systems"></a>Mass-Storage Systems</h2><ul><li><p>Magnetic disk’s structure</p><ul><li>Disk platter</li><li>track</li><li>sector<ul><li>each track is subdivided into several sectors</li></ul></li><li>cylinder<ul><li>is the set of tracks that are at one arm position</li></ul></li></ul></li><li><p>CLV vs. CAV</p><ol><li>ClV : constant linear velocity<ul><li>CD-ROM， DVD-ROM</li><li>Tracks in the outermost zone hold more sectors</li></ul></li><li>CAV : constant angular velocity<ul><li>Magnetic disk</li><li>The density of bits decreases from inner tracks to outer tracks to keep the data rate constant</li></ul></li></ol></li></ul><h3 id="Disk-Scheduling"><a href="#Disk-Scheduling" class="headerlink" title="Disk Scheduling"></a>Disk Scheduling</h3><ul><li>Access time <ol><li>Seek time is the time for the disk are to move the heads to the cylinder containing the desired sector<ul><li>Seek time  seek distance</li></ul></li><li>Rotational latency<ul><li>waiting for the disk to rotate the desired sector to the disk head</li></ul></li></ol></li><li>Disk bandwidth<ul><li>The total number of bytes transferred &#x2F; the total time  between the first request for service and the completion of the last transfer</li></ul></li></ul><ol><li>FCFS Scheduling</li><li>SSTF：Shortest-seek-time-first (SSTF)<ul><li>最短寻道时间优先</li><li>问题：<ul><li>往返跑—距离很短，但速度不一定很快</li><li>may cause starvation of some requests</li></ul></li></ul></li><li>SCAN</li></ol><ul><li>Sometimes called the elevator algorithm</li></ul><ol start="4"><li>C-SCAN (Circular SCAN)</li></ol><ul><li>The head moves from one end of the disk to the other, servicing requests as it goes</li><li>When it reaches the other end, however, it immediately returns to the beginning of the disk, without servicing any requests on the return trip</li><li>回途不载客</li></ul><ol start="5"><li>LOOK &#x2F; C-LOOK</li></ol><ul><li><p>Similar to SCAN&#x2F;C-SCAN  </p></li><li><p>Arm only goes as far as the last request in each direction, then reverses direction immediately, without first going all the way to the end of the disk.</p></li><li><p>选择<br><strong>Performance depends on the number and types of requests</strong></p><ul><li>SCAN and C-SCAN perform better for systems that place a heavy load on the disk</li><li>Either SSTF or LOOK is a reasonable choice for the default algorithm</li></ul></li></ul><h3 id="Disk-Management"><a href="#Disk-Management" class="headerlink" title="Disk Management"></a>Disk Management</h3><ul><li>Disk formatting<ul><li>Low-Level Formatting (physical formatting )<ul><li>Dividing a disk into sectors that the disk controller can read and write</li></ul></li><li>logical Formatting<ul><li>Creation of a file system</li><li>Build the metadata structures for a file system</li></ul></li></ul></li></ul><h3 id="RAID-Structure"><a href="#RAID-Structure" class="headerlink" title="RAID Structure"></a>RAID Structure</h3><ul><li><p>Redundant Array of Inexpensive Disks (past)</p></li><li><p>Redundant Array of Independent Disks (now)</p><ul><li>Used for their higher reliability and higher data-transfer rate(performance)</li></ul></li><li><p>levels</p><ol><li>RAID 0<ul><li>Disk arrays with data striping at the level of blocks but without any redundancy</li></ul></li><li>RAID 1<ul><li>Disk mirroring</li></ul></li><li>RAID 2<ul><li>Bit-level striping or Byte-level striping</li><li>Memory-style error-correcting-code (ECC)</li></ul></li><li>RAID 3<ul><li>Bit-interleaved parity</li></ul></li><li>RAID 4<ul><li>Block-interleaved parity organization</li></ul></li><li>RAID 5<ul><li>Block-interleaved distributed parity</li></ul></li></ol></li></ul><hr><h2 id="常用单词"><a href="#常用单词" class="headerlink" title="常用单词"></a>常用单词</h2><ul><li>simultaneously : 同时地</li><li>idle : 空闲，懒</li><li>reside : 位于，居住</li><li>uni-processor : 单处理器</li><li>interleave: 交织</li><li>allocation : 分配</li><li>dashed line ： 虚线</li><li>minuscule : 微小的</li><li>concrete : 具体的</li><li>mandatory: 强制的</li><li>mediate : 调解</li><li>strip : 脱掉；条</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软工导论复习笔记</title>
    <link href="/2023/06/16/learn-introdue-to-se/"/>
    <url>/2023/06/16/learn-introdue-to-se/</url>
    
    <content type="html"><![CDATA[<h1 id="软工导论复习"><a href="#软工导论复习" class="headerlink" title="软工导论复习"></a>软工导论复习</h1><h2 id="Chapter-0"><a href="#Chapter-0" class="headerlink" title="Chapter 0"></a>Chapter 0</h2><ul><li><p>软件工程提出时间：1968年</p><p>  1968年北大西洋公约组织(NATO)的计<br>  算机科学家在联邦德国召开国际会议，<br>  讨论软件危机问题，正式提出了“软件<br>  工程”。</p></li></ul><h2 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h2><ul><li>The nature of software<br>Developed &#x2F; Deteriorates &#x2F; Custom built&#x2F; Complex</li></ul><h2 id="Chapter-2"><a href="#Chapter-2" class="headerlink" title="Chapter 2"></a>Chapter 2</h2><ul><li><p>软件工程定义</p><ol><li>The application of a systematic,<br>  disciplined, quantifiable approach to the<br>  development, operation, and maintenance<br>  of software; that is, the application of<br>  engineering to software.</li><li>The study of approaches as in (1).</li></ol></li><li><p>Software Process</p><ul><li>why: 需要及时的反馈</li><li>Process framework <ul><li>Framework activities<ul><li>Communication</li><li>Planning</li><li>Modeling<ol><li>需求分析</li><li>设计</li></ol></li><li>Construction<ol><li>代码</li><li>测试</li></ol></li><li>Deployment</li></ul></li><li>Umbrella Activities 庇护活动（普适性活动）<ul><li>Software project tracking and control</li><li>Risk management</li><li>Software quality assurance</li><li>Technical reviews</li><li>Measurement</li><li>Software configuration management</li><li>Reusability management</li><li>Work product preparation and production</li></ul></li></ul></li></ul></li><li><p>Software Lifecycle</p><ul><li>软件有一个孕育、诞生、成长、成熟、<br>衰亡的生存过程。这个过程即为计算机<br>软件的生命周期(生存周期)</li><li>why need<ul><li>从时间角度对软件开发和维护的复杂问题进行分解，把软件生存的漫长周期依次划分为若干个阶段，每个阶段有相对独立的任务，然后再逐步完成每个阶段的任务。</li><li>为软件人提供一个公共的框架，以便软件人的相互交流。</li></ul></li></ul></li></ul><h2 id="Chapter-4"><a href="#Chapter-4" class="headerlink" title="Chapter 4"></a>Chapter 4</h2><ul><li>Evolutionary Models<ul><li>prototype<ul><li>类型<ul><li>探索型(exploratory prototyping) 弄清需求</li><li>实验型(experimental prototyping)  验证方案</li><li>演化型(evolutionary prototyping)</li></ul></li><li>特征<ul><li>可实际运行</li><li>它没有固定的生存期。它可能被扔掉，或者作为最终产品的一部分。</li><li>可为不同目标作原型</li><li>快速、廉价</li><li>是迭代过程的集成部分，即每次经用户评价后修改、运行，不断重复双方认可。</li></ul></li></ul></li></ul></li></ul><h2 id="Chapter-5"><a href="#Chapter-5" class="headerlink" title="Chapter 5"></a>Chapter 5</h2><ul><li>敏捷宣言<ul><li>个体和互动 高于 流程和工具</li><li>工作的软件 高于 详尽的文档</li><li>客户合作 高于 合同谈判</li><li>响应变化 高于 遵循计划</li></ul></li><li></li></ul><h2 id="Chapter-7"><a href="#Chapter-7" class="headerlink" title="Chapter 7"></a>Chapter 7</h2><h3 id="Requirements-Engineering"><a href="#Requirements-Engineering" class="headerlink" title="Requirements Engineering"></a>Requirements Engineering</h3><ul><li>Inception</li><li>Elicitation</li><li>Elaboration</li><li>Negotiation</li><li>Specification<ul><li>根据需求调查和需求分析的结果，进一步定义准确无误的产品需求，产生《产品需求规格说明书》</li></ul></li><li>Validation</li><li>Requirements management</li></ul><h3 id="Quality-Function-Deployment"><a href="#Quality-Function-Deployment" class="headerlink" title="Quality Function Deployment"></a>Quality Function Deployment</h3><ol><li>功能部署——确定系统功能的价值</li><li>信息部署——确定数据对象和事件</li><li>任务部署——确定系统的行为</li><li>价值分析——确定需求的优先级</li></ol><h3 id="Non-Functional-Requirements"><a href="#Non-Functional-Requirements" class="headerlink" title="Non-Functional Requirements"></a>Non-Functional Requirements</h3><ul><li>quality attribute</li><li>performance attribute</li><li>security attribute</li><li>general system constraint</li></ul><h3 id="diagrams"><a href="#diagrams" class="headerlink" title="diagrams"></a>diagrams</h3><p>Use-case &#x2F; Class &#x2F; State &#x2F; Activity</p><h2 id="Chapter-11"><a href="#Chapter-11" class="headerlink" title="Chapter 11"></a>Chapter 11</h2><ul><li>Analysis model<ul><li>focus on describing required data, function and behavior</li></ul></li></ul><h3 id="Design-model"><a href="#Design-model" class="headerlink" title="Design model"></a>Design model</h3><ul><li>provide detail about software data structure, architecture, interfaces and components</li><li>4 kinds<ul><li>Data&#x2F;Class design——将分析类转换为实现类和数据结构</li><li>Architectural design——定义主要软件结构元素之间的关系</li><li>Interface design——定义软件元素、硬件元素和最终用户如何通信</li><li>Component-level design——转换结构元素到软件组件的过程描述中</li></ul></li></ul><h3 id="concepts"><a href="#concepts" class="headerlink" title="concepts"></a>concepts</h3><ul><li>Architecture-软件的整体结构<ul><li>体现了系统的模块化,抽象和信息隐藏,接口设计</li><li>举例<ul><li>客户-服务器架构（Client-Server Architecture）</li><li>微服务架构（Microservices Architecture）</li><li>事件驱动架构（Event-Driven Architecture）</li><li>分层架构（Layered Architecture）</li></ul></li></ul></li><li>Pattern<ul><li>The goal of a pattern：easy to reuse.</li><li>types:<ul><li>Architecture Pattern<ul><li>B&#x2F;S, C&#x2F;S</li></ul></li><li>Design Pattern</li><li>Idiom<ul><li>a low-level pattern specific to a programming language</li></ul></li></ul></li></ul></li><li>Functional Independence<ul><li>Cohesion 内聚<ul><li>an indication of the relative functional strength of a module</li><li>功能内聚 分层内聚 通信内聚 顺序内聚 过程内聚 时间内聚 实用内聚（由高到低排列）</li></ul></li><li>Coupling 耦合<ul><li>an indication of the relative interdependence among modules</li><li>非直接耦合 数据耦合 标记耦合 控制耦合 外部耦合 共用耦合 内容耦合 （ 由低到高排列）</li></ul></li><li>goal: 高内聚，低耦合</li></ul></li></ul><h2 id="Chapter12-Behavioral-Modeling"><a href="#Chapter12-Behavioral-Modeling" class="headerlink" title="Chapter12 Behavioral Modeling"></a>Chapter12 Behavioral Modeling</h2><ul><li>what<br> the structure of the system, which comprise the software components, the externally visible properties of those components, and the relationships among them</li><li>The importance of architecture<ul><li>for communication between all parties (stakeholders)</li><li>highlights early design decisions</li><li>constitutes a relatively small, intellectually graspable mode</li></ul></li><li>架构有什么用<ul><li>分析设计在满足其规定要求方面的有效性</li><li>在进行设计更改仍然相对而言的阶段考虑架构替代方案容易</li><li>降低与软件构建相关的风险</li></ul></li></ul><h3 id="Architecture-Style"><a href="#Architecture-Style" class="headerlink" title="Architecture Style"></a>Architecture Style</h3><ul><li>定义内容<ul><li>一组执行系统所需功能的构件</li><li>一组连接器，可以实现“通信、协调和组件之间的合作”</li><li>定义组件如何集成以形成系统的约束</li><li>语义模型，使设计人员能够通过分析系统组成部分的已知特性来理解系统的整体属性</li></ul></li><li>种类<ul><li>数据流架构——批处理、管道和过滤器</li><li>调用和返回架构——主程序&#x2F;子程序、面向对象系统、分层系统</li><li>独立组件架构——事件系统、触发器、监视器</li><li>虚拟机架构——解释器，基于规则的系统</li><li>仓库架构——数据库系统，黑板系统等</li></ul></li></ul><h2 id="Chapter13-Component-Level-Design"><a href="#Chapter13-Component-Level-Design" class="headerlink" title="Chapter13 Component Level Design"></a>Chapter13 Component Level Design</h2><ul><li>一个模块化的、可部署的、可替换的系统部分，它封装了实现并公开了一组接口。</li></ul><h3 id="Basic-Design-Principles"><a href="#Basic-Design-Principles" class="headerlink" title="Basic Design Principles"></a>Basic Design Principles</h3><ol><li>开闭原则（OCP）——一个模块 [组件] 应该对扩展开放但对修改关闭</li><li>里氏替换原则（LSP）—— “子类应该可以替代它们的基类。</li><li>依赖倒置原则（DIP）——依赖于抽象。不要依赖实体<ul><li>高层模块应该依赖于抽象（接口或抽象类）</li><li>抽象不应该依赖于具体实现，具体实现应该依赖于抽象</li></ul></li><li>接口分离原则 (ISP)——许多专用的接口都比一个通用接口好</li><li>发布重用等效原则 (REP)——重用的粒度就是发布的粒度</li><li>共同闭合原则（CCP）——同时修改的类应该放在一起</li><li>共同重用原则（CRP）——不能同时复用的类不应该放在一起</li></ol><h2 id="Chapter14-User-Interface-Design"><a href="#Chapter14-User-Interface-Design" class="headerlink" title="Chapter14 User Interface Design"></a>Chapter14 User Interface Design</h2><ul><li>黄金规则<ul><li>用户控制操作</li><li>减少用户记忆负担</li><li>保持界面一致</li></ul></li></ul><h2 id="Chapter-15-16-Software-Quality"><a href="#Chapter-15-16-Software-Quality" class="headerlink" title="Chapter 15-16 Software Quality"></a>Chapter 15-16 Software Quality</h2><ul><li><p>什么是软件质量<br>一个有效的软件过程，其应用方式创造了一个有用的产品，为生产它的人和使用它的人提供可衡量的价值</p></li><li><p>McCall’s Triangle of Quality</p><ul><li>产品修改</li><li>产品转移</li><li>产品运行</li></ul></li><li><p>The Cost of Quality</p><ul><li>在测试和维护阶段改正错误和缺陷的成本急剧增高</li><li>种类：<ol><li>预防成本（COP）</li><li>评估成本（COA）</li><li>内部失败成本</li><li>外部失败成本</li></ol></li></ul></li></ul><h2 id="Chapter-17-19-Testing-Strategy-amp-Techniques"><a href="#Chapter-17-19-Testing-Strategy-amp-Techniques" class="headerlink" title="Chapter 17-19. Testing Strategy &amp; Techniques"></a>Chapter 17-19. Testing Strategy &amp; Techniques</h2><ul><li>Verification vs. Validation<ul><li>Verification: 确保软件能实现特定功能 building the product right</li><li>Validation: 确保软件可追溯到客户需求 building the right product</li></ul></li><li>测试策略——从小到大<ul><li>单元测试</li><li>集成测试</li><li>系统测试</li><li>验收测试<ul><li>α testing 由最终用户在开发人员站点进行</li><li>ß testing 在最终用户站点进行</li></ul></li></ul></li></ul><h3 id="测试策略之unit-testing"><a href="#测试策略之unit-testing" class="headerlink" title="测试策略之unit testing"></a>测试策略之unit testing</h3><ul><li>内容：<ul><li>接口</li><li>局部数据结构</li><li>边界条件</li><li>独立路径</li><li>错误处理路径</li></ul></li><li>stub——代替底层</li><li>driver——代替顶层<ul><li>提供了一个框架用于设置输入参数，环境 ，执行单元</li></ul></li></ul><h3 id="测试策略之integration-testing"><a href="#测试策略之integration-testing" class="headerlink" title="测试策略之integration testing"></a>测试策略之integration testing</h3><ul><li>Top Down Integration<ul><li>Advantage<ul><li>A skeletal version of the program can exist early and allows demonstrations</li><li>Design errors may be found sooner.</li><li>Reduces the need for test drivers</li><li>It tends to make fault location easier</li></ul></li><li>Disadvantage<ul><li>stubs could be expensive to build.</li></ul></li></ul></li><li>Bottom-Up Integration<ul><li>Advantage<ul><li>Particular useful for objects and reuse.</li><li>requiring no structural design information</li></ul></li><li>Disadvantage<ul><li>The program as a whole does not exist until the last module is added.</li><li>requires test drivers, not test stubs.</li></ul></li></ul></li></ul><h3 id="测试策略之system-testing——充分运用基于计算机的系统"><a href="#测试策略之system-testing——充分运用基于计算机的系统" class="headerlink" title="测试策略之system testing——充分运用基于计算机的系统"></a>测试策略之system testing——充分运用基于计算机的系统</h3><ul><li>目的：<ul><li>在将要运行的真实环境中测试整个系统</li><li>确保系统满足整体工作的要求</li><li>还要测试系统功能之外的方面</li><li>结果有时用于系统验收</li><li>验证软件用户手册</li><li>估计可靠性和可维护性</li></ul></li></ul><h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><ul><li>黑盒测试（功能）</li><li>白盒测试（结构）</li></ul><h2 id="Chapter-21-Software-configuration-management"><a href="#Chapter-21-Software-configuration-management" class="headerlink" title="Chapter 21 Software configuration management"></a>Chapter 21 Software configuration management</h2><h3 id="The-SCM-Process"><a href="#The-SCM-Process" class="headerlink" title="The SCM Process"></a>The SCM Process</h3><ol><li>identification</li><li>change control</li><li>version control</li><li>configuration auditing</li><li>reporting</li></ol><ul><li>Software configuration item</li></ul><h2 id="Chapter-22-Project-Management-Concept"><a href="#Chapter-22-Project-Management-Concept" class="headerlink" title="Chapter 22  Project Management Concept"></a>Chapter 22  Project Management Concept</h2><h3 id="4-p"><a href="#4-p" class="headerlink" title="4 p"></a>4 p</h3><ul><li>people</li><li>product<ul><li>scopes<ol><li>context</li><li>information objectives</li><li>function and performance</li></ol></li></ul></li><li>Process<ul><li>Consider project characteristics</li><li>Determine the degree of rigor required</li><li>Define a task set for each software engineering activity</li></ul></li><li>Project<ol><li>从正确的基础上开始工作——首先通过努力理解要解决的问题，然后设定现实的目标和期望来实现的</li><li>保持动力——项目经理必须提供激励措施，将人员流动率控制在最低限度，团队应在其执行的每项任务中强调质量，高级管理人员应尽一切可能远离团队</li><li>跟踪进度——作为质量保证活动的一部分，随着工作产品（例如模型、源代码、测试用例集）的生成和批准（使用正式的技术评审），进度会被跟踪。</li><li>做出明智的决定——项目经理和软件团队的决定应该是“保持简单”</li><li>进行事后分析——建立一个一致的机制来提取每个项目的经验教训</li></ol></li></ul><h3 id="W5HH"><a href="#W5HH" class="headerlink" title="W5HH"></a>W5HH</h3><ol><li>Why is the system being developed?——为什么</li><li>What will be done? ——做什么</li><li>When will it be accomplished?——什么时候做</li><li>Who is responsible?——谁负责</li><li>Where are they organizationally located?——其他人的组织机构位于何处</li><li>How will the job be done technically and managerially?——如何完成技术工作和管理工作</li><li>How much of each resource (e.g., people, software, tools, database) will be needed?——每种资源需要多少</li></ol><h3 id="Task-set-x3D"><a href="#Task-set-x3D" class="headerlink" title="Task set &#x3D;"></a>Task set &#x3D;</h3><ul><li>Software engineering tasks</li><li>Work products</li><li>Quality assurance points </li><li>Milestones</li></ul><h3 id="software-engineering-activity"><a href="#software-engineering-activity" class="headerlink" title="software engineering activity"></a>software engineering activity</h3><ul><li>需求分析</li><li>设计</li><li>软件开发</li><li>软件部署</li><li>软件维护</li><li>项目管理</li><li>质量保证</li><li>配置管理</li><li>文档编写</li></ul><h2 id="Chapter-23-Process-and-Project-Metrics"><a href="#Chapter-23-Process-and-Project-Metrics" class="headerlink" title="Chapter 23 Process and Project Metrics"></a>Chapter 23 Process and Project Metrics</h2><ul><li>意义<ol><li>评估正在进行的项目的状态</li><li>跟踪潜在风险</li><li>在问题造成不良影响前发现风险</li><li>调整工作流程或任务</li><li>评估项目团队控制软件工作产品质量的能力</li></ol></li></ul><h3 id="Process-Measurement"><a href="#Process-Measurement" class="headerlink" title="Process Measurement"></a>Process Measurement</h3><ul><li>根据过程中获得的一系列数据或软件工程任务的特性来进行测量。</li><li>Software Process Improvement (SPI)</li><li>5 Metrics<ul><li>Quality-related</li><li>Productivity-related</li><li>Statistical SQA data</li><li>Defecti removal effciency</li><li>Reuse data</li></ul></li></ul><h3 id="项目度量"><a href="#项目度量" class="headerlink" title="项目度量"></a>项目度量</h3><ul><li>三个方面<ul><li>如期</li><li>质量</li><li>成本</li></ul></li></ul><h3 id="Chapter-24-25-Project-Estimation-amp-Scheduling"><a href="#Chapter-24-25-Project-Estimation-amp-Scheduling" class="headerlink" title="Chapter 24-25 Project Estimation &amp; Scheduling"></a>Chapter 24-25 Project Estimation &amp; Scheduling</h3><h3 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h3><ul><li>Scope refers to all the work involved in creating the<br>products of the project and the processes used to<br>create them. It defines what is or is not to be done</li><li>项目范围的内容<ul><li>交付给最终用户的功能和特性</li><li>输入和输出的数据</li><li>由于使用软件而呈现给用户的“内容”</li><li>性能、约束、接口、和约束系统的可靠性</li></ul></li></ul><h3 id="Work-Breakdown-Structure-WBS"><a href="#Work-Breakdown-Structure-WBS" class="headerlink" title="Work Breakdown Structure (WBS)"></a>Work Breakdown Structure (WBS)</h3><ul><li>进行WBS的五种方法<ol><li>使用指南：一些组织提供的指南</li><li>类比方法：审查类似项目的 WBS，并根据我们的项目 进行定制。</li><li>自上而下的方法：从项目中最大的项目开始，并将它们分解</li><li>自下而上的方法：从详细的任务开始，并将它们汇总</li><li>思维导图方法：以非线性格式写下任务，然后创建 WBS 结构</li></ol></li></ul><h3 id="估计方法"><a href="#估计方法" class="headerlink" title="估计方法"></a>估计方法</h3><ul><li>基于代码行的估计<ul><li>优点：易于测量、容易自动化</li><li>缺点：仅限于代码不能用于设计、依赖于语言、没有考虑功能的复杂性、与设计的好坏挂钩</li></ul></li><li>基于功能点的估计<ul><li>优点：<ol><li>可用于最早的需求阶段</li><li>独立于编程语言、产品设计或开发风格 </li><li>用户视图，而不是实现视图 </li><li>可用于衡量非编码活动 </li><li>存在大量历史数据  </li><li>有据可查</li></ol></li><li>缺点：<ol><li>无法直接计算现有产品（源代码）的 FP 内容 </li><li>难以自动化 </li><li>FP 不反映语言、设计或风格差异 </li><li>FP 设计用于估计商业数据处理应用 </li><li>主观计数</li></ol></li></ul></li></ul><h3 id="项目调度"><a href="#项目调度" class="headerlink" title="项目调度"></a>项目调度</h3><ol><li>项目为什么会延期<br>  不切实际的截止日期<br>  需求的变化<br>  低估工作量<br>  不可预测的风险<br>  技术难题<br>  人为困难<br>  沟通不畅<br>  未能认识到项目落后于计划或缺乏纠正问题的行动</li><li>调度的原则<br> 划分——定义多个不同的任务<br> 相互依赖性——明确任务的相互关系<br> 工作量确认——确保人力资源可用<br> 确定责任——明确责任承担者<br> 明确输出结果——确定活动产生的结果<br> 确定里程碑——进行质量审查</li><li>调度的步骤<ol><li>定义任务集——WBS</li><li>安排活动</li><li>绘制项目网络图</li><li>关键路径分析</li><li>使用甘特图进行调度</li><li>进度跟踪</li></ol></li></ol><h2 id="Chapter-26-Risk-Management"><a href="#Chapter-26-Risk-Management" class="headerlink" title="Chapter 26 Risk Management"></a>Chapter 26 Risk Management</h2><ul><li><p>Reactive Risk Management</p></li><li><p>Proactive Risk Management</p><ul><li>formal risk analysis is performed</li><li>corrects the root causes of risk</li></ul></li><li><p>Risk Management Paradigm</p><ol><li>Risk identification</li><li>Risk analysis</li><li>Risk planning </li><li>Risk monitoring</li></ol></li><li><p>RMMM</p><ul><li>Mitigation</li><li>Monitoring </li><li>Management</li></ul></li></ul><h2 id="常用图"><a href="#常用图" class="headerlink" title="常用图"></a>常用图</h2><ul><li>用例图</li><li>类图</li><li>活动图<ul><li>变形：泳道图</li></ul></li><li>顺序图</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件工程</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>诗词</title>
    <link href="/2023/06/06/poem/"/>
    <url>/2023/06/06/poem/</url>
    
    <content type="html"><![CDATA[<h1 id="诗词"><a href="#诗词" class="headerlink" title="诗词"></a>诗词</h1><p><strong>暂时定于用来记录些诗词</strong></p><h2 id="鹧鸪天（正月十一日观灯）-姜夔"><a href="#鹧鸪天（正月十一日观灯）-姜夔" class="headerlink" title="鹧鸪天（正月十一日观灯）     姜夔"></a>鹧鸪天（正月十一日观灯）     姜夔</h2><p>巷陌风光纵赏时。笼纱未出马先嘶。白头居士无呵殿，只有乘肩小女随。</p><p>花满市，月侵衣。少年情事老来悲。沙河塘上春寒浅，看了游人缓缓归。</p><p><strong>看过一篇点评。说这阙词可能是唯一一阙描写了女儿坐在爸爸肩头的。那篇文章中还写，说姜夔半生潦倒，不知他的小女命运几何。我感觉不管以后如何，当坐在爸爸肩头赏灯的时候肯定是很幸福的。</strong></p><hr><h2 id="咏史-李梦唐"><a href="#咏史-李梦唐" class="headerlink" title="咏史 李梦唐"></a>咏史 李梦唐</h2><p>高阁垂裳调鼎时，可怜天下有微词。<br>覆舟水是苍生泪，不到横流君不知。</p><hr><h2 id="拟行路难-其四-鲍照"><a href="#拟行路难-其四-鲍照" class="headerlink" title="拟行路难-其四 鲍照"></a>拟行路难-其四 鲍照</h2><p>泻水置平地，各自东西南北流。<br>人生亦有命，安能兴叹复坐愁！<br>酌酒以自宽，举杯断绝歌路难。<br>心非木石岂无感，吞声踯躅不敢言。</p><p><strong>很喜欢最后这一句。今天（2023年6月6日）才知道鲍照久居建康，也就是南京，然后才发信现江苏和山东竟然是邻居。</strong></p><hr><h2 id="塞下曲-其二-王昌龄"><a href="#塞下曲-其二-王昌龄" class="headerlink" title="塞下曲-其二 王昌龄"></a>塞下曲-其二 王昌龄</h2><p>饮马渡秋水，水寒风似刀。<br>平沙日未没，黯黯见临洮。<br>昔日长城战，咸言意气高。<br>黄尘足今古，白骨乱蓬蒿。</p><p><strong>四月份记的一首诗，已经忘了为什么记了。</strong></p><hr><h2 id="拟挽歌辞-陶渊明"><a href="#拟挽歌辞-陶渊明" class="headerlink" title="拟挽歌辞 陶渊明"></a>拟挽歌辞 陶渊明</h2><p>有生必有死，早终非命促。<br>昨暮同为人，今旦在鬼录。<br>魂气散何之，枯形寄古木。<br>娇儿索父啼，良友抚我哭，<br>得失不复知，是非安能觉！<br>千秋万岁后，谁知荣与辱？<br>但恨在世时，饮酒不得足。</p><p>在昔无酒饮，今但湛空觞。<br>春醪生浮蚁，何时更能尝！<br>肴案盈我前，亲旧哭我旁。<br>欲语口无音，欲视眼无光。<br>昔在高唐寝，今宿荒草乡；<br>一朝出门去，归来夜未央。</p><p>荒草何茫茫，白杨亦萧萧。<br>严霜九月中，送我出远郊。<br>四面无人居，高坟自嶣峣。<br>马为仰天鸣，风为自萧条。<br>幽室一已闭，千年不复朝。<br>千年不复朝，贤达无奈何。<br>向来相送人，各自还其家。<br>亲戚或余悲，他人亦已歌。<br>死去何所道，托体同山阿。</p><p><strong>之前读不懂，今年读懂了。</strong></p><p><strong>“得失不复知，是非安能觉”这句，让我想到“死去元知万事空”。他们都不信什么在天之灵，都认为死了就是死了。我也认同这种想法，但更希望能有在天之灵。</strong></p><p><strong>“春醪生浮蚁，何时更能尝”这句看了注释才知道自己完全读反了。说的是祭酒的时候，我理解为生的时候。</strong></p><p><strong>“亲戚或余悲，他人亦已歌”。听着很残酷，但我现在觉得：死后能让他人偶尔想起，已经是很了不起的事了</strong></p><hr><h2 id="定风波-南海归赠王定国侍人寓娘-苏轼"><a href="#定风波-南海归赠王定国侍人寓娘-苏轼" class="headerlink" title="定风波-南海归赠王定国侍人寓娘 苏轼"></a>定风波-南海归赠王定国侍人寓娘 苏轼</h2><p>王定国哥儿曰柔奴，姓宇文氏，眉目娟丽，善应对，家世住京师。定国南迁归，余问柔：“广南应是不好？”柔对曰：“此心安处，便是吾乡。”因为缀词云。</p><p>常羡人间琢玉郎，天教分付酥娘。尽道清歌传皓齿，风起，雪飞炎海变清凉。<br>万里归来颜愈少。微笑，笑时犹带岭梅香。试问岭南应不好，却道：此心安处是吾乡。</p><p><strong>苏轼的两阙定风波我都很喜欢。</strong></p><h2 id="定风波-苏轼"><a href="#定风波-苏轼" class="headerlink" title="定风波 苏轼"></a>定风波 苏轼</h2><p>三月七日，沙湖道中遇雨，雨具先去，同行皆狼狈，余独不觉。已而放晴，故作此。</p><p>莫听穿林打叶声，何妨吟啸且徐行。竹杖芒鞋轻胜马，谁怕，一蓑烟雨任平生。<br>料峭春风吹酒醒，微冷，山头斜照却相迎。回首向来萧瑟处，归去，也无风雨也无晴。</p><p><strong>蓑这个意像是诗词里的常客了。</strong></p><p><strong>对这阙词一直有个印象，就是苏轼淋雨生病了，去看病又写了阙《游沙湖》。但是查了下才发现自己的记忆是错的。苏轼去看的是手肿，明显不是因为淋雨</strong></p><hr><h2 id="朝中措·送刘仲原甫出守维扬-欧阳修"><a href="#朝中措·送刘仲原甫出守维扬-欧阳修" class="headerlink" title="朝中措·送刘仲原甫出守维扬 欧阳修"></a>朝中措·送刘仲原甫出守维扬 欧阳修</h2><p>平山栏槛倚晴空。山色有无中。手种堂前垂柳，别来几度春风。<br>文章太守，挥毫万字，一饮千钟。行乐直须年少，尊前看取衰翁。</p><p><strong>之前去扬州找攻略的时候翻到的。</strong></p><hr><h2 id="汴河怀古-皮日休"><a href="#汴河怀古-皮日休" class="headerlink" title="汴河怀古 皮日休"></a>汴河怀古 皮日休</h2><p>尽道隋亡为此河，至今千里赖通波。<br>若无水殿龙舟事，共禹论功不较多。</p><p><strong>在大运河博物馆看到的。现在想到皮日休在开元寺待过一段时间。影壁上好像还有他的名。</strong></p><hr><h2 id="题龙阳县青草湖-唐珙"><a href="#题龙阳县青草湖-唐珙" class="headerlink" title="题龙阳县青草湖 唐珙"></a>题龙阳县青草湖 唐珙</h2><p>西风吹老洞庭波，一夜湘君白发多，<br>醉后不知天在水，满船清梦压星河。</p><p><strong>老字用得很妙，之前没悟出来</strong></p><hr><h2 id="答武陵太守-王昌龄"><a href="#答武陵太守-王昌龄" class="headerlink" title="答武陵太守 王昌龄"></a>答武陵太守 王昌龄</h2><p>仗剑行千里，微躯感一言。<br>曾为大梁客，不负信陵恩。</p><p><strong>我比较喜欢前面两句，但却不太能做得到，反而是“微躯不敢言”。</strong></p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tears of the Kingdom</title>
    <link href="/2023/06/05/Tears-of-the-Kingdom/"/>
    <url>/2023/06/05/Tears-of-the-Kingdom/</url>
    
    <content type="html"><![CDATA[<h1 id="王国之泪"><a href="#王国之泪" class="headerlink" title="王国之泪"></a>王国之泪</h1><p><em>第一个让我想写点什么，并且真的写了点什么的游戏</em></p><h2 id="游戏历程"><a href="#游戏历程" class="headerlink" title="游戏历程"></a>游戏历程</h2><p>5月3日开始玩偷跑的模拟器版本。（这里先自我检讨，不仅是玩的盗版，而且还是偷跑版本。以后经济独立后尽量补票。）中间间断了几天，昨天打完加侬多夫，算是通关了。打完蛮惆怅的，各种看视频网站、刷贴吧想看看别人的感受，没找着。洗澡的时候有些想法，就想着自己写一写。</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>23年过年前我下了一堆游戏，但过完年到了二月份就开始对游戏提不起兴趣，一直到5月初接触了《王国之泪》才一发不可收拾，玩游戏玩得熬了好几次夜。</p><p>这游戏为什么有那么大的魔力。我想了几点：</p><ul><li><p>剧情。说实话剧情在我玩不到5天的时候就大概能知道是个什么样的剧情了。但还是觉得是恶搞不错的剧情。很喜欢这作里林克和塞尔达的关系。塞尔达对林克的这种信任，跨越时间、牺牲自己的信任，我着实有被感动到。</p></li><li><p>人物。</p><ul><li>塞尔达。这作的塞尔达真的很美。她在哈特诺学校里当了一段时间的老师，家里还挂着学生给她画的画。她周游海拉鲁大陆，各地的人民那都能听到他的评价。</li><li>加侬多夫。没啥感觉，甚至有点想笑。最终的boss战难度即使手残如我也能一把过，但一万年前却那样的所向披靡。加上boss的一些宣言逼格也感觉不高。不过倒不影响就是了。打完后才知道中途要是死了就得冲怪物大军那边开始，想想就感到庆幸。</li><li>卡卡利特村的村民。最恶心的一个村子。说实话，我玩这作的时候带着“我前几年拯救了世界，你们不要说要怎么崇拜我，至少得尊重我吧”的想法。但在这个村子却觉得地位比普通村民还低。一个村民直接躺石板上睡觉不让我直接叫醒，还得我去找生命松露来；而我只是要去摸一下石板都会被喝止。更不用说有一个地点我尝试了多种方式也不让进。虽然后面才知道这是剧情的要求，但还是觉得很不爽。</li><li>沃特里村的村民。这反倒和卡卡利特村形成了鲜明了对比，在这里感受到了尊重。任务做起来也有意思。</li></ul></li><li><p>和前作的关系：<br>这作的时间线应该是在旷野之息之后的几年。可以说是续作。但前作的希卡科技几乎消失殆尽。这点也被许多老玩家所吐槽。我虽然也有玩过旷野之息，但只通了风、水两个神殿，加上玩的时候过度使用金手指，导致游戏体验并不好。所以对前作没什么感情。因此反倒是影响不大。</p><p>另外，这作还成功勾起了我对塞尔达传说全作的兴趣。在了解了一些相关信息后（云了几个视频），现在更能感受到本作里埋的一些彩蛋。羡慕那些早早入坑的玩家，他们得有多幸福啊。</p></li><li><p>配乐。印象最深的风神殿那段，太棒了。虽然进神殿前的跳跳乐我跳了快一个下午，但这并不影响其给我带来的震撼。</p></li></ul><p>上面说了这么多，还没有说到点子上。我觉得最吸引我的是这几点：</p><ul><li>开发人员的周到：玩的时候能感受到开发人员是真的有很细致地玩过，这点做起来似乎也不难：趁手的工具，丰富的文本，能让我有一种感觉：开发人员把我能想到的都想到了。但实际上我玩过的游戏中，似乎只有赛尔达传说真正做到了这点。</li><li>合乎直觉。这点似乎和上一点是相同的。但我还是把它单独列出来了。因为这点太棒了。我一直觉得一个好的设计的最高标准就是合乎直觉，你拿到一个产品，你不需要看说明书，不需要问别人，你拿到手就能用，我觉得这就是一个很棒的体验。而要做得合乎直觉，特别是游戏这种，就需要开发人员想得够多。</li><li>探索欲。看过一篇讲旷野之息的文章，说任天堂通过塔、神庙、宝箱等将一个大的地图切分成了一个个的三角。我觉得说得很在理。而王国之泪更是加强了这一点，因为有了鸟望塔的存在。射向高空后，看到特殊的地形、神庙、龙之泪，就有忍不住想一一探索的冲动。这也是导致一玩就难以停止，永远想着这个结束就暂停，永远都会冒出来新的可探索点。</li><li>能力。这作的能力十分出彩。通天术增强了机动性。余料建造对武器系统的丰富。究极手更是被玩出花来。我玩游戏一向很菜，不仅手残而且创意也一般，但看网上各种脑洞大开的拼法也是我这一个月以来的一大乐趣。</li><li>手残友好。难度设计不高，且有较合适的引导，而且不乏逃课手段，这让我能更好地去体验游戏的乐趣。</li><li>技术。我一直记得自己在知道超级玛丽的程序员为了去适配游戏机的性能所做的各种奇淫巧技时的震撼，太magic了。而王国之泪的技术力也很强，16g左右的大小在今天已经不能算大，但这作的丰富程度却是很多其他游戏所不能比拟的。而且bug也不多，除了一些复制bug，我好像没有看到有说什么影响游戏体验的恶性bug。</li></ul><p>再说下模拟器。模拟器从偷跑刚出时候的明显卡顿、不断闪退、贴图错误，到现在的流畅体验，离不开模拟器开发和维护者的不断努力。而刚出的那几天，相关社区里的氛围也十分好。很多都是分享自己增强游戏体验的设置。说句可能不是很恰当的话，我在这点上感受到了互联网精神 —— 互帮互助、不求回报、持续钻研。我是这样理解的。这也可以说是王国之泪吸引我的一点。</p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>今天看到一句话“突然明白了什么才是好游戏，就连看它的玩家们怎么玩都是一件很有趣的事”。说得真好。</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感受</tag>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么要写博客</title>
    <link href="/2023/05/20/reasons-for-build-a-blog/"/>
    <url>/2023/05/20/reasons-for-build-a-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h1><p>这个问题已经被很多人回答过了。但我还是愿意给出些自己的回答（或者认同的回答）。</p><ul><li><a href="https://plantegg.github.io/2117/06/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E5%8D%9A/">关于本博</a>里的答案是这样的。<br>为了解决一看就懂，一问就打鼓，一用就糊涂。所以需要记录、总结，再联系案例。把零散知识记录下来（看到过），慢慢地相关知识积累更多，直到碰到实践案例或是有点领悟到于是发现这块知识可以整理成一篇系统些的文章。</li></ul><h2 id="2023年5月5日"><a href="#2023年5月5日" class="headerlink" title="2023年5月5日"></a>2023年5月5日</h2><p>我享受逛博客的过程。不管是博客的页面设计还是文章的内容，基本上都是作者的一番心血。巨大的互联网使用人数和几十年的时间，诞生了许多很有意思的博客，可谓浩如烟海。而我想在这这烟海中有一颗属于自己的星。</p><h2 id="2023年5月19日"><a href="#2023年5月19日" class="headerlink" title="2023年5月19日"></a>2023年5月19日</h2><p>今天一天都跟博客有关。</p><p>白天是拼了几篇博客来做作业。</p><p>晚上的时候看<a href="https://soulogic.com/item/3294">我的郑老三死了</a>。我记忆中自己没养过动物，但前不久才经历过亲人的突然离去，所以这篇让我很有些想法。</p><p>更晚些的时候看<a href="https://rehoni.github.io/cn/">罗皓的个人博客</a>，是一个学长的。从大学一直记录到工作。看着那些熟悉的地名和事情很有感觉。</p><p>现在突然冒出来了个想法。博客的意义可能在于存在。它不需要马上就能让某个人有想法。它只需要存在，存在着能访问就好。</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>折腾</tag>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>死亡</title>
    <link href="/2023/05/20/death/"/>
    <url>/2023/05/20/death/</url>
    
    <content type="html"><![CDATA[<h2 id="隋炀帝墓"><a href="#隋炀帝墓" class="headerlink" title="隋炀帝墓"></a>隋炀帝墓</h2><p>查扬州旅游景点时看到有隋炀帝墓考古遗址公园。词条中有句话。</p><blockquote><p>后来的考证，1980年代进，当地居民在隋炀帝墓附近建房，曾在主墓室中心上方挖过一个粪坑，底部距离墓室仅半米。<br>堂堂帝王，千年后安眠之地却差点要成了粪坑。令人唏嘘。</p></blockquote><h2 id="寻梦环游记"><a href="#寻梦环游记" class="headerlink" title="寻梦环游记"></a>寻梦环游记</h2><p>这部电影无论是中文名还是英文名都觉得取得一般。中文太烂大街了，英文不知道的还以为是讲奶茶的。</p><p>但无法掩盖这不部电影绝对是部好电影。关于死亡的电影我觉得目前没有比它更好的。</p><p>我喜欢电影中墨西哥人的亡灵节。喜欢这种理念——一个人真正的死是世界上再也没有人记得他。</p><h2 id="2023年5月19日"><a href="#2023年5月19日" class="headerlink" title="2023年5月19日"></a>2023年5月19日</h2><p>今天看<a href="https://soulogic.com/item/3294">我的郑老三死了</a>，很有感触。</p><p>摘抄几段文字</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs node-repl">之后的这两天里，我每天要嘱咐自己不下二十次，郑老三已经永远的消失了，没有任何挽救的方法。不要去幻想还有另一个世界存在，因为天堂是不自洽的。接受这个事实，有出生就有死亡。我们都会死，郑老三会死，我和我老婆将来要有一个人去承受对方先死的痛苦，将来我们的孩子也会死。在这之前我以为自己已经反复思考过终有一死，没有例外，反复读过《耶鲁大学公开课：死亡》，可真碰到的时候才发现自己就像读过如何游泳的书一样。<br><span class="hljs-meta prompt_">...</span><br>这时候我才明白“文化”的意义，我之前一直有类似“工业党”的心态，觉得逻辑思维才代表着人类的进步（网站名 Soulogic 表明了这种倾向），但其实人类大部分时间都在面对着无力改变的事情，需要有人从事艺术创作来抒发喜怒哀乐。理科是改良，文科是本。或者放大到极端来说，如果将来的人类（或者取代了人类的 AI）征服了整个宇宙，却已经没人会吟唱一首深情地求爱或者悼念逝者的歌曲，那这个物种不值得存在，只是些分布广泛、化学性质活泼的泡沫而已。<br><br>同时曲解死亡的定义、相信灵魂不灭是一个非常大的诱惑，我必须费很大的力气去克制。很明显不能要求所有人都能正确地理解死亡，就像不能要求所有人中考物理满分一样，那太刻薄了。其实“正确”一词出现在上句话里本身就充满了傲慢。<br><br>我也因此明白宗教存在的意义，可以抛弃一些细枝末节，诸如没必要相信天使、对圣餐的解释，但是，所有人在任何时候都是坚定的无神论者，这感觉并不妙。别误会，我没有屈服，但是相比世间所有的心理打击，我碰到的这次简直什么都不算。所以完全摈弃宗教是不可思议的。<br></code></pre></td></tr></table></figure><p>今天看贴吧的时候还看到这个。</p><p>楼中楼中有人说“我叔检查出晚期，要放弃了，但是堂弟的老婆有了身孕，叔想看孙子，靠着止痛药硬抗。最后堂弟竭尽全力花费这么多年的积蓄吊着他一口气，坚持了六个月。医生说一般人能坚持一个月就到头了，我叔坚持六个月真是奇迹。”</p><p>路人a回“孙子出生了，家里钱全花光了，说不定还欠点，孩子怎么养？现在小孩开销大的离谱”</p><p>路人b怼他“那换是你你愿意让你爹带着遗憾走，然后自己愧疚一辈子？”</p><p>路人a回路人b“他不想死我就尽力治，不过如果是我老了我不会让我儿子治我”</p><p>层主回复：差了两个月。本来发现的时候已经放弃了，我堂弟的工资尚可，家里有点地种果的，年收入20这样。叔叔想给儿子孙子留点，但是堂弟觉得钱还能再赚，可是人没了就是遗憾了，所以竭尽全力想让他看一眼孙子。上面的人大概都是孤儿吧，不懂什么叫孝心。</p><p>（差了两个月这五个字我越看越难受，甚至有点泪。太残酷了，太残酷了）</p><p>看了很难受，我发现很多人其实都是类似的想法：老了得了绝症就不治了，钱先不说，主要治不好，治疗过程大多又很痛苦，不如趁最后的时间想干啥干啥，潇洒潇洒。</p><p>但很可能也只是说得容易，真到了那时候有很东西阻挡着，让你身不由己。</p><h2 id="2023年6月6日"><a href="#2023年6月6日" class="headerlink" title="2023年6月6日"></a>2023年6月6日</h2><p>今天细度了陶渊明的拟挽歌辞</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs">有生必有死，早终非命促。<br>昨暮同为人，今旦在鬼录。<br>魂气散何之，枯形寄古木。<br>娇儿索父啼，良友抚我哭，<br>得失不复知，是非安能觉！<br>千秋万岁后，谁知荣与辱？<br>但恨在世时，饮酒不得足。<br><br>在昔无酒饮，今但湛空觞。<br>春醪生浮蚁，何时更能尝！<br>肴案盈我前，亲旧哭我旁。<br>欲语口无音，欲视眼无光。<br>昔在高唐寝，今宿荒草乡；<br>一朝出门去，归来夜未央。<br><br>荒草何茫茫，白杨亦萧萧。<br>严霜九月中，送我出远郊。<br>四面无人居，高坟自嶣峣。<br>马为仰天鸣，风为自萧条。<br>幽室一已闭，千年不复朝。<br>千年不复朝，贤达无奈何。<br>向来相送人，各自还其家。<br>亲戚或余悲，他人亦已歌。<br>死去何所道，托体同山阿。<br></code></pre></td></tr></table></figure><p>之前读不懂，今年读懂了。</p><p>“得失不复知，是非安能觉”这句，让我想到“死去元知万事空”。他们都不信什么在天之灵，都认为死了就是死了。我也认同这种想法，但更希望能有在天之灵。</p><p>“亲戚或余悲，他人亦已歌”。听着很残酷，但我现在觉得：死后能让他人偶尔想起，已经是很了不起的事了。</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>感想</tag>
      
      <tag>死亡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《悉达多》摘录</title>
    <link href="/2023/05/16/excerpt-of-Siddhartha/"/>
    <url>/2023/05/16/excerpt-of-Siddhartha/</url>
    
    <content type="html"><![CDATA[<h1 id="《悉达多》摘录"><a href="#《悉达多》摘录" class="headerlink" title="《悉达多》摘录"></a>《悉达多》摘录</h1><ul><li>您在第 13 页（位置 #186-188）的标注 | 添加于 2023年3月17日星期五 上午5:55:20</li></ul><h1 id="他已经学会如何默念“唵-”——这真言之本：吸气时内心默念，呼气时则集聚全部的精神，每当此刻，他的前额仿佛放射出纯净的心灵之光。他已学会如何在自我存在的深层体认阿特曼——永恒不坏，与宇宙合一。"><a href="#他已经学会如何默念“唵-”——这真言之本：吸气时内心默念，呼气时则集聚全部的精神，每当此刻，他的前额仿佛放射出纯净的心灵之光。他已学会如何在自我存在的深层体认阿特曼——永恒不坏，与宇宙合一。" class="headerlink" title="他已经学会如何默念“唵 ”——这真言之本：吸气时内心默念，呼气时则集聚全部的精神，每当此刻，他的前额仿佛放射出纯净的心灵之光。他已学会如何在自我存在的深层体认阿特曼——永恒不坏，与宇宙合一。"></a>他已经学会如何默念“唵 ”——这真言之本：吸气时内心默念，呼气时则集聚全部的精神，每当此刻，他的前额仿佛放射出纯净的心灵之光。他已学会如何在自我存在的深层体认阿特曼——永恒不坏，与宇宙合一。</h1><ul><li>您在第 15 页（位置 #216-217）的标注 | 添加于 2023年3月17日星期五 上午5:59:35</li></ul><h1 id="他们的确极为渊博，但假如他们不了解那件重要的事，那唯一重要之事，那么是否还值得了解上述的一切"><a href="#他们的确极为渊博，但假如他们不了解那件重要的事，那唯一重要之事，那么是否还值得了解上述的一切" class="headerlink" title="他们的确极为渊博，但假如他们不了解那件重要的事，那唯一重要之事，那么是否还值得了解上述的一切?"></a>他们的确极为渊博，但假如他们不了解那件重要的事，那唯一重要之事，那么是否还值得了解上述的一切?</h1><ul><li>您在第 15 页（位置 #225-226）的标注 | 添加于 2023年3月17日星期五 上午6:00:57</li></ul><h1 id="为什么毫无过错的他要每天沐浴一新，并试图洗清自己的罪孽呢"><a href="#为什么毫无过错的他要每天沐浴一新，并试图洗清自己的罪孽呢" class="headerlink" title="为什么毫无过错的他要每天沐浴一新，并试图洗清自己的罪孽呢?"></a>为什么毫无过错的他要每天沐浴一新，并试图洗清自己的罪孽呢?</h1><ul><li>您在第 20 页（位置 #294-295）的标注 | 添加于 2023年3月17日星期五 上午8:05:55</li></ul><h1 id="所有这一切都不值一顾，一切都是欺骗，一切都散发着谎言的恶臭；无论快乐或是美丽都只是感官造成的幻象，一切注定要腐朽。世界充满苦痛，生命即苦。"><a href="#所有这一切都不值一顾，一切都是欺骗，一切都散发着谎言的恶臭；无论快乐或是美丽都只是感官造成的幻象，一切注定要腐朽。世界充满苦痛，生命即苦。" class="headerlink" title="所有这一切都不值一顾，一切都是欺骗，一切都散发着谎言的恶臭；无论快乐或是美丽都只是感官造成的幻象，一切注定要腐朽。世界充满苦痛，生命即苦。"></a>所有这一切都不值一顾，一切都是欺骗，一切都散发着谎言的恶臭；无论快乐或是美丽都只是感官造成的幻象，一切注定要腐朽。世界充满苦痛，生命即苦。</h1><ul><li>您在第 21 页（位置 #312-312）的标注 | 添加于 2023年3月17日星期五 上午8:08:31</li></ul><h1 id="征服了旧的渴望。又会感到新的渴望。"><a href="#征服了旧的渴望。又会感到新的渴望。" class="headerlink" title="征服了旧的渴望。又会感到新的渴望。"></a>征服了旧的渴望。又会感到新的渴望。</h1><ul><li>您在第 27 页（位置 #409-412）的标注 | 添加于 2023年3月17日星期五 上午8:20:07</li></ul><h1 id="他平和的表情既非欢喜，亦非忧伤。-他仿佛从内心发出温和的微笑。-他静静地，安详地走着，-带着一种神秘的微笑，-这微笑与一个健康婴孩的笑并无不同。"><a href="#他平和的表情既非欢喜，亦非忧伤。-他仿佛从内心发出温和的微笑。-他静静地，安详地走着，-带着一种神秘的微笑，-这微笑与一个健康婴孩的笑并无不同。" class="headerlink" title="他平和的表情既非欢喜，亦非忧伤。 他仿佛从内心发出温和的微笑。 他静静地，安详地走着， 带着一种神秘的微笑， 这微笑与一个健康婴孩的笑并无不同。"></a>他平和的表情既非欢喜，亦非忧伤。 他仿佛从内心发出温和的微笑。 他静静地，安详地走着， 带着一种神秘的微笑， 这微笑与一个健康婴孩的笑并无不同。</h1><ul><li>您在第 33 页（位置 #493-496）的标注 | 添加于 2023年3月18日星期六 下午4:08:55</li></ul><h1 id="让我来告诉你们这些渴求知识的人，不要陷入论辩的渊薮和言辞的冲突。辩言毫无意义，它们或优美或丑陋，或聪明或愚蠢，任何人都可以接受或拒绝。然而你已听过的教义却并非我的辩言，它的目标也并非向那些追求知识的人们解释这个世界。它的目标与众不同：这就是超拔苦难而得救，乔答摩所宣讲的仅此而已"><a href="#让我来告诉你们这些渴求知识的人，不要陷入论辩的渊薮和言辞的冲突。辩言毫无意义，它们或优美或丑陋，或聪明或愚蠢，任何人都可以接受或拒绝。然而你已听过的教义却并非我的辩言，它的目标也并非向那些追求知识的人们解释这个世界。它的目标与众不同：这就是超拔苦难而得救，乔答摩所宣讲的仅此而已" class="headerlink" title="让我来告诉你们这些渴求知识的人，不要陷入论辩的渊薮和言辞的冲突。辩言毫无意义，它们或优美或丑陋，或聪明或愚蠢，任何人都可以接受或拒绝。然而你已听过的教义却并非我的辩言，它的目标也并非向那些追求知识的人们解释这个世界。它的目标与众不同：这就是超拔苦难而得救，乔答摩所宣讲的仅此而已"></a>让我来告诉你们这些渴求知识的人，不要陷入论辩的渊薮和言辞的冲突。辩言毫无意义，它们或优美或丑陋，或聪明或愚蠢，任何人都可以接受或拒绝。然而你已听过的教义却并非我的辩言，它的目标也并非向那些追求知识的人们解释这个世界。它的目标与众不同：这就是超拔苦难而得救，乔答摩所宣讲的仅此而已</h1><ul><li>您在第 34 页（位置 #510-511）的标注 | 添加于 2023年3月20日星期一 下午4:07:56</li></ul><h1 id="我无权去评判他人的生活，我必须为自己做出判断。我必须选择或抛弃。"><a href="#我无权去评判他人的生活，我必须为自己做出判断。我必须选择或抛弃。" class="headerlink" title="我无权去评判他人的生活，我必须为自己做出判断。我必须选择或抛弃。"></a>我无权去评判他人的生活，我必须为自己做出判断。我必须选择或抛弃。</h1><ul><li>您在第 37 页（位置 #556-556）的标注 | 添加于 2023年4月4日星期二 上午1:27:41</li></ul><h1 id="意义与实在并非隐藏于事物的背后，而是寓于事物自身，寓于事物的一切现象。"><a href="#意义与实在并非隐藏于事物的背后，而是寓于事物自身，寓于事物的一切现象。" class="headerlink" title="意义与实在并非隐藏于事物的背后，而是寓于事物自身，寓于事物的一切现象。"></a>意义与实在并非隐藏于事物的背后，而是寓于事物自身，寓于事物的一切现象。</h1><ul><li>您在第 37 页（位置 #557-558）的标注 | 添加于 2023年4月4日星期二 上午1:28:22</li></ul><h1 id="一个人阅读一本所要研究的书，他不会去鄙弃书的字母和句点并把它们斥为幻象，斥为偶然的无意义的躯壳，"><a href="#一个人阅读一本所要研究的书，他不会去鄙弃书的字母和句点并把它们斥为幻象，斥为偶然的无意义的躯壳，" class="headerlink" title="一个人阅读一本所要研究的书，他不会去鄙弃书的字母和句点并把它们斥为幻象，斥为偶然的无意义的躯壳，"></a>一个人阅读一本所要研究的书，他不会去鄙弃书的字母和句点并把它们斥为幻象，斥为偶然的无意义的躯壳，</h1><ul><li>您在第 48 页（位置 #731-733）的标注 | 添加于 2023年4月15日星期六 下午4:33:45</li></ul><h1 id="悉达多想，这种生活没有任何难题。当我还是沙门的时候，一切都是艰难和烦恼，最终是绝望。而现在一切都非常容易，容易得就像伽摩拉的亲吻指令。我需要衣服与金钱，仅此而已。这都是不会搅乱一个人睡眠的简单目标。"><a href="#悉达多想，这种生活没有任何难题。当我还是沙门的时候，一切都是艰难和烦恼，最终是绝望。而现在一切都非常容易，容易得就像伽摩拉的亲吻指令。我需要衣服与金钱，仅此而已。这都是不会搅乱一个人睡眠的简单目标。" class="headerlink" title="悉达多想，这种生活没有任何难题。当我还是沙门的时候，一切都是艰难和烦恼，最终是绝望。而现在一切都非常容易，容易得就像伽摩拉的亲吻指令。我需要衣服与金钱，仅此而已。这都是不会搅乱一个人睡眠的简单目标。"></a>悉达多想，这种生活没有任何难题。当我还是沙门的时候，一切都是艰难和烦恼，最终是绝望。而现在一切都非常容易，容易得就像伽摩拉的亲吻指令。我需要衣服与金钱，仅此而已。这都是不会搅乱一个人睡眠的简单目标。</h1><ul><li>您在第 49 页（位置 #750-751）的标注 | 添加于 2023年4月15日星期六 下午4:36:00</li></ul><h1 id="他也无需激动，他只是被牵引并且任凭自己的沉落。他只为自己的目标所牵引，他不允许任何扰乱自己目标的东西进入他的心境"><a href="#他也无需激动，他只是被牵引并且任凭自己的沉落。他只为自己的目标所牵引，他不允许任何扰乱自己目标的东西进入他的心境" class="headerlink" title="他也无需激动，他只是被牵引并且任凭自己的沉落。他只为自己的目标所牵引，他不允许任何扰乱自己目标的东西进入他的心境"></a>他也无需激动，他只是被牵引并且任凭自己的沉落。他只为自己的目标所牵引，他不允许任何扰乱自己目标的东西进入他的心境</h1><ul><li>您在第 50 页（位置 #752-754）的标注 | 添加于 2023年4月15日星期六 下午4:36:10</li></ul><h1 id="。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”-伽摩拉静静地听着，她喜爱"><a href="#。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”-伽摩拉静静地听着，她喜爱" class="headerlink" title="。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。” 伽摩拉静静地听着，她喜爱"></a>。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。” 伽摩拉静静地听着，她喜爱</h1><ul><li>您在第 50 页（位置 #752-753）的标注 | 添加于 2023年4月15日星期六 下午4:36:15</li></ul><h1 id="。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”"><a href="#。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”" class="headerlink" title="。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”"></a>。没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”</h1><ul><li>您在第 50 页（位置 #752-753）的标注 | 添加于 2023年4月15日星期六 下午4:36:23</li></ul><h1 id="没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”"><a href="#没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”" class="headerlink" title="没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”"></a>没有任何事物是由神灵的驱使，世上并不存在神灵。只要能够思考、等待和斋戒。任何人都可以施魔法，任何人都可以达到自己的目标。”</h1><ul><li>您在第 54 页（位置 #821-822）的标注 | 添加于 2023年5月3日星期三 下午3:31:11</li></ul><h1 id="。我也没有以懊恼和急躁的情绪来伤害自己或是伤害他人。如果我有机会再去那里，或许还是去收购稻米，或许为了其他事情，那么那里的朋友们一定会欢迎我"><a href="#。我也没有以懊恼和急躁的情绪来伤害自己或是伤害他人。如果我有机会再去那里，或许还是去收购稻米，或许为了其他事情，那么那里的朋友们一定会欢迎我" class="headerlink" title="。我也没有以懊恼和急躁的情绪来伤害自己或是伤害他人。如果我有机会再去那里，或许还是去收购稻米，或许为了其他事情，那么那里的朋友们一定会欢迎我"></a>。我也没有以懊恼和急躁的情绪来伤害自己或是伤害他人。如果我有机会再去那里，或许还是去收购稻米，或许为了其他事情，那么那里的朋友们一定会欢迎我</h1><ul><li>您在第 59 页（位置 #897-899）的标注 | 添加于 2023年5月5日星期五 下午6:01:50</li></ul><h1 id="。然而，他一直觉得自己与众不同并带着一种优越感。他总是带着一点轻蔑来看待世人，带着那么一种嘲讽般的不屑，正如一个沙门总是对尘俗的人们感到那种不屑"><a href="#。然而，他一直觉得自己与众不同并带着一种优越感。他总是带着一点轻蔑来看待世人，带着那么一种嘲讽般的不屑，正如一个沙门总是对尘俗的人们感到那种不屑" class="headerlink" title="。然而，他一直觉得自己与众不同并带着一种优越感。他总是带着一点轻蔑来看待世人，带着那么一种嘲讽般的不屑，正如一个沙门总是对尘俗的人们感到那种不屑"></a>。然而，他一直觉得自己与众不同并带着一种优越感。他总是带着一点轻蔑来看待世人，带着那么一种嘲讽般的不屑，正如一个沙门总是对尘俗的人们感到那种不屑</h1><ul><li>您在第 59 页（位置 #902-904）的标注 | 添加于 2023年5月5日星期五 下午6:02:48</li></ul><h1 id="世人对自己的生活所持的那种重大感，他们深刻的欢乐与忧伤，以及那种无休止地推动他们去爱的力量所带给他们的焦虑而甜美的幸福。这些人永远爱着他们自己，爱着他们的孩子，爱着荣誉和利益，爱着对未来的筹划和企盼"><a href="#世人对自己的生活所持的那种重大感，他们深刻的欢乐与忧伤，以及那种无休止地推动他们去爱的力量所带给他们的焦虑而甜美的幸福。这些人永远爱着他们自己，爱着他们的孩子，爱着荣誉和利益，爱着对未来的筹划和企盼" class="headerlink" title="世人对自己的生活所持的那种重大感，他们深刻的欢乐与忧伤，以及那种无休止地推动他们去爱的力量所带给他们的焦虑而甜美的幸福。这些人永远爱着他们自己，爱着他们的孩子，爱着荣誉和利益，爱着对未来的筹划和企盼"></a>世人对自己的生活所持的那种重大感，他们深刻的欢乐与忧伤，以及那种无休止地推动他们去爱的力量所带给他们的焦虑而甜美的幸福。这些人永远爱着他们自己，爱着他们的孩子，爱着荣誉和利益，爱着对未来的筹划和企盼</h1><ul><li>您在第 61 页（位置 #930-931）的标注 | 添加于 2023年5月5日星期五 下午6:04:40</li></ul><h1 id="后又回到那种追求和积聚财富的冲动。在这毫无意义的循环之中，他把自"><a href="#后又回到那种追求和积聚财富的冲动。在这毫无意义的循环之中，他把自" class="headerlink" title="后又回到那种追求和积聚财富的冲动。在这毫无意义的循环之中，他把自"></a>后又回到那种追求和积聚财富的冲动。在这毫无意义的循环之中，他把自</h1><ul><li>您在第 61 页（位置 #931-931）的标注 | 添加于 2023年5月5日星期五 下午6:04:46</li></ul><h1 id="在这毫无意义的循环之中，他把自己拖得筋疲力尽，变得衰老而病态。"><a href="#在这毫无意义的循环之中，他把自己拖得筋疲力尽，变得衰老而病态。" class="headerlink" title="在这毫无意义的循环之中，他把自己拖得筋疲力尽，变得衰老而病态。"></a>在这毫无意义的循环之中，他把自己拖得筋疲力尽，变得衰老而病态。</h1><ul><li>您在第 65 页（位置 #997-999）的标注 | 添加于 2023年5月5日星期五 下午6:10:07</li></ul><h1 id="他热切地希求空寂，希求安宁，希求死亡。就让一道雷电来将他击毁-就让一条猛虎来将他吞噬！要是有某种烈酒、某种毒药能够给予他虚无，让他忘却，让他长眠不醒，那该有多好"><a href="#他热切地希求空寂，希求安宁，希求死亡。就让一道雷电来将他击毁-就让一条猛虎来将他吞噬！要是有某种烈酒、某种毒药能够给予他虚无，让他忘却，让他长眠不醒，那该有多好" class="headerlink" title="他热切地希求空寂，希求安宁，希求死亡。就让一道雷电来将他击毁!就让一条猛虎来将他吞噬！要是有某种烈酒、某种毒药能够给予他虚无，让他忘却，让他长眠不醒，那该有多好"></a>他热切地希求空寂，希求安宁，希求死亡。就让一道雷电来将他击毁!就让一条猛虎来将他吞噬！要是有某种烈酒、某种毒药能够给予他虚无，让他忘却，让他长眠不醒，那该有多好</h1><ul><li>您在第 67 页（位置 #1016-1017）的标注 | 添加于 2023年5月5日星期五 下午6:12:28</li></ul><h1 id="他已经在寻求死亡。通过毁灭肉体以获得安宁的天真愿望在他的内心竟已如此强烈。"><a href="#他已经在寻求死亡。通过毁灭肉体以获得安宁的天真愿望在他的内心竟已如此强烈。" class="headerlink" title="他已经在寻求死亡。通过毁灭肉体以获得安宁的天真愿望在他的内心竟已如此强烈。"></a>他已经在寻求死亡。通过毁灭肉体以获得安宁的天真愿望在他的内心竟已如此强烈。</h1><ul><li>您在第 75 页（位置 #1149-1149）的标注 | 添加于 2023年5月5日星期五 下午6:23:34</li></ul><h1 id="他看到河水无间断地流转不居，而同时却又恒常不变地存在着；河水永无迁变却又刻刻常新。"><a href="#他看到河水无间断地流转不居，而同时却又恒常不变地存在着；河水永无迁变却又刻刻常新。" class="headerlink" title="他看到河水无间断地流转不居，而同时却又恒常不变地存在着；河水永无迁变却又刻刻常新。"></a>他看到河水无间断地流转不居，而同时却又恒常不变地存在着；河水永无迁变却又刻刻常新。</h1><ul><li>您在第 79 页（位置 #1207-1209）的标注 | 添加于 2023年5月5日星期五 下午6:27:28</li></ul><h1 id="河水在同一时刻无处不在，遍及源头，河口、瀑布、渡口、水流、海洋以及山脉之间；从另一方面来说，现在只为其自身而存在，并非过去或未来的影子。”"><a href="#河水在同一时刻无处不在，遍及源头，河口、瀑布、渡口、水流、海洋以及山脉之间；从另一方面来说，现在只为其自身而存在，并非过去或未来的影子。”" class="headerlink" title="河水在同一时刻无处不在，遍及源头，河口、瀑布、渡口、水流、海洋以及山脉之间；从另一方面来说，现在只为其自身而存在，并非过去或未来的影子。”"></a>河水在同一时刻无处不在，遍及源头，河口、瀑布、渡口、水流、海洋以及山脉之间；从另一方面来说，现在只为其自身而存在，并非过去或未来的影子。”</h1><ul><li>您在第 79 页（位置 #1212-1212）的标注 | 添加于 2023年5月5日星期五 下午6:27:55</li></ul><h1 id="不可得，未来之心不可得，万法皆如，俱入目前。"><a href="#不可得，未来之心不可得，万法皆如，俱入目前。" class="headerlink" title="不可得，未来之心不可得，万法皆如，俱入目前。"></a>不可得，未来之心不可得，万法皆如，俱入目前。</h1><ul><li>您在第 79 页（位置 #1212-1212）的标注 | 添加于 2023年5月5日星期五 下午6:28:01</li></ul><h1 id="万法皆如，俱入目前。"><a href="#万法皆如，俱入目前。" class="headerlink" title="万法皆如，俱入目前。"></a>万法皆如，俱入目前。</h1><ul><li>您在第 82 页（位置 #1249-1249）的标注 | 添加于 2023年5月5日星期五 下午6:30:32</li></ul><h1 id="让他死好了，这和我们孩子有什么关系呢"><a href="#让他死好了，这和我们孩子有什么关系呢" class="headerlink" title="让他死好了，这和我们孩子有什么关系呢?"></a>让他死好了，这和我们孩子有什么关系呢?</h1><ul><li>您在第 93 页（位置 #1422-1423）的标注 | 添加于 2023年5月5日星期五 下午6:41:38</li></ul><h1 id="悉达多此时的思维竟如此幼稚，如此缺乏逻辑，他与凡俗的人们竟变得如此相像"><a href="#悉达多此时的思维竟如此幼稚，如此缺乏逻辑，他与凡俗的人们竟变得如此相像" class="headerlink" title="悉达多此时的思维竟如此幼稚，如此缺乏逻辑，他与凡俗的人们竟变得如此相像"></a>悉达多此时的思维竟如此幼稚，如此缺乏逻辑，他与凡俗的人们竟变得如此相像</h1><ul><li>您在第 98 页（位置 #1491-1492）的标注 | 添加于 2023年5月5日星期五 下午6:46:58</li></ul><h1 id="而所有的音声，所有的目标，所有的渴望，所有的善与恶，悲伤与欢乐，所有这一切共同构成了统一的世界，"><a href="#而所有的音声，所有的目标，所有的渴望，所有的善与恶，悲伤与欢乐，所有这一切共同构成了统一的世界，" class="headerlink" title="而所有的音声，所有的目标，所有的渴望，所有的善与恶，悲伤与欢乐，所有这一切共同构成了统一的世界，"></a>而所有的音声，所有的目标，所有的渴望，所有的善与恶，悲伤与欢乐，所有这一切共同构成了统一的世界，</h1><ul><li>您在第 100 页（位置 #1523-1524）的标注 | 添加于 2023年5月5日星期五 下午6:49:17</li></ul><h1 id="当一个人有所追寻，”悉达多道，“他只会看到他所追寻之物。他之所以无所发现，无所获得是因为他只专注于他所追寻之物，因为他执迷于自己的目标。"><a href="#当一个人有所追寻，”悉达多道，“他只会看到他所追寻之物。他之所以无所发现，无所获得是因为他只专注于他所追寻之物，因为他执迷于自己的目标。" class="headerlink" title="当一个人有所追寻，”悉达多道，“他只会看到他所追寻之物。他之所以无所发现，无所获得是因为他只专注于他所追寻之物，因为他执迷于自己的目标。"></a>当一个人有所追寻，”悉达多道，“他只会看到他所追寻之物。他之所以无所发现，无所获得是因为他只专注于他所追寻之物，因为他执迷于自己的目标。</h1><ul><li>您在第 102 页（位置 #1564-1566）的标注 | 添加于 2023年5月5日星期五 下午6:53:20</li></ul><h1 id="。因此，我认为一切的存在皆为至善——无论是死与生，无论罪孽与虔诚，无论智慧或是蠢行，一切皆是必然，一切只须我的欣然赞同，一切只需我的理解与爱心"><a href="#。因此，我认为一切的存在皆为至善——无论是死与生，无论罪孽与虔诚，无论智慧或是蠢行，一切皆是必然，一切只须我的欣然赞同，一切只需我的理解与爱心" class="headerlink" title="。因此，我认为一切的存在皆为至善——无论是死与生，无论罪孽与虔诚，无论智慧或是蠢行，一切皆是必然，一切只须我的欣然赞同，一切只需我的理解与爱心"></a>。因此，我认为一切的存在皆为至善——无论是死与生，无论罪孽与虔诚，无论智慧或是蠢行，一切皆是必然，一切只须我的欣然赞同，一切只需我的理解与爱心</h1><ul><li>您在第 103 页（位置 #1579-1580）的标注 | 添加于 2023年5月5日星期五 下午6:54:38</li></ul><h1 id="而值得礼敬之处。可我不想再谈下去，言词不能很好地表达思想。思想一旦形诸言词即刻就会有所改变，有所歪曲，有点愚蠢。"><a href="#而值得礼敬之处。可我不想再谈下去，言词不能很好地表达思想。思想一旦形诸言词即刻就会有所改变，有所歪曲，有点愚蠢。" class="headerlink" title="而值得礼敬之处。可我不想再谈下去，言词不能很好地表达思想。思想一旦形诸言词即刻就会有所改变，有所歪曲，有点愚蠢。"></a>而值得礼敬之处。可我不想再谈下去，言词不能很好地表达思想。思想一旦形诸言词即刻就会有所改变，有所歪曲，有点愚蠢。</h1><ul><li>您在第 105 页（位置 #1604-1605）的标注 | 添加于 2023年5月5日星期五 下午6:56:46</li></ul><p>这就是我之所以如此怀疑言词的原因。我知道这种言词的冲突是一种幻象，</p>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>书评</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Internet</title>
    <link href="/2023/05/05/Internet/"/>
    <url>/2023/05/05/Internet/</url>
    
    <content type="html"><![CDATA[<h1 id="互联网"><a href="#互联网" class="headerlink" title="互联网"></a>互联网</h1><p><strong>暂时用这个标题，还没想好</strong></p><p><strong>打算用来记录互联网带给我激动的事情。可以是网站，或者是事件</strong></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我蛮喜欢做这样一件事情，点击一个网站中感兴趣的链接，跳转到另一个网站。如此重复多次，再回头去看时，我常常记不得自己是从哪跳转到这个网站。但往往打开的网站都能让我有所收获，至少觉得有趣。</p><p>很多博客也会设置友链接力。还有个蛮有意境的名字叫“开往”。</p><p>互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。而这一个个链接就像连接这一座座孤岛的桥。</p><p>六度分隔理论最早提出的时候是1967年，那时候还没有互联网。而几十年后的今天，在互联网的帮助下，只需要好的链接，中间人甚至可以不再需要6个，就可以将世界上任何本来互不相识的两人建立起联系。</p><p>我觉得这就是互联网于我的魅力。</p><h2 id="2023年4月25日"><a href="#2023年4月25日" class="headerlink" title="2023年4月25日"></a>2023年4月25日</h2><p>今天想到要看下比特币诞生的那篇论文<a href="https://bitcoin.org/bitcoin.pdf">Bitcoin: A Peer-to-Peer Electronic Cash System</a>。论文中参考文献中有个链接，我抱着试试看的心态点了进去。<a href="http://www.weidai.com/bmoney.txt">网站</a>加载得很快。没有太多的修饰，它就只是文字。那时候就有种被触动的感觉。1998年的互联网，我就这样无意中窥探到了。</p><p>更让我惊讶的是，这个网站最近修改的时间是1&#x2F;10&#x2F;2021。我很难用恰当的言语去描述我现在的感觉。但就是感觉很惊喜。</p><p>然后我去搜了下作者，戴伟，华裔。他当时写这篇文章的时候大概是22岁左右。！！！</p><h2 id="2023年5月2日"><a href="#2023年5月2日" class="headerlink" title="2023年5月2日"></a>2023年5月2日</h2><p>发现了这个网站<a href="https://playgameoflife.com/">Game of Life</a>。我一直有自己实现一个生命游戏的想法，但始终没有动手。这个网站做得很好，可以用来参考。</p><h2 id="2023年5月5日"><a href="#2023年5月5日" class="headerlink" title="2023年5月5日"></a>2023年5月5日</h2><p>今天经历了一个很有意思的事情。</p><ol><li>最开始时看到timeline上有人star了<a href="https://github.com/SuikaXhq/seu-bachelor-thesis-2022">SuikaXhq&#x2F;seu-bachelor-thesis-2022</a>。</li><li>发现项目的作者star的项目中有一个<a href="https://github.com/seuite/awesome-seu">seuite&#x2F;awesome-seu</a>。</li><li>接着就发现了一个学校里曾存在并活跃着的协会——东南大学网络技术和开源技术协会。虽然很可惜的是：这个协会已经不再传承，而且它的官方网站也已经挂掉了。但从它在Github上仍存在的项目和博客上仍能看到这是一个很有趣的协会。</li><li>这个协会的会长也有写博客，虽然已经无法访问，但项目中有一句话让我觉得很有感触。<blockquote><p>一个对计算机充满好奇的小男孩现在长大成为一个对计算机更加好奇的大男孩了。我始终还是觉得自己没有摸到计算机的门槛，觉得这个巨大的世界我仅仅只探索了极其微小的一角。过去的天才们，工程师们，平凡人们探索过的世界已经不小，可是抬头看看，那浩瀚的，未知的，多么美丽而又神秘的新世界，还等待着我，我的朋友们，老师们，以及所有的人们继续去学习，去探索它。我相信计算机带给人类的绝不仅仅只有现在这么一点点成就，还有更多，更远，更辽阔的内容等着我们一代人，一代人地走下去，寻找下去，喜欢下去。</p></blockquote> 我喜欢这个观点。</li><li>今天还发现了好几位很优秀的学长。从他们的博客中看到他们当年的一些想法和经历的事情。特别是他们上学时的笔记。这种感觉就很奇妙。</li></ol>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>诗词里的地名</title>
    <link href="/2023/05/01/place-names-in-poetry/"/>
    <url>/2023/05/01/place-names-in-poetry/</url>
    
    <content type="html"><![CDATA[<h1 id="诗词里的地名"><a href="#诗词里的地名" class="headerlink" title="诗词里的地名"></a>诗词里的地名</h1><p><strong>出去旅游，有件事我一直很热衷，就是去那些在诗词中出现过的地方中走走。这往往能给我一种感觉，用张若虚的话来说就是“人生代代无穷已，江月年年望相似”。让我如此热衷的还有另一个原因：古人在某个地点因事因景所凝聚的个人感受，能让现在的我读到。而当年他们所在的地方或者地名，又能流传至今。这两点每一点都是很难得的，而两点同时发生，更是凤毛麟角。</strong></p><h2 id="南京"><a href="#南京" class="headerlink" title="南京"></a>南京</h2><h3 id="金陵"><a href="#金陵" class="headerlink" title="金陵"></a>金陵</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">桂枝香·金陵怀古 王安石<br><br>登临送目，正故国晚秋，天气初肃。千里澄江似练，翠峰如簇。归帆去棹残阳里，背西风，酒旗斜矗。彩舟云淡，星河鹭起，画图难足。<br><br>念往昔，繁华竞逐，叹门外楼头，悲恨相续。千古凭高对此，谩嗟荣辱。六朝旧事随流水，但寒烟衰草凝绿。至今商女，时时犹唱，后庭遗曲。<span class="hljs-comment">(衰草 一作：芳草)</span><br></code></pre></td></tr></table></figure><h2 id="扬州"><a href="#扬州" class="headerlink" title="扬州"></a>扬州</h2><h3 id="扬州-1"><a href="#扬州-1" class="headerlink" title="扬州"></a>扬州</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">江城子 苏轼<br>墨云拖雨过西楼。水东流，晚烟收。柳外残阳，回照动帘钩。今夜巫山真个好，花未落，酒新篘。<br><br>美人微笑转星眸。月华羞，捧金瓯。歌扇萦风，吹散一春愁。试问江南诸伴侣，谁似我，醉扬州。<br></code></pre></td></tr></table></figure><p>喜欢“墨云拖雨”中这个“拖”字。这几天雨下得很大，雨云我也常常看，但想不到用“拖”去形容。</p><h3 id="维扬"><a href="#维扬" class="headerlink" title="维扬"></a>维扬</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs">扬州慢 姜夔<br><br>淳熙丙申至日，予过维扬。夜雪初霁，荠麦弥望。入其城则四顾萧条，寒水自碧，暮色渐起，戍角悲吟。予怀怆然，感慨今昔，因自度此曲。千岩老人以为有《黍离》之悲也。<br><br>淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏，清角吹寒，都在空城。<br><br>杜郎俊赏，算而今，重到须惊。纵豆蔻词工，青楼梦好，难赋深情。二十四桥仍在，波心荡，冷月无声。念桥边红药，年年知为谁生？<br></code></pre></td></tr></table></figure><p>扬州城历史上很坎坷，几经战乱。姜夔当时写下这首词时，杨州正是战乱结束。但他描绘的还是很有意境的。我觉得单是这词牌名就很美。很简单的一个“慢”字，就写出了一种令人向往的生活节奏。</p><h3 id="瓜州"><a href="#瓜州" class="headerlink" title="瓜州"></a>瓜州</h3><ul><li><p><em>楼船夜雪瓜洲渡，铁马秋风大散关。</em></p></li><li><p><em>京口瓜州一水间</em></p></li></ul><p>瓜州渡现在是一个公园。我经过，但还没有进去过。</p><p>可以坐镇扬汽渡来体验“一水间”。体验感很不错：大货车，小车，人共乘一艘船。江面宽阔，江风蛮大的，甚至有些冷。</p><h3 id="二十四桥"><a href="#二十四桥" class="headerlink" title="二十四桥"></a>二十四桥</h3><ul><li><em>二十四桥明月夜，玉人何处教吹箫。</em></li><li><em>二十四桥仍在，波心荡，冷月无声。</em></li></ul><p>我之前读到“二十四桥明月夜”的时候，下意识地想象成是月光照耀下的二十四座桥。但现在二十四桥是瘦西湖景区内的一座景点，只有一座桥。</p><p>但据黄永玉老先生的经历，他年轻时也去找过，但“狠狠地走了一趟”后，“连二十四桥桥基都捉摸不到”。如果那桥就在瘦西湖景区内，我想他并不需要费这么大一番功夫。所以我仍愿意保留自己之前的想象。</p><h3 id="春江"><a href="#春江" class="headerlink" title="春江"></a>春江</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs">春江花月夜 张若虚<br>春江潮水连海平，海上明月共潮生。<br><br>滟滟随波千万里，何处春江无月明！<br><br>江流宛转绕芳甸，月照花林皆似霰。<br><br>空里流霜不觉飞，汀上白沙看不见。<br><br>江天一色无纤尘，皎皎空中孤月轮。<br><br>江畔何人初见月？江月何年初照人？<br><br>人生代代无穷已，江月年年望相似。<br><br>不知江月待何人，但见长江送流水。<br><br>白云一片去悠悠，青枫浦上不胜愁。<br><br>谁家今夜扁舟子？何处相思明月楼？<br><br>可怜楼上月徘徊，应照离人妆镜台。<br><br>玉户帘中卷不去，捣衣砧上拂还来。<br><br>此时相望不相闻，愿逐月华流照君。<br><br>鸿雁长飞光不度，鱼龙潜跃水成文。<br><br>昨夜闲潭梦落花，可怜春半不还家。<br><br>江水流春去欲尽，江潭落月复西斜。<br><br>斜月沉沉藏海雾，碣石潇湘无限路。<br><br>不知乘月几人归，落月摇情满江树。<br></code></pre></td></tr></table></figure><p>此首诗中的春江说法众多，主流的有三种说法，但都是指向扬州<br>（我中学的时候，慕着其“孤篇压倒全唐”之名背过，但到如今还是不能完全欣赏。背的也是七零八落，惭愧）</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>感想</tag>
      
      <tag>出游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客与文章</title>
    <link href="/2023/04/30/Blog-and-Articles/"/>
    <url>/2023/04/30/Blog-and-Articles/</url>
    
    <content type="html"><![CDATA[<h1 id="博客与文章"><a href="#博客与文章" class="headerlink" title="博客与文章"></a>博客与文章</h1><p><em>打算记录些我看过的觉得有意思的博客和文章</em><br><em>博客会简单写下推荐的理由，其实也说不上推荐，因为我觉得这些博主都可以称得上是我需要向之学习的大佬</em><br><em>文章会简单记录下自己读的感受，但会避免变成是对文章的梗概</em></p><p><del><strong>感觉这个题目不能很好地概括我这篇的内容，但现在又没想好</strong></del></p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul><li><a href="https://plantegg.github.io/">plantegg</a> 计算机网络相关的，干货很多</li><li><a href="https://plumz.me/">Plum’s Blog</a> 作者很有趣，涉猎也很广泛。博客持续更新了十几年了。</li><li><a href="https://freemind.pluskid.org/">Free Mind</a> 有思考，有科普，内容足。</li><li><a href="https://blog.jm233333.com/">JM233333’s Blog</a> 作者是南大在读博士生，也是jyy操作系统课的助教</li><li><a href="https://seuite.github.io/">SEUITE</a> 偶然间发现的学校曾存在过的一个协会。从仅存的内容中可以看出是一个很有意思的社团，很可惜它没有传承下来。</li><li><a href="https://soulogic.com/about">灵魂逻辑</a> 先关注的Twitter才发现的博客。作者的经历蛮羡慕的。</li><li><a href="https://rehoni.github.io/cn/">罗皓的个人博客</a> 一个学长&#x2F;学姐的blog。从17年还在大学，到最后一篇博文是痛风的注意事项，能看出ta经历了很多。很吸引我的是ta对每个月支出的总结，虽然可能没太多参考夹着，但还是能让我对以后可能的生活一窥一二。</li></ul><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><ul><li><p><a href="https://plumz.me/archives/12906/">你所热爱的，就是你的生活</a><br>我还蛮喜欢看别人写的年度总结的。像是开了一扇窗去了解一个陌生人一年来的生活。但自己却没啥勇气去写年度总结，并将之放之网上。再说回来这篇文章，我很认同这段话。</p><blockquote><p>有时候我想想，互联网给我带来的是更多时光的消磨，有的时候，我是不是应该返璞归真，多多做一些“远离网络”的事情。比如翻出自己曾经买过的那些书，拿出自己还没有拆封的音乐 CD，找到自己当年吃灰的 3DS，享受那些我们还没有被浮躁的互联网绑架时候的珍贵东西，或许这样对我来说是更好的选择，自己也会得到更多的提高。</p></blockquote><p>我有好多时间是用来刷Twitter，贴吧，尽管这些碎片化的东西常常就是刷过去就忘了。我觉得我的这些时间值得更好的去处。</p></li><li><p><a href="https://www.jasonwei.net/blog/practicing-ai-research">Practicing AI research</a></p><ul><li>这句让我印象很深。有被激励到。<blockquote><p>doing research is a skill that can be learned through practice, much like sports or music.</p></blockquote></li><li>作者谈到沉没成本时，是这样说的”it’s important to identify sunk cost fallacies”。我的理解是当断则断，不要过多地去考虑沉没成本。</li></ul></li><li><p><a href="https://luolei.org/gfw/">GFW之父方滨兴讲座后杂想</a></p><ul><li>看到这篇的时候觉得很巧。因为我之前就follow了作者的Twitter。现在无意间看到了他十年前还在上大学时听讲座的想法。这种感觉很棒。</li><li>另一个感触是尽管十年过去，这篇文章依旧没有过时。甚至墙更高了些。作者文中的畅想”不知20年后，如果我们走进了一个开放、自由的公民社会，那堵墙不再，方校长还在的话，他会怎么回味自己的所作所为。”距离当时的二十年后，还有十年。</li><li>但最近有一个现象我看着很欣喜。我看到周围好多同学都在用着ChatGPT。而用它是需要用代理的。</li></ul></li><li><p><a href="https://freemind.pluskid.org/misc/elden-ring-pvp-and-theory-of-mind/">Elden Ring PvP and Theory of Mind</a></p><ul><li>很有趣，作者从pvp讲到ToM。并科普了ToM的概念。我觉得作者科普的很好。既讲明白了概念，还让读者——至少是我，对此有了进一步了解的兴趣。</li><li>文中谈到 AI 语言模型。让我想到之前看过的LLM继续发展下去，可能会有类似读心术的效果，能预测你下一步要做什么，甚至是在想什么。我觉得这在一定程度是可行的。因为现代所谓的一些读心术，很多都是基于微表情的观察和分析其过去的行为模式和经历上。</li></ul></li><li><p><a href="https://freemind.pluskid.org/electronics/5x12-keyboard-debugging2/">记一次有意义的熬夜</a></p><ul><li>作者客制化键盘的经历。</li><li>我自己算是半个机械键盘爱好者，也接触了些客制化键盘，但一直只停留在很初级的阶段。所以看得很起劲。</li></ul></li><li><p><a href="https://soulogic.com/item/3294">我的郑老三死了</a> </p><ul><li>作者纪念自己的猫</li><li>很有感觉</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TinyTinyRSS-OPML-to-MD-Table</title>
    <link href="/2023/04/29/TinyTinyRSS-OPML-to-MD-Table/"/>
    <url>/2023/04/29/TinyTinyRSS-OPML-to-MD-Table/</url>
    
    <content type="html"><![CDATA[<h1 id="TinyTinyRSS-OPML-to-MD-Table"><a href="#TinyTinyRSS-OPML-to-MD-Table" class="headerlink" title="TinyTinyRSS-OPML-to-MD-Table"></a>TinyTinyRSS-OPML-to-MD-Table</h1><h2 id="需求由来："><a href="#需求由来：" class="headerlink" title="需求由来："></a>需求由来：</h2><p>我很喜欢读博客。但发现总有些很有趣的博客等着发现。所以我关注了些推荐博客的频道。同时，我也想分享些自己喜欢的博客，但每次去手动复制又显得太麻烦了。所以就想着做一个自动化的方式，顺带着也可以学习下Github Action.</p><h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><ol><li>大部分时间是花在了如何获取opml文件上。Tiny Tiny RSS所给的文档较为精简，而网上相关的资料大都仅局限于如何部署。所以这一段只能是自己摸索。<ul><li>TinyTinyRSS的网页版有给一个按钮能导出OPML，而这个按钮所指向的网址是<code>http://example.com/tt-rss/backend.php?op=opml&amp;method=export&#39;</code>。但它是有个鉴权操作的。需要登录。</li><li>它的示例中有提供了一个登录的api调用，所以我开始的想法也是顺着这个来。想着直接添加data参数。但尝试了多种添加方式无果。</li><li>后来注意到登录成功是会返回session值的，于是先用curl试验了下。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 登录并获取Session ID</span><br>SESSION=$(curl -s -d <span class="hljs-string">&#x27;&#123;&quot;op&quot;:&quot;login&quot;,&quot;user&quot;:&quot;user&quot;,&quot;password&quot;:&quot;password&quot;&#125;&#x27;</span> http://example.com/tt-rss/api/ | python -c <span class="hljs-string">&quot;import sys, json; print(json.load(sys.stdin)[&#x27;content&#x27;][&#x27;session_id&#x27;])&quot;</span>)<br><br><span class="hljs-comment">#获得opml文件</span><br>curl -o my_tiny_tiny_rss.opml <span class="hljs-string">&#x27;http://example.com/tt-rss/backend.php?op=opml&amp;method=export&#x27;</span> --cookie <span class="hljs-string">&quot;ttrss_sid=<span class="hljs-variable">$&#123;SESSION&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure></li><li>转写成python是用的request。其实现在回头想想，这应该是蛮基础的操作，而且session之前也有接触过。如果早点想起来的话是可以少花些时间的。</li></ul></li><li>opml的解析有现成的库，用就是了。</li><li>然后就是把一些个人信息抽出来写在配置文件中。这里踩了一个坑。<code>data = &#123;&#39;op&#39;: &#39;login&#39;, &#39;user&#39;: user, &#39;password&#39;: password&#125;</code>,我开始的时候是这样写的<code>data = f&quot;&#123;&#123;'op': 'login', 'user': &#123;user&#125;, 'password': &#123;password&#125;&#125;&#125;&quot;</code>。后者虽然在形式上看着一样，但前者是json对象，后者是字符串。这里也给我提了个醒：Python虽然有动态类型这个特性，但还是要注意类型错误。</li><li>最后是使用Github Action。之前也有使用过，但是是直接用的别人写好的workflow。所以也花了些时间学习了下。遇到的几个问题是<ul><li>Yml文件的格式问题。这个可以用<a href="https://codebeautify.org/yaml-validator">YAML Validator</a>来检查。Vscode应该也有相应的插件吧。</li><li>运行时需要用到的变量，是用的secret。我之前以为secret的value只能是字符串。但<a href="https://nekokiku.cn/2020/12/22/2020-12-22-Github-Action%E4%B8%ADpython%E8%8E%B7%E5%8F%96%E4%BB%93%E5%BA%93%E7%9A%84secrets/">Github Action中python获取仓库的secrets</a>中提到，可以把一整个yml文件放在value里面。所以我就想那json文件应该也可以。试了下确实能行。这样我的代码需要修改的地方就很少了。</li><li>workflow的触发方式,要添加手动触发，需加上<code>workflow_dispatch:</code></li></ul></li></ol><h2 id="学到的知识"><a href="#学到的知识" class="headerlink" title="学到的知识"></a>学到的知识</h2><ul><li>pipe和python的结合。下面这段是ChatGPT写的，太妙了。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SESSION=$(curl -s -d <span class="hljs-string">&#x27;&#123;&quot;op&quot;:&quot;login&quot;,&quot;user&quot;:&quot;user&quot;,&quot;password&quot;:&quot;password&quot;&#125;&#x27;</span> http://example.com/tt-rss/api/ | python -c <span class="hljs-string">&quot;import sys, json; print(json.load(sys.stdin)[&#x27;content&#x27;][&#x27;session_id&#x27;])&quot;</span>)<br></code></pre></td></tr></table></figure></li><li>Github Action的使用</li><li>python request</li></ul><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>这个项目算是个很小的项目，但我还是花了半天的时间，而且是在ChatGPT的帮助下。之前看到这样一种说法，搜索引擎大幅降低了普通人获取知识的难度，而ChatGPT在此基础上更是降低了十分客观的一个量。结合自己这次的经历，我十分认同这个观点。通过我对背景的补充和提问，ChatGPT让我省去了花费在各种教程和不完善的文档上所要消费的时间。这比搜索引擎所做到的交互要更自然。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://tt-rss.org/wiki/ApiReference">API Reference</a></li><li><a href="https://www.cnblogs.com/jiangleads/p/10636696.html">curl命令实现上网认证登录</a></li><li><a href="https://nekokiku.cn/2020/12/22/2020-12-22-Github-Action%E4%B8%ADpython%E8%8E%B7%E5%8F%96%E4%BB%93%E5%BA%93%E7%9A%84secrets/">Github Action中python获取仓库的secrets</a></li><li><a href="https://codebeautify.org/yaml-validator">YAML Validator</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>记录</tag>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>扬州慢</title>
    <link href="/2023/04/26/Yangzhou-slow/"/>
    <url>/2023/04/26/Yangzhou-slow/</url>
    
    <content type="html"><![CDATA[<h1 id="扬州慢"><a href="#扬州慢" class="headerlink" title="扬州慢"></a>扬州慢</h1><p><strong>黄永玉先生为“入木——黄永玉百岁版画艺术展”所创作的画作。我看了觉得很是喜欢。摘录原文如下</strong></p><p>扬州慢。</p><p>淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏，清角吹寒，都在空城。</p><p>杜郎俊赏，算而今，重到须惊。纵豆蔻词工，青楼梦好，难赋深情。二十四桥仍在，波心荡，冷月无声。念桥边红药，年年知为谁生？</p><p>钤印  认识的人越多，我就越喜欢狗（白文方印）</p><p>姜夔先生这阕词，不单评论了杜牧大师，并且还教育了我们一代代后人，也看透了社会的真情，所以我有时用不同的心情来画过它。多少年过去了，我居然也会老到快一百岁，好像还有好多事情还准备做。你看就那么兰约的完蛋，似乎连自己也对不起，好像也没有偷生的办法，好像写一点姜夔式的变文也办不到。（这难道很易？）写这劳骚，也只还不过多写几个字，讨主人的开心。我去过扬州，那是几十又几十年的事，在某个庙门口地摊上买到一部残之又残的傅青主的妇科刻本，回北京老书游子告诉我，傅山这刻本满地都是，不足取，等元宵节，我带你上厂甸要多少有多少。这事跟傅山无关，跟扬州无关，我只是交待一次我去过一回扬州。</p><p>钤印  黄（朱文圆印）</p><p>我还真附庸风雅去找过二十四桥，照姜先生口气，应该不是扬州所有桥的排列顺序，说“仍在”，起码应从杜先生那时候算起。“波心荡，冷月无声”，是姜先生感觉的回应，那桥在哪里呢？有人说在此，有人说在彼，我真跟着他和她们狠狠走了一趟临河的一条小街，几位街坊妇女在做针线，别说二十四桥，北京普通话也听不懂，大家沿河兜头一看，连二十四桥桥基都捉摸不到。唉！世界愚如我的真是不少，对着苍茫，着了多少笔墨，真是不计其数。夔先生自己也着了不少道，他是公认的曲牌的创作名家，好不容易一辈子混了个“乐正”似的官，上午上任，要摆点威武，命令濏官“奏”来听听，出口就错，原来瑟官动手叫“鼓”不叫“奏”，一汇报，马上下台。我仿佛记得以前有段笑话，把立体派、印象派和现代派混在一起演讲，有如把黄人、白人和“人类”混为一起，讲的当时没人敢站出来揭错的，谁都清楚，这是学术“问题”，谁也都清楚，这不是学术“后果”。时间过去近百年，写出来给大家看看，或许当时某位先生还未出世，不相信这事真有其事，说我把谎话当真话讲的，莫怪莫怪！</p><p>钤印  椿子（朱文扁方印）</p><p>大运河博物馆惠存。二〇二三年三月二十七日，黄永玉九十九岁于北京。</p><p>钤印  黄永玉（白文方印）、九五火眼金睛（朱文椭圆印）</p><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>提到扬州，我第一印象当属姜夔这阕《扬州慢》。来的路上，我也默诵这阙词。</p><p>荷花，我中学的美术课画过。我画得不好，所以知道不容易画。但百岁高龄，能画出这荷花，写这么多字。我觉得更是不易。</p><p>关于画上的字，我觉得也不错。尤其是内容。我觉得颇有种“从心所欲不逾矩”的感觉。记录几点：</p><ul><li>“不单评论了杜牧大师，并且还教育了我们一代代后人，也看透了社会的真情”。这里我读不出来。应该是阅历未到。</li><li>“我只是交待一次我去过一回扬州。”。很有趣。</li><li>“我还真附庸风雅去找过二十四桥”。本来觉得附庸风雅不是什么好词，但黄先生用来就显得风趣。我也喜欢干类似的事，特意去一些曾在诗中读过的地名走走，哪怕物是人非。</li><li>“唉！世界愚如我的真是不少”。 谦虚</li></ul>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>诗词</tag>
      
      <tag>出游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xLog使用体验</title>
    <link href="/2023/04/20/xLog-using/"/>
    <url>/2023/04/20/xLog-using/</url>
    
    <content type="html"><![CDATA[<p><em><a href="https://xlog.app/">xLog</a>这个开源博客社区，由于<a href="https://github.com/DIYgod/RSSHub">RSSHub</a>的作者的宣传，我前段时间就有听闻。。但我一直认同这样一种想法：”一个博客的死掉不是不再更新，而是无法访问。”而xLog毕竟是一个比较新的事物，无法保证其的可持续性，所以就一直没有使用的想法。</em></p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>但今天听了一个<a href="https://xinbao.xlog.app/27">No.27 和 Qwerty Learner 的开翼聊技术优化、产品运营和前端感悟</a>，我觉得讲得很好，看到它发布的平台有xLog。所以心念一转，想着去尝试一下，就当作一个备份也无妨。使用体验有几点值得一提：</p><h2 id="实际体验"><a href="#实际体验" class="headerlink" title="实际体验"></a>实际体验</h2><ul><li>如其宣传的一样，上手很容易。连接web3钱包和邮件后，我再导入自己已有的md文件就能搭一个博客。我觉得很不错。</li><li>提供的编辑器对我来说算是锦上添花。因为我比较习惯于在vscode上进行编辑。</li><li>ai智能摘要。我还是更倾向于自己手动去写摘要。但好像xLog它无法识别我原有的<code>excerpt: </code>，但其他的属性:<code>date:</code>,<code>tags:</code>,<code>title:</code>倒是有支持。</li><li>web3。相比较于其他的博客社区，web3是xLog一大特点。这个概念提出来也是有段时间了，但对我来说还是比较新的。这次xLog使用时我第一次去接触这方面的内容。好多概念我觉得都挺有趣的，我觉得应该找时间去了解下是怎么实现的。</li><li>社区。 因为是社区，这就意味着可能有更多的人会看到。都说写博客是为了自己看的，但如果有更多的人能看到自己的一些想法，那也不错。但我不想让自己陷入到这样一种情况：我因为太过于关注浏览量，点赞数等数据，然后却失去了自己写博客的初衷（关于初衷是什么，我想我会写一篇来好好思考下），那就得不偿失了。</li></ul><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>我以前写博客一般是这样的过程。</p><ol><li>有感想，然后记录下来，存在本地。</li><li>有空的时候会找时间，去从本地中的感想中挑选一些可以作为博文的。并对其进行稍微的修改（润色，脱敏），发布到<a href="https://euds63.github.io/">euds63.github.io</a>上。</li></ol><p>但现在如果要在<a href="https://erica-2392.xlog.app/">EuDs</a>也更新的话，那就还需要第三步。<br>3. 手动导入到xLog上</p><p>三个步骤中，第一二步是没法减掉的。而且<a href="https://euds63.github.io/">euds63.github.io</a>的更新我觉得还是会作为我的博客主要托管站。而第三步，工作量虽然不是太大，但终究还是有点麻烦。所以我现在的想法是可以将第三步和第二步合并。不知道有没有相关的接口。</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>记录</tag>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>感兴趣的知识/待细看</title>
    <link href="/2023/04/16/things-I-m-interested-in/"/>
    <url>/2023/04/16/things-I-m-interested-in/</url>
    
    <content type="html"><![CDATA[<h1 id="感兴趣的知识-x2F-待细看"><a href="#感兴趣的知识-x2F-待细看" class="headerlink" title="感兴趣的知识&#x2F;待细看"></a>感兴趣的知识&#x2F;待细看</h1><p><em>有些知识，我觉得有趣，平时也还算经常看到，但只是一知半解，所以下定决心要将其掌握。我觉得要掌握一个知识，有一个比较好的办法就是写个教程，让不知道的人看了教程后也能对这个知识有相当的了解。所谓教学相长也。又因为知之甚少而难以开一篇专门去叙述，所以权记录于此，作为备忘</em></p><p><em>网上冲浪的时候，或主动或被动，常会看到些我感兴趣的内容。有的时候是内容比较深，有的时候是内容让我有些感想。常常，我会选择不关闭它们，想着有时间一定要好好看，并记录下自己的感想。然后…通常就没有然后了。这并不是件好事。所以我就想着记录在这里，也算是对自己的一种监督，或者说Learn In Public。</em></p><h2 id="数字货币"><a href="#数字货币" class="headerlink" title="数字货币"></a>数字货币</h2><ul><li><input disabled="" type="checkbox"> <a href="https://mp.weixin.qq.com/s/wEzbgXh1BDxYjz-xkHs0Gg">匿名是一种设计</a></li><li><input disabled="" type="checkbox"> <a href="https://bitcoin.org/bitcoin.pdf">Bitcoin: A Peer-to-Peer Electronic Cash System</a></li></ul><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ul><li><input disabled="" type="checkbox"> <a href="https://program-think.blogspot.com/2010/02/introduce-digital-certificate-and-ca.html#verify_file">数字证书及 CA 的扫盲介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://jysperm.me/2017/09/gpg-and-e2ee/">GPG 与端到端加密：论什么才是可以信任的</a></li></ul><h2 id="interpreter"><a href="#interpreter" class="headerlink" title="interpreter"></a>interpreter</h2><ul><li><input disabled="" type="checkbox"> <a href="https://ruslanspivak.com/lsbasi-part1/">https://program-think.blogspot.com/2010/02/introduce-digital-certificate-and-ca.html#verify_file</a></li></ul><h2 id="GPT"><a href="#GPT" class="headerlink" title="GPT"></a>GPT</h2><ul><li><input disabled="" type="checkbox"> <a href="https://viper.cs.columbia.edu/">ViperGPT: Visual Inference via Python Execution for Reasoning</a></li><li><input disabled="" type="checkbox"> <a href="https://arxiv.org/abs/2304.03442">Generative Agents: Interactive Simulacra of Human Behavior</a></li></ul><h2 id="diffusion"><a href="#diffusion" class="headerlink" title="diffusion"></a>diffusion</h2><ul><li><input disabled="" type="checkbox"> <a href="https://www.biorxiv.org/content/10.1101/2022.11.18.517004v2.full.pdf">High-resolution image reconstruction with latent diffusion models from humanbrain activity</a></li></ul><h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2><ul><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/104475016">[干货]深入浅出LSTM及其Python代码实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.cnblogs.com/subconscious/p/5058741.html">神经网络浅讲：从神经元到深度学习</a></li></ul><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://luolei.org/gfw/">GFW之父方滨兴讲座后杂想</a></li><li><input disabled="" type="checkbox"> <a href="https://lutaonan.com/blog/reason-why-your-blog-is-not-alive/">为什么无法坚持写博客</a></li><li><input disabled="" type="checkbox"> <a href="https://yzyyz.top/archives/js_snake.html">JS初探，给博客首页添加一个贪吃蛇热力图</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://plumz.me/archives/12906/">你所热爱的，就是你的生活</a></li><li><input disabled="" type="checkbox"> <a href="https://www.zxch3n.com/local-first/">译：本地优先软件 Local-first software</a></li><li><input disabled="" type="checkbox"> <a href="https://densecollections.top/posts/4074/">MIT计算机科学课堂中学不到的知识</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/XXIIVV/webring">XXIIVV&#x2F;webring</a></li></ul><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><ul><li><input disabled="" type="checkbox"> <a href="https://github.com/zloirock/core-js/blob/master/docs/2023-02-14-so-whats-next.md">So, what’s next?</a></li></ul><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><ul><li><input disabled="" type="checkbox"> <a href="https://plantegg.github.io/2019/05/15/%E5%B0%B1%E6%98%AF%E8%A6%81%E4%BD%A0%E6%87%82%E7%BD%91%E7%BB%9C--%E4%B8%80%E4%B8%AA%E7%BD%91%E7%BB%9C%E5%8C%85%E7%9A%84%E6%97%85%E7%A8%8B/">就是要你懂网络–一个网络包的旅程</a></li><li><input disabled="" type="checkbox"> <a href="https://gfw.report/publications/usenixsecurity23/zh/">中国的防火长城是如何检测和封锁完全加密流量的</a></li><li><input disabled="" type="checkbox"> <a href="https://www.iserica.com/posts/network101-socket-function-wrappers/">「网络编程101」来封装一个简单的TCP服务吧！</a></li></ul><h2 id="机械键盘"><a href="#机械键盘" class="headerlink" title="机械键盘"></a>机械键盘</h2><ul><li><input disabled="" type="checkbox"> <a href="https://freemind.pluskid.org/electronics/5x12-keyboard-debugging2/">记一次有意义的熬夜</a></li></ul><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li><input disabled="" type="checkbox"> <a href="https://xlog.daidr.me/card-page">写一个炫酷的个人名片页</a></li><li><input disabled="" type="checkbox"> <a href="https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/">An Interactive Guide to Flexbox</a></li></ul><h2 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h2><ul><li><input disabled="" type="checkbox"> <a href="https://www.physics.umd.edu/courses/Phys606/spring_2011/einstein_electrodynamics_of_moving_bodies.pdf">ON THE ELECTRODYNAMICS OF MOVINGBODIES</a></li><li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Theory_of_mind">Theory of mind</a></li><li><input disabled="" type="checkbox"> <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">GAMES101: 现代计算机图形学入门</a></li><li><input disabled="" type="checkbox"> <a href="https://missing-semester-cn.github.io/">The Missing Semester of Your CS Education</a></li><li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/When-Brains-Dream-Exploring-Science/dp/1324002832">When Brains Dream: Exploring the science and mystery of sleep</a></li><li><input disabled="" type="checkbox"> <a href="https://www.kivinsae.com/2023/05/17/2023-05-17-no_sophism/">关于 初码先生 某推中典型诡辩论部分的拆解</a><br>学习下辩论技巧</li><li><input disabled="" type="checkbox"> <a href="https://seuite.github.io/blog/2019-04/%E7%BC%96%E7%A8%8B%E8%AD%A6%E5%8F%A5-1301-30/">编程警句 130（1-30）</a> 有趣的句子</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>I Strove with None</title>
    <link href="/2023/04/10/I-strove-with-none/"/>
    <url>/2023/04/10/I-strove-with-none/</url>
    
    <content type="html"><![CDATA[<h1 id="I-Strove-with-None"><a href="#I-Strove-with-None" class="headerlink" title="I Strove with None"></a>I Strove with None</h1><h2 id="原文-–Walter-Landor"><a href="#原文-–Walter-Landor" class="headerlink" title="原文    –Walter Landor"></a>原文    –Walter Landor</h2><p>I strove with none , </p><p>for none was worth my strife ;</p><p>Nature I lov’d ,</p><p>and next to Nature , Art:</p><p>I warmed both hands before the fire of Life;</p><p>It sinks; and I am ready to depart . </p><h2 id="杨绛译本："><a href="#杨绛译本：" class="headerlink" title="杨绛译本："></a>杨绛译本：</h2><p>我和谁都不争，</p><p>和谁争我都不屑；</p><p>我爱大自然，</p><p>其次是艺术；</p><p>我双手烤着，</p><p>生命之火取暖；</p><p>火萎了，</p><p>我也准备走了。</p><h2 id="王佐良译本："><a href="#王佐良译本：" class="headerlink" title="王佐良译本："></a>王佐良译本：</h2><p>不与人争，</p><p>也无人值得我争，</p><p>爱的是自然，</p><p>其次是艺术。</p><p>生命之火前我把双手烤烘，</p><p>火焰低落了，</p><p>我准备离去。</p><h2 id="一些感受"><a href="#一些感受" class="headerlink" title="一些感受"></a>一些感受</h2><p>读《刀锋》的时候看到这首诗，但有种似曾相识的感觉，应该不是第一次读到了。书中出现这首诗是艾略特在谈到自己的死亡时引用的。关于艾略特，关于《刀锋》，我想我会另写一篇。这里主要谈谈对这首诗和其译本的一些感受。</p><p>我蛮佩服，也欣赏诗中所描述的这种心境。我有时候会提醒自己，没必要去和别人去争。但我也记得自己在哪处看到过这样的一句话，“人是靠自我认同活着的”。类似这种句式的论断很多，但唯独这句我倒是记得很清楚。而要获取自我认同，常常是要靠与他人若有若无，有意无意的比较所获得的。至少现在的我是这样的。我觉得这并不好。所以自己还有待提高。</p><p>除了心境，我还喜欢这个比喻。<code>I warmed both hadns before the fire of life.</code></p><p>而上面所摘录的两种译本，我更喜欢杨绛的译本，尤其是<code>火萎了</code>这一句。我觉得译出了生命逝去的倏忽即逝。</p>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>摘抄</tag>
      
      <tag>翻译</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《Harry Potter》</title>
    <link href="/2023/04/03/Harry-Potter/"/>
    <url>/2023/04/03/Harry-Potter/</url>
    
    <content type="html"><![CDATA[<h2 id="4月2日1点16分"><a href="#4月2日1点16分" class="headerlink" title="4月2日1点16分"></a>4月2日1点16分</h2><p>读到了最后一章，决定把它留到第二天再看</p><h2 id="4月19日"><a href="#4月19日" class="headerlink" title="4月19日"></a>4月19日</h2><p>作为一个读者，我认为《哈利波特》最棒的一个地方是它构建了一个真实的魔法世界。</p><p>我做过的最棒的一个梦之一就是我在上飞行课，我骑着扫帚飞过城市。</p><h2 id="5月18日"><a href="#5月18日" class="headerlink" title="5月18日"></a>5月18日</h2><p>哈利波特对我的魅力有一点在于：</p><p>我可以被其中的情感所打动。</p><p>当布莱克和波特说他们可以住一起时，是这样描述的：<br>“你疯了吗？”哈利说，声音一下子嘶哑了，和布莱克的意义。“我当然想要离开徳思礼家！你有了房子吗？我什么是能搬进去？”</p>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>书评</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>表单学习</title>
    <link href="/2023/03/30/formLearning/"/>
    <url>/2023/03/30/formLearning/</url>
    
    <content type="html"><![CDATA[<h1 id="表单学习"><a href="#表单学习" class="headerlink" title="表单学习"></a>表单学习</h1><p><em>偶然间看到了篇不错的文档，<a href="https://www.chromium.org/developers/design-documents/create-amazing-password-forms/">Create Amazing Password Forms</a>,才发现原来表单要做得符合直觉也是有些学问在里面的，遂记录如下。</em></p><h2 id="Group-related-fields-in-a-single-form"><a href="#Group-related-fields-in-a-single-form" class="headerlink" title="Group related fields in a single form"></a>Group related fields in a single form</h2><p>  我之前习惯把注册和登录分开来做，使用的不少网站也是这样。所以就导致了一种情况，在使用浏览器的密码自动保存时，往往注册完后要登录，就得再输一遍代码。但是我还不知道具体要怎么实现。</p><h2 id="Use-autocomplete-attributes"><a href="#Use-autocomplete-attributes" class="headerlink" title="Use autocomplete attributes"></a>Use autocomplete attributes</h2><p>  autocomplete这个attribute我还是第一次见，查阅文档后，发现这个还蛮有用的。<a href="https://www.chromium.org/developers/design-documents/form-styles-that-chromium-understands/">Password Form Styles that Chromium Understands</a><br>  e.g. <code>&lt;input name=bc autocomplete=&quot;section-home homeAddress&quot;&gt;</code><br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;current-password&quot;</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Sign In!&quot;</span>&gt;</span> <br></code></pre></td></tr></table></figure><br>而关于autocomplete和autofill的区别</p><p>  我查了下有这样的回答</p><ul><li>autocomplete是HTML5新增的属性，用于指定浏览器是否应该启用表单自动完成功能，以及提供有关字段中预期信息类型的指导。</li><li>autofill是浏览器自带的自动填充功能，它会根据用户之前输入过的值来预测用户下一次可能输入的值，并在用户输入时自动填充。autofill不仅考虑了之前输入过的值，还考虑了字段的含义和结构。例如，Google Chrome实现了解析输入字段以猜测其类型和结构。</li></ul><h2 id="Use-hidden-fields-for-implicit-information"><a href="#Use-hidden-fields-for-implicit-information" class="headerlink" title="Use hidden fields for implicit information"></a>Use hidden fields for implicit information</h2><p>  这点对于我来说也是挺新鲜的。才知道尽管有些信息没必要让用户输入，但还是有必要在表单中所包含，以便于密码管理器。</p><p>  文档中是这样讲的</p><blockquote><p>the user agent is allowed to provide the user with autocompletion values, but does not provide any further information about what kind of data the user might be expected to enter. User agents would have to use heuristics to decide what autocompletion values to suggest.</p></blockquote><p>  目前我的理解是，autocomplete用来提升浏览器字段的类型，而autofill用来控制是否使用该功能</p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>  还是第一次看html的文档，不是太能看得下去，因为内容太多了，信息量比较大，但确实有用</p><ul><li>参考链接<ul><li><a href="https://www.chromium.org/developers/design-documents/create-amazing-password-forms/">Create Amazing Password Forms</a></li><li><a href="https://www.chromium.org/developers/design-documents/form-styles-that-chromium-understands/">Password Form Styles that Chromium Understands</a></li><li><a href="https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls%3A-the-autocomplete-attribute">autocomplete</a></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>web</tag>
      
      <tag>前端</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux学习笔记</title>
    <link href="/2023/03/19/learn-Linux/"/>
    <url>/2023/03/19/learn-Linux/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h2><ul><li><code>ctrl + C</code> 打断执行</li><li><code>pwd</code> 输出当前位置</li><li><code>cmd1;cmd2</code> 首先运行命令1，然后运行命令2</li><li><code>cmd1&amp;&amp;cmd2</code> 仅在命令1成功结束时才运行命令2</li><li><code>cmd1||cmd2</code> 仅当命令1失败时才运行命令2</li><li><code>strace</code>  追踪程序系统调用</li><li><code>touch</code> 新建文件,内容为空</li><li><code>cat</code> <ul><li><code>cat filename</code> To view a single file</li><li><code>cat [filename-whose-contents-is-to-be-copied] &gt; [destination-filename]</code> Copy the contents of one file to another file. </li><li><code>cat file1 &gt;&gt; file2</code> Cat command can append the contents of one file to the end of another file.</li></ul></li><li>管道；用<code>|</code>连接两个命令，以前面一个命令的输出作为后面命令的输入<ul><li><code>strace -f gcc a.c 2&gt;&amp;1 | vim -</code> This will pipe both stdout and stderr to vim. The <code>-</code> argument tells vim to read from stdin.</li><li><code>strace pmap 152 |&amp; vim - </code><br> <code>|&amp;</code> : This is a shorthand for <code>2&gt;&amp;1 |</code> in bash and zsh. It passes both standard output and standard error of one command as input to another.</li></ul></li><li><code>sort -nk 6</code> 依第6列升序排列</li><li>执行多次，或循环执行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#for i in &#123;1..5&#125;; do  // while true; do</span><br>&gt;  <span class="hljs-built_in">command</span> <br>&gt;<span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure></li><li>crontab的使用<ul><li><code>crontab -e</code> </li><li>注意：crontab运行的环境并不包含docker命令。需要指定完整的路径。</li></ul></li><li><code>lsof -i:端口号</code>查看端口占用情况</li><li><code>kill -9 PID</code> 杀掉对应的进程</li><li><code>grep</code> (global regular expression)  用于查找文件里符合条件的字符串或正则表达式</li><li><code>which</code> 查找安装路径 如<code>which docker</code></li><li><code>ls -l</code> 详细信息</li><li><code>~/.bashrc</code>是 Bash shell 在每次启动时都会自动执行的一个脚本文件,可以用于设置环境变量、别名和一些其他 Bash shell 配置。<ul><li><code>source /opt/rh/devtoolset-9/enable</code> 更新gcc版本</li><li>export PS1&#x3D;’[][\W]$ []‘ 修改PS1变量，让其更加简洁。PS1的默认设置为<code>\[\][\u@\h \W]\$ \[\]</code></li></ul></li><li><code>tar</code><ul><li><code>tar cvf file.tar *.c</code> creates a tar file called file.tar which is the Archive of all .c files in current directory. </li><li><code>tar xvf file.tar</code> extracts files from Archives. </li><li><code>z</code>tells tar command that creates tar file using gzip 即<code>tar.gz</code></li></ul></li><li>可以利用 TAB 补全查看所有可用的命令选项(连按两次 TAB 键)</li></ul><h2 id="汇编相关"><a href="#汇编相关" class="headerlink" title="汇编相关"></a>汇编相关</h2><ul><li><code>objdump -d filename</code> print the assembler content of the sections capable of execution.</li><li><code>objdump -s filename</code>  print the complete content of all the sections of the file</li></ul><h2 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h2><ul><li><code>gcc - E a.c</code> 对a.c进行宏展开</li><li>升级gcc版本到gcc9 <a href="https://blog.csdn.net/xunye_dream/article/details/108918316">CentOS7 升级gcc版本到gcc9</a><br><code>source /opt/rh/devtoolset-9/enable</code></li><li><code>-static</code> 静态编译，省去动态链接相关的系统调用</li></ul><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><ul><li>cmd模式<ul><li><code>:!cmd </code> execute a shell command from within Vim<ul><li><code>!gcc %</code> 编译</li><li><code>!xxd</code>  将当前文件转换为十六进制表示并显示在终端中</li><li><code>%!xxd</code> 将当前文件的内容通过管道传递给外部命令xxd，并将其输出替换为当前文件的内容</li></ul></li><li><code>:set nu</code> 显示行号</li><li><code>:set wrap</code></li><li><code>:%!grep execve</code></li><li><code>:%! grep -v ENOENT</code></li><li><code>:%s/term/another_term/g </code> 替换</li></ul></li><li>visual模式 按v进入<ul><li><code>y</code> 复制选中内容</li><li><code>d</code> 删除</li></ul></li><li><code>u</code> undo</li><li></li></ul><h2 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h2><ul><li>编译时要带<code>-g</code></li><li><code>bt</code> :but trace</li></ul><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.geeksforgeeks.org/cat-command-in-linux-with-examples/">Cat command in Linux with examples</a></li><li><a href="https://blog.csdn.net/xunye_dream/article/details/108918316">CentOS7 升级gcc版本到gcc9</a></li><li><a href="https://jyywiki.cn/OS/2022/">操作系统：设计与实现 (2022 春季学期)</a></li><li><a href="https://blog.csdn.net/lc013/article/details/103775702">Linux 定时执行shell 脚本</a></li><li><a href="https://www.geeksforgeeks.org/tar-command-linux-examples">tar command in Linux with examples</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>操作系统</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>收藏夹的使用</title>
    <link href="/2023/03/18/the-use-of-Favorites/"/>
    <url>/2023/03/18/the-use-of-Favorites/</url>
    
    <content type="html"><![CDATA[<h1 id="收藏夹的使用"><a href="#收藏夹的使用" class="headerlink" title="收藏夹的使用"></a>收藏夹的使用</h1><p class="note note-info">偶然发现可以在url中使用JavaScript，这是前提。日常使用时，有些功能特意为此写个拓展有点小题大作，这时候使用收藏夹即可，方便的同时也增加了可迁移性</p><h2 id="Bing转Google搜索"><a href="#Bing转Google搜索" class="headerlink" title="Bing转Google搜索"></a>Bing转Google搜索</h2><ul><li>描述：我日常搜索引擎是使用bing，但有些时候bing的内容我不是很满意，需要在Google上再次搜索；由于new bing的存在，我不想更换默认搜索引擎，但打开Google，再次搜索这个操作又很麻烦，所以就添加了一条收藏夹</li><li>代码详解：  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> currentUrl = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>; <span class="hljs-comment">//获取当前连接</span><br><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/q=([^&amp;]+)/</span>;<br><span class="hljs-keyword">var</span> res = currentUrl.<span class="hljs-title function_">match</span>(reg); <span class="hljs-comment">//使用正则表达式进行匹配</span><br><span class="hljs-keyword">var</span> googleUrl = <span class="hljs-string">&quot;https://www.google.com/search?q=&quot;</span>;<br><span class="hljs-keyword">var</span> resultUrl = googleUrl+res[<span class="hljs-number">1</span>]; <span class="hljs-comment">//拼接</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">open</span>(resultUrl,<span class="hljs-string">&#x27;_self&#x27;</span>).<span class="hljs-title function_">close</span>();<span class="hljs-comment">//打开新网站，并关闭原网站</span><br></code></pre></td></tr></table></figure></li><li>书签URL  <div class="note note-success">            <p><code>javascript:var currentUrl = window.location.href;var reg = /q=([^&amp;]+)/;var res = currentUrl.match(reg);var googleUrl = &quot;https://www.google.com/search?q=&quot;;var resultUrl = googleUrl+res[1];window.open(resultUrl,&#39;_self&#39;).close();</code></p>          </div></li><li>注：正则表达式是让new bing写的，感觉有种ntr的美</li></ul><h2 id="网易云解除歌单限制"><a href="#网易云解除歌单限制" class="headerlink" title="网易云解除歌单限制"></a>网易云解除歌单限制</h2><ul><li>描述：网易云音乐网页端对歌单显示数量有限制，只显示20条，而我不希望因此下载客户端，于是添加了该书签。</li><li>代码：  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>=<span class="hljs-string">&quot;os=pc&quot;</span>;<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-title function_">reload</span>();<span class="hljs-comment">//重新加载网页</span><br></code></pre></td></tr></table></figure></li><li>收藏夹URL<div class="note note-success">            <p><code>javascript:document.cookie=&quot;os=pc&quot;;window.location.reload();</code></p>          </div></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《窄门》摘录</title>
    <link href="/2023/03/15/excerpt-of-Strait-is-the-Gate/"/>
    <url>/2023/03/15/excerpt-of-Strait-is-the-Gate/</url>
    
    <content type="html"><![CDATA[<h1 id="《窄门》摘录"><a href="#《窄门》摘录" class="headerlink" title="《窄门》摘录"></a>《窄门》摘录</h1><ul><li>您在第 2 页（位置 #28-29）的标注 | 添加于 2023年3月14日星期二 上午10:55:30</li></ul><h1 id="往事断断续续，支离破碎，但我不打算靠虚构事实连通补缀，这种修饰铺陈，会浇灭讲述的热忱，最后一丝意趣也化为乌有。"><a href="#往事断断续续，支离破碎，但我不打算靠虚构事实连通补缀，这种修饰铺陈，会浇灭讲述的热忱，最后一丝意趣也化为乌有。" class="headerlink" title="往事断断续续，支离破碎，但我不打算靠虚构事实连通补缀，这种修饰铺陈，会浇灭讲述的热忱，最后一丝意趣也化为乌有。"></a>往事断断续续，支离破碎，但我不打算靠虚构事实连通补缀，这种修饰铺陈，会浇灭讲述的热忱，最后一丝意趣也化为乌有。</h1><ul><li>您在第 12 页（位置 #171-171）的标注 | 添加于 2023年3月14日星期二 上午11:28:48</li></ul><h1 id="你们要努力进窄门。"><a href="#你们要努力进窄门。" class="headerlink" title="你们要努力进窄门。"></a>你们要努力进窄门。</h1><ul><li>您在第 12 页（位置 #174-175）的标注 | 添加于 2023年3月14日星期二 上午11:29:23</li></ul><h1 id="你们要努力进窄门，因为宽门和阔路引向沉沦，进去的人很多；然而窄门和狭道却通向永生，只有少数人能找到。"><a href="#你们要努力进窄门，因为宽门和阔路引向沉沦，进去的人很多；然而窄门和狭道却通向永生，只有少数人能找到。" class="headerlink" title="你们要努力进窄门，因为宽门和阔路引向沉沦，进去的人很多；然而窄门和狭道却通向永生，只有少数人能找到。"></a>你们要努力进窄门，因为宽门和阔路引向沉沦，进去的人很多；然而窄门和狭道却通向永生，只有少数人能找到。</h1><ul><li>您在第 13 页（位置 #199-202）的标注 | 添加于 2023年3月14日星期二 上午11:32:13</li></ul><h1 id="这场内心的顿悟，让我认清自己：我性格内向，不太开朗，虽然期待被人关怀，却对他人漠不关心；我没什么进取心，除了想在克己方面获得胜利之外，没有其余的梦想；我喜欢学习，至于玩耍，却只喜欢需要动脑筋或付出努力的游戏；我很少和年龄相仿的同学交往，偶尔同他们玩耍也只是为了维持友谊或是出于礼貌"><a href="#这场内心的顿悟，让我认清自己：我性格内向，不太开朗，虽然期待被人关怀，却对他人漠不关心；我没什么进取心，除了想在克己方面获得胜利之外，没有其余的梦想；我喜欢学习，至于玩耍，却只喜欢需要动脑筋或付出努力的游戏；我很少和年龄相仿的同学交往，偶尔同他们玩耍也只是为了维持友谊或是出于礼貌" class="headerlink" title="这场内心的顿悟，让我认清自己：我性格内向，不太开朗，虽然期待被人关怀，却对他人漠不关心；我没什么进取心，除了想在克己方面获得胜利之外，没有其余的梦想；我喜欢学习，至于玩耍，却只喜欢需要动脑筋或付出努力的游戏；我很少和年龄相仿的同学交往，偶尔同他们玩耍也只是为了维持友谊或是出于礼貌"></a>这场内心的顿悟，让我认清自己：我性格内向，不太开朗，虽然期待被人关怀，却对他人漠不关心；我没什么进取心，除了想在克己方面获得胜利之外，没有其余的梦想；我喜欢学习，至于玩耍，却只喜欢需要动脑筋或付出努力的游戏；我很少和年龄相仿的同学交往，偶尔同他们玩耍也只是为了维持友谊或是出于礼貌</h1><ul><li>您在第 17 页（位置 #257-260）的标注 | 添加于 2023年3月14日星期二 上午11:36:03</li></ul><h1 id="“我完全明白。这指的是我们在共同崇拜的对象那里激动热烈地重逢。正是为了与你重逢，我才去崇拜你所崇拜的对象。”-“你崇拜的动机不纯。”-“不要对我太苛求，如果你不在天国，这个天国我不去也罢"><a href="#“我完全明白。这指的是我们在共同崇拜的对象那里激动热烈地重逢。正是为了与你重逢，我才去崇拜你所崇拜的对象。”-“你崇拜的动机不纯。”-“不要对我太苛求，如果你不在天国，这个天国我不去也罢" class="headerlink" title="“我完全明白。这指的是我们在共同崇拜的对象那里激动热烈地重逢。正是为了与你重逢，我才去崇拜你所崇拜的对象。” “你崇拜的动机不纯。” “不要对我太苛求，如果你不在天国，这个天国我不去也罢"></a>“我完全明白。这指的是我们在共同崇拜的对象那里激动热烈地重逢。正是为了与你重逢，我才去崇拜你所崇拜的对象。” “你崇拜的动机不纯。” “不要对我太苛求，如果你不在天国，这个天国我不去也罢</h1><ul><li>您在第 24 页（位置 #359-359）的标注 | 添加于 2023年3月14日星期二 上午11:44:54</li></ul><h1 id="我认为死亡反而能让人靠近……没错，能让生前分开的人拉近距离。"><a href="#我认为死亡反而能让人靠近……没错，能让生前分开的人拉近距离。" class="headerlink" title="我认为死亡反而能让人靠近……没错，能让生前分开的人拉近距离。"></a>我认为死亡反而能让人靠近……没错，能让生前分开的人拉近距离。</h1><ul><li>您在第 25 页（位置 #379-381）的标注 | 添加于 2023年3月14日星期二 上午11:45:58</li></ul><h1 id="我们为什么要订婚呢？知道拥有彼此，而且永远不变，难道还不够吗？何必昭告天下呢？我若愿意为她奉献一生，你真觉得需要用诺言来维系这份爱情，才更美好吗？不，誓言对我而说是对爱情的侮辱……只有在不信任她的时候，我才渴望和她缔结婚约。”"><a href="#我们为什么要订婚呢？知道拥有彼此，而且永远不变，难道还不够吗？何必昭告天下呢？我若愿意为她奉献一生，你真觉得需要用诺言来维系这份爱情，才更美好吗？不，誓言对我而说是对爱情的侮辱……只有在不信任她的时候，我才渴望和她缔结婚约。”" class="headerlink" title="我们为什么要订婚呢？知道拥有彼此，而且永远不变，难道还不够吗？何必昭告天下呢？我若愿意为她奉献一生，你真觉得需要用诺言来维系这份爱情，才更美好吗？不，誓言对我而说是对爱情的侮辱……只有在不信任她的时候，我才渴望和她缔结婚约。”"></a>我们为什么要订婚呢？知道拥有彼此，而且永远不变，难道还不够吗？何必昭告天下呢？我若愿意为她奉献一生，你真觉得需要用诺言来维系这份爱情，才更美好吗？不，誓言对我而说是对爱情的侮辱……只有在不信任她的时候，我才渴望和她缔结婚约。”</h1><ul><li>您在第 30 页（位置 #451-452）的标注 | 添加于 2023年3月14日星期二 上午11:53:22</li></ul><h1 id="比你年长太多，这一点让我担忧。你还没有机会见到其他女人，可能还没意识到这一点。可我却想到了，将来委身于你后，你若不再喜欢我，我会多痛苦啊"><a href="#比你年长太多，这一点让我担忧。你还没有机会见到其他女人，可能还没意识到这一点。可我却想到了，将来委身于你后，你若不再喜欢我，我会多痛苦啊" class="headerlink" title="比你年长太多，这一点让我担忧。你还没有机会见到其他女人，可能还没意识到这一点。可我却想到了，将来委身于你后，你若不再喜欢我，我会多痛苦啊"></a>比你年长太多，这一点让我担忧。你还没有机会见到其他女人，可能还没意识到这一点。可我却想到了，将来委身于你后，你若不再喜欢我，我会多痛苦啊</h1><ul><li>您在第 32 页（位置 #478-480）的标注 | 添加于 2023年3月14日星期二 上午11:54:57</li></ul><h1 id="“和我的答复一样：说我还太小，谈结婚还早……可惜呀，”她笑着说道，“姑妈早料到我们会反对，在信末的附言里写道：爱德华·泰西埃尔先生（这是他的名字）同意等我，他这么早来求婚只是为了早点‘排队’……这太荒唐了。但我还能怎么办呢？又不能让人转告，说他太丑了！"><a href="#“和我的答复一样：说我还太小，谈结婚还早……可惜呀，”她笑着说道，“姑妈早料到我们会反对，在信末的附言里写道：爱德华·泰西埃尔先生（这是他的名字）同意等我，他这么早来求婚只是为了早点‘排队’……这太荒唐了。但我还能怎么办呢？又不能让人转告，说他太丑了！" class="headerlink" title="“和我的答复一样：说我还太小，谈结婚还早……可惜呀，”她笑着说道，“姑妈早料到我们会反对，在信末的附言里写道：爱德华·泰西埃尔先生（这是他的名字）同意等我，他这么早来求婚只是为了早点‘排队’……这太荒唐了。但我还能怎么办呢？又不能让人转告，说他太丑了！"></a>“和我的答复一样：说我还太小，谈结婚还早……可惜呀，”她笑着说道，“姑妈早料到我们会反对，在信末的附言里写道：爱德华·泰西埃尔先生（这是他的名字）同意等我，他这么早来求婚只是为了早点‘排队’……这太荒唐了。但我还能怎么办呢？又不能让人转告，说他太丑了！</h1><ul><li>您在第 38 页（位置 #569-571）的标注 | 添加于 2023年3月14日星期二 下午12:00:00</li></ul><h1 id="看得出来，她热情地附和我，是因为担心我的学业而给出的鼓励，而不是受精神的驱动。我觉得评价、争辩和批判，都只是表达思想的方式，可她却与我恰恰相反，借助于这一切来掩饰自己的内心。"><a href="#看得出来，她热情地附和我，是因为担心我的学业而给出的鼓励，而不是受精神的驱动。我觉得评价、争辩和批判，都只是表达思想的方式，可她却与我恰恰相反，借助于这一切来掩饰自己的内心。" class="headerlink" title="看得出来，她热情地附和我，是因为担心我的学业而给出的鼓励，而不是受精神的驱动。我觉得评价、争辩和批判，都只是表达思想的方式，可她却与我恰恰相反，借助于这一切来掩饰自己的内心。"></a>看得出来，她热情地附和我，是因为担心我的学业而给出的鼓励，而不是受精神的驱动。我觉得评价、争辩和批判，都只是表达思想的方式，可她却与我恰恰相反，借助于这一切来掩饰自己的内心。</h1><ul><li>您在第 42 页（位置 #634-635）的标注 | 添加于 2023年3月14日星期二 下午12:17:27</li></ul><h1 id="普朗提埃姨妈也将无影无踪，空留一件上衣；灯火辉煌的圣诞树将像《圣经》中的诸山一样，拍着手欢唱主的荣耀。”"><a href="#普朗提埃姨妈也将无影无踪，空留一件上衣；灯火辉煌的圣诞树将像《圣经》中的诸山一样，拍着手欢唱主的荣耀。”" class="headerlink" title="普朗提埃姨妈也将无影无踪，空留一件上衣；灯火辉煌的圣诞树将像《圣经》中的诸山一样，拍着手欢唱主的荣耀。”"></a>普朗提埃姨妈也将无影无踪，空留一件上衣；灯火辉煌的圣诞树将像《圣经》中的诸山一样，拍着手欢唱主的荣耀。”</h1><ul><li>您在第 48 页（位置 #725-726）的标注 | 添加于 2023年3月14日星期二 下午12:26:16</li></ul><h1 id="在我的生命里，除了爱情找不到别的意义，于是紧紧抓着它。除了期待我的爱人到来之外，我什么也不等待，也不愿等待。"><a href="#在我的生命里，除了爱情找不到别的意义，于是紧紧抓着它。除了期待我的爱人到来之外，我什么也不等待，也不愿等待。" class="headerlink" title="在我的生命里，除了爱情找不到别的意义，于是紧紧抓着它。除了期待我的爱人到来之外，我什么也不等待，也不愿等待。"></a>在我的生命里，除了爱情找不到别的意义，于是紧紧抓着它。除了期待我的爱人到来之外，我什么也不等待，也不愿等待。</h1><ul><li>您在第 51 页（位置 #770-773）的标注 | 添加于 2023年3月14日星期二 下午12:29:59</li></ul><h1 id="是何等战胜尘世的魔力，-引我来见上帝？-依赖他人之人，-必将遭遇不幸"><a href="#是何等战胜尘世的魔力，-引我来见上帝？-依赖他人之人，-必将遭遇不幸" class="headerlink" title="是何等战胜尘世的魔力， 引我来见上帝？ 依赖他人之人， 必将遭遇不幸"></a>是何等战胜尘世的魔力， 引我来见上帝？ 依赖他人之人， 必将遭遇不幸</h1><ul><li>您在第 62 页（位置 #945-947）的标注 | 添加于 2023年3月14日星期二 下午12:38:20</li></ul><h1 id="她之前的来信都显得那么愉快，我其实有些担心她在假装幸福，为了骗我，也骗她自己。她今日的幸福，同她过去梦想的幸福及幸福所依之人大相径庭……"><a href="#她之前的来信都显得那么愉快，我其实有些担心她在假装幸福，为了骗我，也骗她自己。她今日的幸福，同她过去梦想的幸福及幸福所依之人大相径庭……" class="headerlink" title="她之前的来信都显得那么愉快，我其实有些担心她在假装幸福，为了骗我，也骗她自己。她今日的幸福，同她过去梦想的幸福及幸福所依之人大相径庭……"></a>她之前的来信都显得那么愉快，我其实有些担心她在假装幸福，为了骗我，也骗她自己。她今日的幸福，同她过去梦想的幸福及幸福所依之人大相径庭……</h1><ul><li>您在第 63 页（位置 #953-954）的标注 | 添加于 2023年3月14日星期二 下午12:39:37</li></ul><h1 id="当地的景致和人们的笑声令我不快，我所说的“忧郁”，也许仅仅只是不像他们那般喧闹罢了。我过去的欢乐中肯定包含某些骄傲的成分，"><a href="#当地的景致和人们的笑声令我不快，我所说的“忧郁”，也许仅仅只是不像他们那般喧闹罢了。我过去的欢乐中肯定包含某些骄傲的成分，" class="headerlink" title="当地的景致和人们的笑声令我不快，我所说的“忧郁”，也许仅仅只是不像他们那般喧闹罢了。我过去的欢乐中肯定包含某些骄傲的成分，"></a>当地的景致和人们的笑声令我不快，我所说的“忧郁”，也许仅仅只是不像他们那般喧闹罢了。我过去的欢乐中肯定包含某些骄傲的成分，</h1><ul><li>您在第 68 页（位置 #1041-1043）的标注 | 添加于 2023年3月14日星期二 下午12:44:28</li></ul><h1 id="我们明明有那么多话要说，为什么还会这么尴尬，这么做作，这么无力，这么沉默呢？你回来的第一天，面对这种沉默，我还觉得挺开心。因为我总觉得它会烟消云散，在离开之前你总会对我说些美妙的事。"><a href="#我们明明有那么多话要说，为什么还会这么尴尬，这么做作，这么无力，这么沉默呢？你回来的第一天，面对这种沉默，我还觉得挺开心。因为我总觉得它会烟消云散，在离开之前你总会对我说些美妙的事。" class="headerlink" title="我们明明有那么多话要说，为什么还会这么尴尬，这么做作，这么无力，这么沉默呢？你回来的第一天，面对这种沉默，我还觉得挺开心。因为我总觉得它会烟消云散，在离开之前你总会对我说些美妙的事。"></a>我们明明有那么多话要说，为什么还会这么尴尬，这么做作，这么无力，这么沉默呢？你回来的第一天，面对这种沉默，我还觉得挺开心。因为我总觉得它会烟消云散，在离开之前你总会对我说些美妙的事。</h1><ul><li>您在第 69 页（位置 #1055-1056）的标注 | 添加于 2023年3月14日星期二 下午12:46:14</li></ul><h1 id="我们所有的通信不过是一场海市蜃楼。唉！我们两人的信都是写给自己看的……噢！杰罗姆！杰罗姆！我们还是永远分开吧！"><a href="#我们所有的通信不过是一场海市蜃楼。唉！我们两人的信都是写给自己看的……噢！杰罗姆！杰罗姆！我们还是永远分开吧！" class="headerlink" title="我们所有的通信不过是一场海市蜃楼。唉！我们两人的信都是写给自己看的……噢！杰罗姆！杰罗姆！我们还是永远分开吧！"></a>我们所有的通信不过是一场海市蜃楼。唉！我们两人的信都是写给自己看的……噢！杰罗姆！杰罗姆！我们还是永远分开吧！</h1><ul><li>您在第 69 页（位置 #1058-1061）的标注 | 添加于 2023年3月14日星期二 下午12:46:36</li></ul><h1 id="我爱你那么深，却那么绝望。我必须承认，你也看到了：离你越远，我就越爱你。唉，这一点我也曾预料到！这次期盼已久的重逢让我彻底了解了，所以我的朋友，你也一样，相信这一点非常重要。别了，我挚爱的兄弟，愿上帝保佑和指引你，只有在他面前重聚，我们才不必受罚"><a href="#我爱你那么深，却那么绝望。我必须承认，你也看到了：离你越远，我就越爱你。唉，这一点我也曾预料到！这次期盼已久的重逢让我彻底了解了，所以我的朋友，你也一样，相信这一点非常重要。别了，我挚爱的兄弟，愿上帝保佑和指引你，只有在他面前重聚，我们才不必受罚" class="headerlink" title="我爱你那么深，却那么绝望。我必须承认，你也看到了：离你越远，我就越爱你。唉，这一点我也曾预料到！这次期盼已久的重逢让我彻底了解了，所以我的朋友，你也一样，相信这一点非常重要。别了，我挚爱的兄弟，愿上帝保佑和指引你，只有在他面前重聚，我们才不必受罚"></a>我爱你那么深，却那么绝望。我必须承认，你也看到了：离你越远，我就越爱你。唉，这一点我也曾预料到！这次期盼已久的重逢让我彻底了解了，所以我的朋友，你也一样，相信这一点非常重要。别了，我挚爱的兄弟，愿上帝保佑和指引你，只有在他面前重聚，我们才不必受罚</h1><ul><li>您在第 70 页（位置 #1068-1068）的标注 | 添加于 2023年3月14日星期二 下午12:47:41</li></ul><h1 id="我学会了独自承受痛心彻骨的悲伤和重负，这种嘱咐于我而言完全是多余的。"><a href="#我学会了独自承受痛心彻骨的悲伤和重负，这种嘱咐于我而言完全是多余的。" class="headerlink" title="我学会了独自承受痛心彻骨的悲伤和重负，这种嘱咐于我而言完全是多余的。"></a>我学会了独自承受痛心彻骨的悲伤和重负，这种嘱咐于我而言完全是多余的。</h1><ul><li>您在第 72 页（位置 #1103-1106）的标注 | 添加于 2023年3月14日星期二 下午12:52:40</li></ul><h1 id="我们约定个暗号吧，看到它，表明我第二天就必须离开芬格斯玛尔。而且次日说走就走，不非难，也不抱怨，你同意吗？”-这番话我事先并无准备，却说得极其自然。她想了想，回答道：“我下楼吃晚饭时，脖子上若没有戴你喜爱的紫晶十字架……你就明白了吧？”-“那会是我在这里的最后一晚。"><a href="#我们约定个暗号吧，看到它，表明我第二天就必须离开芬格斯玛尔。而且次日说走就走，不非难，也不抱怨，你同意吗？”-这番话我事先并无准备，却说得极其自然。她想了想，回答道：“我下楼吃晚饭时，脖子上若没有戴你喜爱的紫晶十字架……你就明白了吧？”-“那会是我在这里的最后一晚。" class="headerlink" title="我们约定个暗号吧，看到它，表明我第二天就必须离开芬格斯玛尔。而且次日说走就走，不非难，也不抱怨，你同意吗？” 这番话我事先并无准备，却说得极其自然。她想了想，回答道：“我下楼吃晚饭时，脖子上若没有戴你喜爱的紫晶十字架……你就明白了吧？” “那会是我在这里的最后一晚。"></a>我们约定个暗号吧，看到它，表明我第二天就必须离开芬格斯玛尔。而且次日说走就走，不非难，也不抱怨，你同意吗？” 这番话我事先并无准备，却说得极其自然。她想了想，回答道：“我下楼吃晚饭时，脖子上若没有戴你喜爱的紫晶十字架……你就明白了吧？” “那会是我在这里的最后一晚。</h1><ul><li>您在第 74 页（位置 #1128-1130）的标注 | 添加于 2023年3月14日星期二 下午12:53:44</li></ul><h1 id="除了幸福，灵魂还能追求什么呢？”我冲动地嚷道。-她却低声细语：“神圣……”声音那么小。与其说是我听到的，倒不如说是猜到的。"><a href="#除了幸福，灵魂还能追求什么呢？”我冲动地嚷道。-她却低声细语：“神圣……”声音那么小。与其说是我听到的，倒不如说是猜到的。" class="headerlink" title="除了幸福，灵魂还能追求什么呢？”我冲动地嚷道。 她却低声细语：“神圣……”声音那么小。与其说是我听到的，倒不如说是猜到的。"></a>除了幸福，灵魂还能追求什么呢？”我冲动地嚷道。 她却低声细语：“神圣……”声音那么小。与其说是我听到的，倒不如说是猜到的。</h1><ul><li>您在第 85 页（位置 #1295-1298）的标注 | 添加于 2023年3月15日星期三 上午4:15:31</li></ul><h1 id="我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。这番令人疲惫"><a href="#我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。这番令人疲惫" class="headerlink" title="我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。这番令人疲惫"></a>我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。这番令人疲惫</h1><ul><li>您在第 85 页（位置 #1295-1298）的标注 | 添加于 2023年3月15日星期三 上午4:16:32</li></ul><h1 id="我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。"><a href="#我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。" class="headerlink" title="我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。"></a>我将阿莉莎一点点抬高，把她塑造成偶像，用所有喜欢的东西装点着她。而如今，除却疲乏之外，这番经营还剩下什么呢？一放任自流，阿莉莎就会降回平庸的层次；而我也一样，若处于那个层次，就不会再爱她。为了与她在同一个高度相见，我单凭自身努力抬高了她。</h1><ul><li>您在第 90 页（位置 #1368-1369）的标注 | 添加于 2023年3月15日星期三 上午6:43:56</li></ul><h1 id="——‘他们没有得到曾应许的东西，因为上帝给他们保留了更美好的……’我们总担心理解得不够透彻，一直心神不宁。”"><a href="#——‘他们没有得到曾应许的东西，因为上帝给他们保留了更美好的……’我们总担心理解得不够透彻，一直心神不宁。”" class="headerlink" title="——‘他们没有得到曾应许的东西，因为上帝给他们保留了更美好的……’我们总担心理解得不够透彻，一直心神不宁。”"></a>——‘他们没有得到曾应许的东西，因为上帝给他们保留了更美好的……’我们总担心理解得不够透彻，一直心神不宁。”</h1><ul><li>您在第 94 页（位置 #1433-1435）的标注 | 添加于 2023年3月15日星期三 上午6:47:25</li></ul><h1 id="让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。-现在，杰罗姆没有音信"><a href="#让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。-现在，杰罗姆没有音信" class="headerlink" title="让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。 现在，杰罗姆没有音信"></a>让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。 现在，杰罗姆没有音信</h1><ul><li>您在第 94 页（位置 #1433-1434）的标注 | 添加于 2023年3月15日星期三 上午6:47:30</li></ul><h1 id="让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。"><a href="#让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。" class="headerlink" title="让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。"></a>让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。</h1><ul><li>您在第 96 页（位置 #1464-1467）的标注 | 添加于 2023年3月15日星期三 下午2:08:42</li></ul><h1 id="我喜欢弹钢琴练习曲，是因为觉得每天都能有所进步。这或许也是我喜欢读外文书的原因所在。我当然不是因为喜欢外文多过本国语言，也并非觉得我欣赏的本国作家比不上外国作家。而是因为在理解外文的意义和情感时，会有轻微的难度。一旦攻克了它，一旦理解得越来越好，也许会产生一种无意识的自豪感。在精神愉悦的同时，增添某种道不明的心灵满足。我似乎少不得这种满足"><a href="#我喜欢弹钢琴练习曲，是因为觉得每天都能有所进步。这或许也是我喜欢读外文书的原因所在。我当然不是因为喜欢外文多过本国语言，也并非觉得我欣赏的本国作家比不上外国作家。而是因为在理解外文的意义和情感时，会有轻微的难度。一旦攻克了它，一旦理解得越来越好，也许会产生一种无意识的自豪感。在精神愉悦的同时，增添某种道不明的心灵满足。我似乎少不得这种满足" class="headerlink" title="我喜欢弹钢琴练习曲，是因为觉得每天都能有所进步。这或许也是我喜欢读外文书的原因所在。我当然不是因为喜欢外文多过本国语言，也并非觉得我欣赏的本国作家比不上外国作家。而是因为在理解外文的意义和情感时，会有轻微的难度。一旦攻克了它，一旦理解得越来越好，也许会产生一种无意识的自豪感。在精神愉悦的同时，增添某种道不明的心灵满足。我似乎少不得这种满足"></a>我喜欢弹钢琴练习曲，是因为觉得每天都能有所进步。这或许也是我喜欢读外文书的原因所在。我当然不是因为喜欢外文多过本国语言，也并非觉得我欣赏的本国作家比不上外国作家。而是因为在理解外文的意义和情感时，会有轻微的难度。一旦攻克了它，一旦理解得越来越好，也许会产生一种无意识的自豪感。在精神愉悦的同时，增添某种道不明的心灵满足。我似乎少不得这种满足</h1><ul><li>您在第 101 页（位置 #1542-1543）的标注 | 添加于 2023年3月15日星期三 下午2:12:27</li></ul><h1 id="有时候，为了从他的行文节奏中跳脱出来，我会试图写得差些。但与他对抗本身，也说明我还想着他。"><a href="#有时候，为了从他的行文节奏中跳脱出来，我会试图写得差些。但与他对抗本身，也说明我还想着他。" class="headerlink" title="有时候，为了从他的行文节奏中跳脱出来，我会试图写得差些。但与他对抗本身，也说明我还想着他。"></a>有时候，为了从他的行文节奏中跳脱出来，我会试图写得差些。但与他对抗本身，也说明我还想着他。</h1><ul><li>您在第 102 页（位置 #1564-1566）的标注 | 添加于 2023年3月15日星期三 下午2:13:42</li></ul><h1 id="我拥有的是多么平庸、悲哀的德行！我对自己过于苛求了吗？别再痛苦了。-我的意志该有多薄弱，才一直乞求上帝赐予力量啊！如今，我的祷告里都是愁云惨雾"><a href="#我拥有的是多么平庸、悲哀的德行！我对自己过于苛求了吗？别再痛苦了。-我的意志该有多薄弱，才一直乞求上帝赐予力量啊！如今，我的祷告里都是愁云惨雾" class="headerlink" title="我拥有的是多么平庸、悲哀的德行！我对自己过于苛求了吗？别再痛苦了。 我的意志该有多薄弱，才一直乞求上帝赐予力量啊！如今，我的祷告里都是愁云惨雾"></a>我拥有的是多么平庸、悲哀的德行！我对自己过于苛求了吗？别再痛苦了。 我的意志该有多薄弱，才一直乞求上帝赐予力量啊！如今，我的祷告里都是愁云惨雾</h1><ul><li>您在第 105 页（位置 #1602-1605）的标注 | 添加于 2023年3月15日星期三 下午2:15:33</li></ul><h1 id="从今早起，我便心如止水。昨夜，我整晚都在沉思和祷告，刹那间，感到一种清澈的寂静包围着我，落在我身上，它与我童年时对圣灵的想象全然一致。我担心这份喜悦不过是神经亢奋之故，于是立刻躺下睡觉，很快进入梦乡。这份幸福并未离我而去，今天早上依然存在，丝毫没有减弱。现在我确信，他要来了。"><a href="#从今早起，我便心如止水。昨夜，我整晚都在沉思和祷告，刹那间，感到一种清澈的寂静包围着我，落在我身上，它与我童年时对圣灵的想象全然一致。我担心这份喜悦不过是神经亢奋之故，于是立刻躺下睡觉，很快进入梦乡。这份幸福并未离我而去，今天早上依然存在，丝毫没有减弱。现在我确信，他要来了。" class="headerlink" title="从今早起，我便心如止水。昨夜，我整晚都在沉思和祷告，刹那间，感到一种清澈的寂静包围着我，落在我身上，它与我童年时对圣灵的想象全然一致。我担心这份喜悦不过是神经亢奋之故，于是立刻躺下睡觉，很快进入梦乡。这份幸福并未离我而去，今天早上依然存在，丝毫没有减弱。现在我确信，他要来了。"></a>从今早起，我便心如止水。昨夜，我整晚都在沉思和祷告，刹那间，感到一种清澈的寂静包围着我，落在我身上，它与我童年时对圣灵的想象全然一致。我担心这份喜悦不过是神经亢奋之故，于是立刻躺下睡觉，很快进入梦乡。这份幸福并未离我而去，今天早上依然存在，丝毫没有减弱。现在我确信，他要来了。</h1><ul><li>您在第 108 页（位置 #1654-1655）的标注 | 添加于 2023年3月15日星期三 下午2:18:25</li></ul><h1 id="不属于上帝的一切，无一能满足我的期待。”"><a href="#不属于上帝的一切，无一能满足我的期待。”" class="headerlink" title="不属于上帝的一切，无一能满足我的期待。”"></a>不属于上帝的一切，无一能满足我的期待。”</h1><ul><li>您在第 112 页（位置 #1706-1707）的标注 | 添加于 2023年3月15日星期三 下午2:20:59</li></ul><h1 id="你希望早些忘掉吗？”-“我希望永远不忘。”"><a href="#你希望早些忘掉吗？”-“我希望永远不忘。”" class="headerlink" title="你希望早些忘掉吗？” “我希望永远不忘。”"></a>你希望早些忘掉吗？” “我希望永远不忘。”</h1>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摘抄</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《窄门》</title>
    <link href="/2023/03/15/Strait-is-the-Gate/"/>
    <url>/2023/03/15/Strait-is-the-Gate/</url>
    
    <content type="html"><![CDATA[<h1 id="读《窄门》"><a href="#读《窄门》" class="headerlink" title="读《窄门》"></a>读《窄门》</h1><p>花了两天时间把《窄门》读完了，书很薄，百来页，故事也不复杂。</p><h2 id="整体感受"><a href="#整体感受" class="headerlink" title="整体感受"></a>整体感受</h2><p>我蛮早就意识到，也一直让自己尽量避免这样一种行为：去给人或事做一个十分简单的评价，然后就带着这个评价或者说偏见去看ta的发展。</p><p>但我这次读这本书的时候，还是这样做了：书读到四分之一时，我就很不能理解阿莉莎，认为她是自作自受。</p><p>所以带着这个偏见，我这本书的阅读体验很不好。让我坚持读下去的，主要是书的封面做得很有感觉，还有书中几处我觉得比较惊艳的情节，比如：</p><ul><li>男主和女主约定暗号<blockquote><p>“听着，阿莉莎，”我突然高声说道，“我有十二天的假期，你若不高兴，我一天也不会多待。我们约定个暗号吧，看到它，表明我第二天就必须离开芬格斯玛尔。而且次日说走就走，不非难，也不抱怨，你同意吗？”<br>这番话我事先并无准备，却说得极其自然。她想了想，回答道：“我下楼吃晚饭时，脖子上若没有戴你喜爱的紫晶十字架……你就明白了吧？”<br>“那会是我在这里的最后一晚。”<br>“你真能就那么走吗？”她继续道，“不流泪，不叹息……”<br>“也不告别，我会像前一天那样与你分别，看起来漫不经心。你起初还会纳闷——他真的明白吗？但第二天早上，当你想找我时就会发现，我已经不在了。”<br>“第二天，我也不会去找你。”</p></blockquote>我喜欢这样的感觉。</li><li>女主的日记<blockquote><p>为何要欺骗自己呢？我是通过理性推导，才对朱莉叶特的幸福感到欣慰的。我曾如此期盼她获得幸福，为了她的幸福，我甚至愿意牺牲自己的幸福。可如今见她轻而易举地获得了，见这份幸福同我们当初的想象如此不同，我竟感到难受。实在太复杂了！是的……我清醒认识到一种可怕的自私心理回到了我身上。让我生气的是：除了牺牲我的幸福外，她还能在别处找到获得幸福之路。也就是说，不用我做出牺牲，她也能幸福。</p></blockquote>这段我觉得很有意思，也很真实。</li></ul><p>这本书让我感兴趣的地方还有：对宗教的描述，或者说对基督教。这本书有很大篇幅是关于基督教的。甚至连书名也是出自其中。我不是一个信徒，但我对信仰有一定的敬畏，对不同的宗教颇感兴趣。我甚至想有机会去读读各宗教的主要经文。</p><h2 id="分析下女主"><a href="#分析下女主" class="headerlink" title="分析下女主"></a>分析下女主</h2><p>我一开始的观点是：女主的境遇实属自作自受。我觉得这并非作者想要表达的。所以我尝试去分析下，以此让自己更好的理解这本书。</p><p><em>留给以后的我吧，我想我还会重读这本书的</em></p><p>书中两位主要女角色的姓名让我读这本书的时候有不一样的体验。</p><ul><li>Juliette，我读的这版将其译为朱莉叶特，但我一直错记成Julia。</li><li>Alissa，译为阿莉莎。这让我联想到阿廖沙，《太阳照常升起》中的阿廖沙。<br>因着这两个错记，我读这本书的时候，Lennon和周韵演的疯妈就一直出现在我的脑中。</li></ul><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><ul><li><p>写这篇感受的时候，我刚读完这本书，还在纠结一个问题：如果这本书读完并没有明确的感想，那还要不要写感受呢？现在快写完了，我反倒就不纠结了。因为我发现，我、当我一开始动笔，或者说开始码字时，本来模模糊糊的感受，也变得具体起来了。这让我觉得很畅快。</p></li><li><p>原书名为：La Porte étroite<br>英译本书名为：Strait is the Gate<br>中译本书名为：窄门</p></li><li><p><a href="https://www.youtube.com/watch?v=qsZ37pDNUwA&t=764s&ab_channel=Jos%C3%A9">The Smiths - A Tale of a Wonderful Woman (Bootleg)</a> 这个让我想到女主，至少是前半段时候的女主。识图后发现这位名叫Virginia Woolf，是一位作家。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>书评</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="/2023/03/13/BlogBuilding/"/>
    <url>/2023/03/13/BlogBuilding/</url>
    
    <content type="html"><![CDATA[<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p><em>记录博客搭建的过程</em></p><ol><li>框架是选用的<a href="https://hexo.io/zh-cn/docs/">Hexo</a>,主题选用的是<a href="https://hexo.fluid-dev.com/docs">Fluid</a>,本地部署十分顺利，跟着教程来就行。</li><li>调整配置的时候遇到了问题，我刚开始是直接使用<code>npm install --save hexo-theme-fluid</code>，但改配置的时候虽然有文档，但各项配置的位置不知道是怎么嵌套的，就选择了方式二。</li><li>本地配置好之后，要部署到Github Pages上。<a href="https://hexo.io/zh-cn/docs/github-pages">Hexo所提供的教程</a>中，所使用的是<code>Github Action</code> 内置的 token 变量<code>GITHUB_TOKEN</code>。根据<a href="https://docs.github.com/en/actions/security-guidesautomatic-token-authentication?query=PA#using-the-github_token-in-a-workflow">官方源文档的描述</a>,为了防止递归构建发生，使用<code>GITHUB_TOKEN</code>推送的代码不会再次触发任何action。而考虑到我希望后续能进一步触发和进一步了解<code>Github Action</code>,我选择自己设置key。</li><li>这个花的时间最多。走了不少弯路，最终是参考了<a href="https://vuepress-theme-reco.recoluan.com/views/other/github-actions.html">使用 GitHub Actions 自动部署博客</a>。</li><li>action已经跑成功了，但访问时却发现还是404，检查后发现是自己未<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">Configuring a publishing source for your GitHub Pages site</a>。</li><li>添加谷歌验证：<br> 参考了<a href="https://jactorsue.github.io/blog/2018/04/how-blog-on-githubpages-can-be-searched-by-google.html">让Google搜索到搭建在Github Pages上的博客</a><ol><li>（前略）验证网站所有权时，选择使用HTML标记方式来验证。fluid主题的head路径为<code>\themes\fluid\layout\_partials\head.ejs</code></li></ol></li><li>减少加载时间，尚未实操，先记录几篇看到的好文<ul><li><a href="https://www.voidking.com/dev-hexo-accelerate/">Hexo加速访问</a></li><li><a href="https://www.voidking.com/dev-hexo-gulp/">Hexo使用Gulp压缩静态资源</a></li></ul></li><li>插入图片，这篇写得挺完整的：<br><a href="https://fuhailin.github.io/Hexo-images/">在Hexo博客中插入图片的各种方式</a></li><li>添加最后修改时间:<br> 将主题配置文件<code>_config.yml</code>中的<code>post:copyright:update_date:enable:</code>设置为<code>enable</code>即可</li></ol><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>记录</tag>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>network</title>
    <link href="/2023/03/11/network/"/>
    <url>/2023/03/11/network/</url>
    
    <content type="html"><![CDATA[<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ul><li>先是看<a href="https://www.jianshu.com/p/53457e21fcd4">如何让国内的阿里云服务器可以高速下载Github代码</a>，但这个是纯命令行的，用的是pm2</li><li>因为延迟比较大，想切换节点，首先是研究怎么用命令行实现.确实可以，<a href="https://sakronos.github.io/Note/2021/03/06/%E4%BD%BF%E7%94%A8Clash-APIj%E5%88%87%E6%8D%A2%E8%8A%82%E7%82%B9/">使用Clash-API切换节点</a>有介绍，但我去操作的话不行，返回<code>&#123;&quot;message&quot;:&quot;Body invalid&quot;&#125;  </code>。看也有人提issue，但我还是不能成功更改。加上这样更改的话，就挺麻烦的。于是想着能不能搞个ui。</li><li>然后参考<a href="https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/">如何在Linux上优雅的使用Clash</a>这篇，docker让这些配置变得简单多了。但我还是遇到了些问题：主要是自作聪明，修改了<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">- .<span class="hljs-regexp">/config.yaml:/</span>root<span class="hljs-regexp">/.config/</span>clash/config.yaml<br>- .<span class="hljs-regexp">/Country.mmdb:/</span>root<span class="hljs-regexp">/.config/</span>clash/Country.mmdb<br></code></pre></td></tr></table></figure>调试后才发现并不用修改。另一个是配置<code>external-controller: :9090</code>时，自己改成了<code>127.0.0.1:9090</code></li><li>上面那篇文章少了暴露接口这一步，<a href="https://juejin.cn/post/7054941050216906760">如何为实验室服务器配置终端代理</a>，<a href="https://zhuanlan.zhihu.com/p/46973701">Linux 让终端走代理的几种方法</a>,这两篇讲得挺好的</li></ul><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ul><li>了解了配置文件怎么写的</li><li>学到了如何检查是处于代理状态：<code>curl cip.cc</code>，但得到的地址和我实际走的节点不一样</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://sakronos.github.io/Note/2021/03/06/%E4%BD%BF%E7%94%A8Clash-APIj%E5%88%87%E6%8D%A2%E8%8A%82%E7%82%B9/">使用Clash-API切换节点</a></li><li><a href="https://github.com/Dreamacro/clash/issues/659">通过RESTful API更改节点代理返回{“message”:”Body invalid”}</a></li><li><a href="https://www.jianshu.com/p/53457e21fcd4">如何让国内的阿里云服务器可以高速下载Github代码</a></li><li><a href="https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/">如何在Linux上优雅的使用Clash</a></li><li><a href="https://juejin.cn/post/7054941050216906760">如何为实验室服务器配置终端代理</a></li><li><a href="https://zhuanlan.zhihu.com/p/46973701">Linux 让终端走代理的几种方法</a></li><li><a href="https://github.com/Dreamacro/clash/wiki/configuration">Configuration</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《生死疲劳》摘录</title>
    <link href="/2023/03/09/excerpt-of-Life-and-Death-are-Wearing-Me-Out/"/>
    <url>/2023/03/09/excerpt-of-Life-and-Death-are-Wearing-Me-Out/</url>
    
    <content type="html"><![CDATA[<h1 id="《生死疲劳》摘录"><a href="#《生死疲劳》摘录" class="headerlink" title="《生死疲劳》摘录"></a>《生死疲劳》摘录</h1><ul><li>您在第 6 页（位置 #79-81）的标注 | 添加于 2023年3月7日星期二 上午10:32:43</li></ul><h1 id="我知道自己忍受痛苦的能力已经到达极限，如果不屈服，不知道这些贪官污吏们还会用什么样的酷刑折磨我。但如果我就此屈服，前边那些酷刑，岂不是白白忍受了吗？"><a href="#我知道自己忍受痛苦的能力已经到达极限，如果不屈服，不知道这些贪官污吏们还会用什么样的酷刑折磨我。但如果我就此屈服，前边那些酷刑，岂不是白白忍受了吗？" class="headerlink" title="我知道自己忍受痛苦的能力已经到达极限，如果不屈服，不知道这些贪官污吏们还会用什么样的酷刑折磨我。但如果我就此屈服，前边那些酷刑，岂不是白白忍受了吗？"></a>我知道自己忍受痛苦的能力已经到达极限，如果不屈服，不知道这些贪官污吏们还会用什么样的酷刑折磨我。但如果我就此屈服，前边那些酷刑，岂不是白白忍受了吗？</h1><ul><li>您在第 10 页（位置 #151-152）的标注 | 添加于 2023年3月7日星期二 上午10:39:29</li></ul><h1 id="这又是那小子胆大妄为的编造。他小说里描写的那些事，基本上都是胡诌，千万不要信以为真。"><a href="#这又是那小子胆大妄为的编造。他小说里描写的那些事，基本上都是胡诌，千万不要信以为真。" class="headerlink" title="这又是那小子胆大妄为的编造。他小说里描写的那些事，基本上都是胡诌，千万不要信以为真。"></a>这又是那小子胆大妄为的编造。他小说里描写的那些事，基本上都是胡诌，千万不要信以为真。</h1><ul><li>您在第 20 页（位置 #297-300）的标注 | 添加于 2023年3月7日星期二 上午10:55:57</li></ul><h1 id="你知道谁是蓝解放吗？故事的讲述者——年龄虽小但目光老辣，体不满三尺但语言犹如滔滔江河的大头儿蓝千岁突然问我。-我自然知道，我就是蓝解放，蓝脸是我的爹，迎春是我的娘。这么说，你曾经是我们家的一头驴"><a href="#你知道谁是蓝解放吗？故事的讲述者——年龄虽小但目光老辣，体不满三尺但语言犹如滔滔江河的大头儿蓝千岁突然问我。-我自然知道，我就是蓝解放，蓝脸是我的爹，迎春是我的娘。这么说，你曾经是我们家的一头驴" class="headerlink" title="你知道谁是蓝解放吗？故事的讲述者——年龄虽小但目光老辣，体不满三尺但语言犹如滔滔江河的大头儿蓝千岁突然问我。 我自然知道，我就是蓝解放，蓝脸是我的爹，迎春是我的娘。这么说，你曾经是我们家的一头驴"></a>你知道谁是蓝解放吗？故事的讲述者——年龄虽小但目光老辣，体不满三尺但语言犹如滔滔江河的大头儿蓝千岁突然问我。 我自然知道，我就是蓝解放，蓝脸是我的爹，迎春是我的娘。这么说，你曾经是我们家的一头驴</h1><ul><li>您在第 41 页（位置 #618-618）的标注 | 添加于 2023年3月7日星期二 下午12:12:28</li></ul><h1 id="公狗得意翘尾巴，人得意翘鸡巴。"><a href="#公狗得意翘尾巴，人得意翘鸡巴。" class="headerlink" title="公狗得意翘尾巴，人得意翘鸡巴。"></a>公狗得意翘尾巴，人得意翘鸡巴。</h1><ul><li>您在第 44 页（位置 #662-663）的标注 | 添加于 2023年3月7日星期二 下午12:17:16</li></ul><h1 id="我与你们每一个人，都没有具体的冤仇。如果你们不来斗争我，也会有别人来斗争我，这是时代，是有钱人的厄运势"><a href="#我与你们每一个人，都没有具体的冤仇。如果你们不来斗争我，也会有别人来斗争我，这是时代，是有钱人的厄运势" class="headerlink" title="我与你们每一个人，都没有具体的冤仇。如果你们不来斗争我，也会有别人来斗争我，这是时代，是有钱人的厄运势"></a>我与你们每一个人，都没有具体的冤仇。如果你们不来斗争我，也会有别人来斗争我，这是时代，是有钱人的厄运势</h1><ul><li>您在第 49 页（位置 #747-748）的标注 | 添加于 2023年3月7日星期二 下午12:24:10</li></ul><h1 id="我奔跑着，用最大的速度，积蓄着最大的力量，对着高墙上那道被夏天的暴雨冲出来的豁口，纵身一跃，四蹄腾空，身体拉长，飞出了院墙。"><a href="#我奔跑着，用最大的速度，积蓄着最大的力量，对着高墙上那道被夏天的暴雨冲出来的豁口，纵身一跃，四蹄腾空，身体拉长，飞出了院墙。" class="headerlink" title="我奔跑着，用最大的速度，积蓄着最大的力量，对着高墙上那道被夏天的暴雨冲出来的豁口，纵身一跃，四蹄腾空，身体拉长，飞出了院墙。"></a>我奔跑着，用最大的速度，积蓄着最大的力量，对着高墙上那道被夏天的暴雨冲出来的豁口，纵身一跃，四蹄腾空，身体拉长，飞出了院墙。</h1><ul><li>您在第 72 页（位置 #1095-1095）的标注 | 添加于 2023年3月7日星期二 下午12:47:39</li></ul><h1 id="我明白，老黑明白"><a href="#我明白，老黑明白" class="headerlink" title="我明白，老黑明白"></a>我明白，老黑明白</h1><ul><li>您在第 85 页（位置 #1293-1294）的标注 | 添加于 2023年3月8日星期三 上午5:36:32</li></ul><h1 id="你们这两个杂种，不要如此猖狂，有饭大家吃，休要吃独食。现在是共产主义时代，我的就是你的，你的就是我的，还分什么彼此。"><a href="#你们这两个杂种，不要如此猖狂，有饭大家吃，休要吃独食。现在是共产主义时代，我的就是你的，你的就是我的，还分什么彼此。" class="headerlink" title="你们这两个杂种，不要如此猖狂，有饭大家吃，休要吃独食。现在是共产主义时代，我的就是你的，你的就是我的，还分什么彼此。"></a>你们这两个杂种，不要如此猖狂，有饭大家吃，休要吃独食。现在是共产主义时代，我的就是你的，你的就是我的，还分什么彼此。</h1><ul><li>您在第 97 页（位置 #1474-1474）的标注 | 添加于 2023年3月8日星期三 上午5:46:24</li></ul><h1 id="“老黑，你大口喘气，死劲踏地，让阳光照着"><a href="#“老黑，你大口喘气，死劲踏地，让阳光照着" class="headerlink" title="“老黑，你大口喘气，死劲踏地，让阳光照着"></a>“老黑，你大口喘气，死劲踏地，让阳光照着</h1><ul><li>您在第 104 页（位置 #1592-1592）的标注 | 添加于 2023年3月8日星期三 上午5:55:45</li></ul><h1 id="这头牛，在那儿耍脐子"><a href="#这头牛，在那儿耍脐子" class="headerlink" title="这头牛，在那儿耍脐子"></a>这头牛，在那儿耍脐子</h1><ul><li>您在第 107 页（位置 #1639-1640）的标注 | 添加于 2023年3月8日星期三 上午5:58:36</li></ul><h1 id="“他们要是不这样逼我，我也许真就入了，但他们用这样的方法，像熬大鹰一样熬我，嗨，我还真不入了。"><a href="#“他们要是不这样逼我，我也许真就入了，但他们用这样的方法，像熬大鹰一样熬我，嗨，我还真不入了。" class="headerlink" title="“他们要是不这样逼我，我也许真就入了，但他们用这样的方法，像熬大鹰一样熬我，嗨，我还真不入了。"></a>“他们要是不这样逼我，我也许真就入了，但他们用这样的方法，像熬大鹰一样熬我，嗨，我还真不入了。</h1><ul><li>您在第 108 页（位置 #1653-1654）的标注 | 添加于 2023年3月8日星期三 上午5:59:32</li></ul><h1 id="？我就是不服这口气，我就要用我的行动，试验一下毛泽东说话算数不算数。”"><a href="#？我就是不服这口气，我就要用我的行动，试验一下毛泽东说话算数不算数。”" class="headerlink" title="？我就是不服这口气，我就要用我的行动，试验一下毛泽东说话算数不算数。”"></a>？我就是不服这口气，我就要用我的行动，试验一下毛泽东说话算数不算数。”</h1><ul><li>您在第 110 页（位置 #1684-1686）的标注 | 添加于 2023年3月8日星期三 上午6:01:39</li></ul><h1 id="尽管我们希望全体农民都加入人民公社，走集体化的道路，但个别农民坚持不入，也属正当权利，基层组织不得用强迫命令、更不能用非法手段逼他入社。"><a href="#尽管我们希望全体农民都加入人民公社，走集体化的道路，但个别农民坚持不入，也属正当权利，基层组织不得用强迫命令、更不能用非法手段逼他入社。" class="headerlink" title="尽管我们希望全体农民都加入人民公社，走集体化的道路，但个别农民坚持不入，也属正当权利，基层组织不得用强迫命令、更不能用非法手段逼他入社。"></a>尽管我们希望全体农民都加入人民公社，走集体化的道路，但个别农民坚持不入，也属正当权利，基层组织不得用强迫命令、更不能用非法手段逼他入社。</h1><ul><li>您在第 112 页（位置 #1710-1710）的标注 | 添加于 2023年3月8日星期三 上午6:03:27</li></ul><h1 id="虽是反面角色，但也比那些正面的群众角色重要"><a href="#虽是反面角色，但也比那些正面的群众角色重要" class="headerlink" title="虽是反面角色，但也比那些正面的群众角色重要"></a>虽是反面角色，但也比那些正面的群众角色重要</h1><ul><li>您在第 115 页（位置 #1752-1753）的标注 | 添加于 2023年3月8日星期三 上午6:05:42</li></ul><h1 id="周文王被逼吃了亲生儿子的肉，吐出几个肉团子，变成兔子，奔跑而去。金龙吞下你的耳轮，等于儿子吃了爹的肉，但他永远不会吐出来，只会变成大便拉出来，拉出来又会变成什么东西呢？"><a href="#周文王被逼吃了亲生儿子的肉，吐出几个肉团子，变成兔子，奔跑而去。金龙吞下你的耳轮，等于儿子吃了爹的肉，但他永远不会吐出来，只会变成大便拉出来，拉出来又会变成什么东西呢？" class="headerlink" title="周文王被逼吃了亲生儿子的肉，吐出几个肉团子，变成兔子，奔跑而去。金龙吞下你的耳轮，等于儿子吃了爹的肉，但他永远不会吐出来，只会变成大便拉出来，拉出来又会变成什么东西呢？"></a>周文王被逼吃了亲生儿子的肉，吐出几个肉团子，变成兔子，奔跑而去。金龙吞下你的耳轮，等于儿子吃了爹的肉，但他永远不会吐出来，只会变成大便拉出来，拉出来又会变成什么东西呢？</h1><ul><li>您在第 123 页（位置 #1873-1873）的标注 | 添加于 2023年3月8日星期三 上午6:12:28</li></ul><h1 id="心地邪恶，自命不凡，对所有的人都充满仇恨"><a href="#心地邪恶，自命不凡，对所有的人都充满仇恨" class="headerlink" title="心地邪恶，自命不凡，对所有的人都充满仇恨"></a>心地邪恶，自命不凡，对所有的人都充满仇恨</h1><ul><li>您在第 125 页（位置 #1910-1912）的标注 | 添加于 2023年3月8日星期三 上午6:14:04</li></ul><h1 id="西门金龙劝我趁着爹没回家牵牛入社。我不同意，他就打我。他一打我，我的牛就去顶胡宾。胡宾一着急，就往我哥身后躲。我哥与牛一对面，便形成僵持局面，几分钟后，大家便各自往后退缩，于是一日无事。"><a href="#西门金龙劝我趁着爹没回家牵牛入社。我不同意，他就打我。他一打我，我的牛就去顶胡宾。胡宾一着急，就往我哥身后躲。我哥与牛一对面，便形成僵持局面，几分钟后，大家便各自往后退缩，于是一日无事。" class="headerlink" title="西门金龙劝我趁着爹没回家牵牛入社。我不同意，他就打我。他一打我，我的牛就去顶胡宾。胡宾一着急，就往我哥身后躲。我哥与牛一对面，便形成僵持局面，几分钟后，大家便各自往后退缩，于是一日无事。"></a>西门金龙劝我趁着爹没回家牵牛入社。我不同意，他就打我。他一打我，我的牛就去顶胡宾。胡宾一着急，就往我哥身后躲。我哥与牛一对面，便形成僵持局面，几分钟后，大家便各自往后退缩，于是一日无事。</h1><ul><li>您在第 141 页（位置 #2157-2159）的标注 | 添加于 2023年3月8日星期三 上午6:26:24</li></ul><h1 id="，但我们这位县长却用幽默而又生动的笔调，写了他“文革”初期的遭遇。他说他骑着纸驴，在全县的十八个集市被游斗，把身体锻炼得无比结实，原来的高血压、失眠等毛病全都不治而愈。他说他一听到锣鼓点就兴奋，腿脚就颤抖，就像那头黑驴见到母驴就弹蹄喷"><a href="#，但我们这位县长却用幽默而又生动的笔调，写了他“文革”初期的遭遇。他说他骑着纸驴，在全县的十八个集市被游斗，把身体锻炼得无比结实，原来的高血压、失眠等毛病全都不治而愈。他说他一听到锣鼓点就兴奋，腿脚就颤抖，就像那头黑驴见到母驴就弹蹄喷" class="headerlink" title="，但我们这位县长却用幽默而又生动的笔调，写了他“文革”初期的遭遇。他说他骑着纸驴，在全县的十八个集市被游斗，把身体锻炼得无比结实，原来的高血压、失眠等毛病全都不治而愈。他说他一听到锣鼓点就兴奋，腿脚就颤抖，就像那头黑驴见到母驴就弹蹄喷"></a>，但我们这位县长却用幽默而又生动的笔调，写了他“文革”初期的遭遇。他说他骑着纸驴，在全县的十八个集市被游斗，把身体锻炼得无比结实，原来的高血压、失眠等毛病全都不治而愈。他说他一听到锣鼓点就兴奋，腿脚就颤抖，就像那头黑驴见到母驴就弹蹄喷</h1><ul><li>您在第 147 页（位置 #2253-2254）的标注 | 添加于 2023年3月8日星期三 上午6:33:05</li></ul><h1 id="鸳鸯呀，蝴蝶呀，都是地主资产阶级情调，无产阶级的审美观，是青松、红日、大海、高山、火炬、镰刀、斧头，如果要绣，就绣这些东西。"><a href="#鸳鸯呀，蝴蝶呀，都是地主资产阶级情调，无产阶级的审美观，是青松、红日、大海、高山、火炬、镰刀、斧头，如果要绣，就绣这些东西。" class="headerlink" title="鸳鸯呀，蝴蝶呀，都是地主资产阶级情调，无产阶级的审美观，是青松、红日、大海、高山、火炬、镰刀、斧头，如果要绣，就绣这些东西。"></a>鸳鸯呀，蝴蝶呀，都是地主资产阶级情调，无产阶级的审美观，是青松、红日、大海、高山、火炬、镰刀、斧头，如果要绣，就绣这些东西。</h1><ul><li>您在第 150 页（位置 #2300-2301）的标注 | 添加于 2023年3月8日星期三 上午6:36:37</li></ul><h1 id="我调转红缨枪想捅了她，革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的"><a href="#我调转红缨枪想捅了她，革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的" class="headerlink" title="我调转红缨枪想捅了她，革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的"></a>我调转红缨枪想捅了她，革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的</h1><ul><li>您在第 150 页（位置 #2300-2301）的标注 | 添加于 2023年3月8日星期三 上午6:36:51</li></ul><h1 id="革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的用棍棒打死，有的用铡刀铡成两截。"><a href="#革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的用棍棒打死，有的用铡刀铡成两截。" class="headerlink" title="革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的用棍棒打死，有的用铡刀铡成两截。"></a>革命时期，民办枪毙，夹山人民公社已经把杀人的权力下放到村了，麻湾村一天一夜就杀了三十三人，老的八十八岁，小的十三岁，有的用棍棒打死，有的用铡刀铡成两截。</h1><ul><li>您在第 161 页（位置 #2466-2467）的标注 | 添加于 2023年3月8日星期三 上午6:47:43</li></ul><h1 id="皱纹平复，阴茎与日俱增，直如一挺歪把子机关枪，横草千女如卷席。"><a href="#皱纹平复，阴茎与日俱增，直如一挺歪把子机关枪，横草千女如卷席。" class="headerlink" title="皱纹平复，阴茎与日俱增，直如一挺歪把子机关枪，横草千女如卷席。"></a>皱纹平复，阴茎与日俱增，直如一挺歪把子机关枪，横草千女如卷席。</h1><ul><li>您在第 169 页（位置 #2580-2580）的标注 | 添加于 2023年3月8日星期三 上午6:53:25</li></ul><h1 id="革命不是请客吃饭，是暴力。"><a href="#革命不是请客吃饭，是暴力。" class="headerlink" title="革命不是请客吃饭，是暴力。"></a>革命不是请客吃饭，是暴力。</h1><ul><li>您在第 171 页（位置 #2613-2614）的标注 | 添加于 2023年3月8日星期三 上午6:55:36</li></ul><h1 id="爷们，别这样说话，这样说话伤人心，你现在还小，等你长大了就知道了。"><a href="#爷们，别这样说话，这样说话伤人心，你现在还小，等你长大了就知道了。" class="headerlink" title="爷们，别这样说话，这样说话伤人心，你现在还小，等你长大了就知道了。"></a>爷们，别这样说话，这样说话伤人心，你现在还小，等你长大了就知道了。</h1><ul><li>您在第 174 页（位置 #2663-2664）的标注 | 添加于 2023年3月8日星期三 上午6:59:20</li></ul><h1 id="好闺女亲闺女，你要是能把你金龙哥的军装复了原，大娘我给你三跪九叩首！"><a href="#好闺女亲闺女，你要是能把你金龙哥的军装复了原，大娘我给你三跪九叩首！" class="headerlink" title="好闺女亲闺女，你要是能把你金龙哥的军装复了原，大娘我给你三跪九叩首！"></a>好闺女亲闺女，你要是能把你金龙哥的军装复了原，大娘我给你三跪九叩首！</h1><ul><li>您在第 182 页（位置 #2781-2783）的标注 | 添加于 2023年3月8日星期三 上午7:07:17</li></ul><h1 id="让爹把罪行全部推到刘少奇头上，受蒙蔽无罪，反戈一击有功。如再执迷不悟，顽抗到底，那就是螳螂挡车，自取灭亡。告诉爹，让他游街示众，那是最温柔的行动，下一步，等群众觉悟了，我也就无能为力了"><a href="#让爹把罪行全部推到刘少奇头上，受蒙蔽无罪，反戈一击有功。如再执迷不悟，顽抗到底，那就是螳螂挡车，自取灭亡。告诉爹，让他游街示众，那是最温柔的行动，下一步，等群众觉悟了，我也就无能为力了" class="headerlink" title="让爹把罪行全部推到刘少奇头上，受蒙蔽无罪，反戈一击有功。如再执迷不悟，顽抗到底，那就是螳螂挡车，自取灭亡。告诉爹，让他游街示众，那是最温柔的行动，下一步，等群众觉悟了，我也就无能为力了"></a>让爹把罪行全部推到刘少奇头上，受蒙蔽无罪，反戈一击有功。如再执迷不悟，顽抗到底，那就是螳螂挡车，自取灭亡。告诉爹，让他游街示众，那是最温柔的行动，下一步，等群众觉悟了，我也就无能为力了</h1><ul><li>您在第 185 页（位置 #2831-2832）的标注 | 添加于 2023年3月8日星期三 上午7:11:09</li></ul><h1 id="爹平静地说：“是没有什么意义了，我就是想图个清静，想自己做自己的主，不愿意被别人管着"><a href="#爹平静地说：“是没有什么意义了，我就是想图个清静，想自己做自己的主，不愿意被别人管着" class="headerlink" title="爹平静地说：“是没有什么意义了，我就是想图个清静，想自己做自己的主，不愿意被别人管着"></a>爹平静地说：“是没有什么意义了，我就是想图个清静，想自己做自己的主，不愿意被别人管着</h1><ul><li>您在第 188 页（位置 #2879-2880）的标注 | 添加于 2023年3月8日星期三 上午7:13:33</li></ul><h1 id="他们要弄死我我没法子抗拒，但想要我自己死，那是痴心妄想！我要好好活着，给全中国留下这个黑点！”"><a href="#他们要弄死我我没法子抗拒，但想要我自己死，那是痴心妄想！我要好好活着，给全中国留下这个黑点！”" class="headerlink" title="他们要弄死我我没法子抗拒，但想要我自己死，那是痴心妄想！我要好好活着，给全中国留下这个黑点！”"></a>他们要弄死我我没法子抗拒，但想要我自己死，那是痴心妄想！我要好好活着，给全中国留下这个黑点！”</h1><ul><li>您在第 199 页（位置 #3046-3048）的标注 | 添加于 2023年3月8日星期三 上午7:21:40</li></ul><h1 id="这还是头牛吗？这也许是一个神，也许是一个佛，它这样忍受痛苦，是不是要点化身陷迷途的人，让他们觉悟？人们，不要对他人施暴，对牛也不要；不要强迫别人干他不愿意干的事情，对牛也不要。"><a href="#这还是头牛吗？这也许是一个神，也许是一个佛，它这样忍受痛苦，是不是要点化身陷迷途的人，让他们觉悟？人们，不要对他人施暴，对牛也不要；不要强迫别人干他不愿意干的事情，对牛也不要。" class="headerlink" title="这还是头牛吗？这也许是一个神，也许是一个佛，它这样忍受痛苦，是不是要点化身陷迷途的人，让他们觉悟？人们，不要对他人施暴，对牛也不要；不要强迫别人干他不愿意干的事情，对牛也不要。"></a>这还是头牛吗？这也许是一个神，也许是一个佛，它这样忍受痛苦，是不是要点化身陷迷途的人，让他们觉悟？人们，不要对他人施暴，对牛也不要；不要强迫别人干他不愿意干的事情，对牛也不要。</h1><ul><li>您在第 208 页（位置 #3181-3183）的标注 | 添加于 2023年3月8日星期三 上午7:28:12</li></ul><h1 id="每一头猪，都是射向帝修反的一颗炮弹。所以，我们的老母猪一胎生了十六只猪娃，实际上是生了十六颗射向帝修反的炮弹，我们的这几头老母猪，实际上是向帝修反发起总攻的几艘航空母舰！"><a href="#每一头猪，都是射向帝修反的一颗炮弹。所以，我们的老母猪一胎生了十六只猪娃，实际上是生了十六颗射向帝修反的炮弹，我们的这几头老母猪，实际上是向帝修反发起总攻的几艘航空母舰！" class="headerlink" title="每一头猪，都是射向帝修反的一颗炮弹。所以，我们的老母猪一胎生了十六只猪娃，实际上是生了十六颗射向帝修反的炮弹，我们的这几头老母猪，实际上是向帝修反发起总攻的几艘航空母舰！"></a>每一头猪，都是射向帝修反的一颗炮弹。所以，我们的老母猪一胎生了十六只猪娃，实际上是生了十六颗射向帝修反的炮弹，我们的这几头老母猪，实际上是向帝修反发起总攻的几艘航空母舰！</h1><ul><li>您在第 233 页（位置 #3563-3565）的标注 | 添加于 2023年3月8日星期三 上午7:48:30</li></ul><h1 id="我看到奔跑中的我——未来的猪王——浑身发亮，如同穿着贴身的绸缎，像一道流光溢彩的闪电，在接近猪王之舍时飞身跃起，用两只灵巧得可以私刻公章、伪造美元的前爪抓住杏树下垂的枝杈，身体线条流畅宛如纺锤，借着树枝的弹性和身体的惯性，超越了墙头、降落在我的窝里"><a href="#我看到奔跑中的我——未来的猪王——浑身发亮，如同穿着贴身的绸缎，像一道流光溢彩的闪电，在接近猪王之舍时飞身跃起，用两只灵巧得可以私刻公章、伪造美元的前爪抓住杏树下垂的枝杈，身体线条流畅宛如纺锤，借着树枝的弹性和身体的惯性，超越了墙头、降落在我的窝里" class="headerlink" title="我看到奔跑中的我——未来的猪王——浑身发亮，如同穿着贴身的绸缎，像一道流光溢彩的闪电，在接近猪王之舍时飞身跃起，用两只灵巧得可以私刻公章、伪造美元的前爪抓住杏树下垂的枝杈，身体线条流畅宛如纺锤，借着树枝的弹性和身体的惯性，超越了墙头、降落在我的窝里"></a>我看到奔跑中的我——未来的猪王——浑身发亮，如同穿着贴身的绸缎，像一道流光溢彩的闪电，在接近猪王之舍时飞身跃起，用两只灵巧得可以私刻公章、伪造美元的前爪抓住杏树下垂的枝杈，身体线条流畅宛如纺锤，借着树枝的弹性和身体的惯性，超越了墙头、降落在我的窝里</h1><ul><li>您在第 240 页（位置 #3666-3670）的标注 | 添加于 2023年3月8日星期三 上午7:54:41</li></ul><h1 id="他相貌奇丑，行为古怪，经常说一些让人摸不着头脑的鬼话，是个千人厌、万人嫌的角色。连他自家的人也认为这孩子是个傻瓜。他的姐姐曾经指点着他的脸质问母亲：娘啊娘，他真是你生出来的吗？是不是我爹早起捡粪时从桑树棵子后边捡来的弃婴？莫言的哥哥姐姐都是身材挺拔、面容清秀的青年，其质量绝不亚于金龙、宝凤、互助、合作。母亲叹着气说：生他的时候，你爹梦见一个拖着大笔的小鬼，进了我家的厅堂，问他来自何处，他说来自阴曹地府，曾"><a href="#他相貌奇丑，行为古怪，经常说一些让人摸不着头脑的鬼话，是个千人厌、万人嫌的角色。连他自家的人也认为这孩子是个傻瓜。他的姐姐曾经指点着他的脸质问母亲：娘啊娘，他真是你生出来的吗？是不是我爹早起捡粪时从桑树棵子后边捡来的弃婴？莫言的哥哥姐姐都是身材挺拔、面容清秀的青年，其质量绝不亚于金龙、宝凤、互助、合作。母亲叹着气说：生他的时候，你爹梦见一个拖着大笔的小鬼，进了我家的厅堂，问他来自何处，他说来自阴曹地府，曾" class="headerlink" title="他相貌奇丑，行为古怪，经常说一些让人摸不着头脑的鬼话，是个千人厌、万人嫌的角色。连他自家的人也认为这孩子是个傻瓜。他的姐姐曾经指点着他的脸质问母亲：娘啊娘，他真是你生出来的吗？是不是我爹早起捡粪时从桑树棵子后边捡来的弃婴？莫言的哥哥姐姐都是身材挺拔、面容清秀的青年，其质量绝不亚于金龙、宝凤、互助、合作。母亲叹着气说：生他的时候，你爹梦见一个拖着大笔的小鬼，进了我家的厅堂，问他来自何处，他说来自阴曹地府，曾"></a>他相貌奇丑，行为古怪，经常说一些让人摸不着头脑的鬼话，是个千人厌、万人嫌的角色。连他自家的人也认为这孩子是个傻瓜。他的姐姐曾经指点着他的脸质问母亲：娘啊娘，他真是你生出来的吗？是不是我爹早起捡粪时从桑树棵子后边捡来的弃婴？莫言的哥哥姐姐都是身材挺拔、面容清秀的青年，其质量绝不亚于金龙、宝凤、互助、合作。母亲叹着气说：生他的时候，你爹梦见一个拖着大笔的小鬼，进了我家的厅堂，问他来自何处，他说来自阴曹地府，曾</h1><ul><li>您在第 258 页（位置 #3943-3944）的标注 | 添加于 2023年3月8日星期三 上午8:08:46</li></ul><h1 id="五十年代的人是比较纯洁的，六十年代的人是十分狂热的，七十年代的人是相当胆怯的，八十年代的人是察言观色的，九十年代的人是极其邪恶的。"><a href="#五十年代的人是比较纯洁的，六十年代的人是十分狂热的，七十年代的人是相当胆怯的，八十年代的人是察言观色的，九十年代的人是极其邪恶的。" class="headerlink" title="五十年代的人是比较纯洁的，六十年代的人是十分狂热的，七十年代的人是相当胆怯的，八十年代的人是察言观色的，九十年代的人是极其邪恶的。"></a>五十年代的人是比较纯洁的，六十年代的人是十分狂热的，七十年代的人是相当胆怯的，八十年代的人是察言观色的，九十年代的人是极其邪恶的。</h1><ul><li>您在第 305 页（位置 #4667-4667）的标注 | 添加于 2023年3月8日星期三 下午12:23:20</li></ul><h1 id="只有当土地属于我们自己，我们才能成为土地的主人”。"><a href="#只有当土地属于我们自己，我们才能成为土地的主人”。" class="headerlink" title="只有当土地属于我们自己，我们才能成为土地的主人”。"></a>只有当土地属于我们自己，我们才能成为土地的主人”。</h1><ul><li>您在第 308 页（位置 #4714-4715）的标注 | 添加于 2023年3月8日星期三 下午12:26:05</li></ul><h1 id="，我就是喜欢一个人单干。天下乌鸦都是黑的，为什么不能有只白的？我就是一只白乌鸦"><a href="#，我就是喜欢一个人单干。天下乌鸦都是黑的，为什么不能有只白的？我就是一只白乌鸦" class="headerlink" title="，我就是喜欢一个人单干。天下乌鸦都是黑的，为什么不能有只白的？我就是一只白乌鸦"></a>，我就是喜欢一个人单干。天下乌鸦都是黑的，为什么不能有只白的？我就是一只白乌鸦</h1><ul><li>您在第 315 页（位置 #4818-4821）的标注 | 添加于 2023年3月8日星期三 下午12:31:25</li></ul><h1 id="帝王没有家事，帝王的鸡巴上有政治。我应该忠于职守，与母猪们交配；我必须履行职责，把我的精液，射进它们的子宫，不论它们是美还是丑，不论它们是白还是黑，不论它们是处女猪还是曾被别的公猪爬跨过。复杂的问题是选择，它们同样迫切、同样灼热，究竟应该先跟哪一个交配，或者说，应该先临幸哪一头"><a href="#帝王没有家事，帝王的鸡巴上有政治。我应该忠于职守，与母猪们交配；我必须履行职责，把我的精液，射进它们的子宫，不论它们是美还是丑，不论它们是白还是黑，不论它们是处女猪还是曾被别的公猪爬跨过。复杂的问题是选择，它们同样迫切、同样灼热，究竟应该先跟哪一个交配，或者说，应该先临幸哪一头" class="headerlink" title="帝王没有家事，帝王的鸡巴上有政治。我应该忠于职守，与母猪们交配；我必须履行职责，把我的精液，射进它们的子宫，不论它们是美还是丑，不论它们是白还是黑，不论它们是处女猪还是曾被别的公猪爬跨过。复杂的问题是选择，它们同样迫切、同样灼热，究竟应该先跟哪一个交配，或者说，应该先临幸哪一头"></a>帝王没有家事，帝王的鸡巴上有政治。我应该忠于职守，与母猪们交配；我必须履行职责，把我的精液，射进它们的子宫，不论它们是美还是丑，不论它们是白还是黑，不论它们是处女猪还是曾被别的公猪爬跨过。复杂的问题是选择，它们同样迫切、同样灼热，究竟应该先跟哪一个交配，或者说，应该先临幸哪一头</h1><ul><li>您在第 330 页（位置 #5050-5051）的标注 | 添加于 2023年3月8日星期三 下午12:42:52</li></ul><h1 id="一头猪就是一枚射向帝修反的炮弹我小白身为公猪重任在肩一定要养精蓄锐听从召唤把天下的母猪全配完……”"><a href="#一头猪就是一枚射向帝修反的炮弹我小白身为公猪重任在肩一定要养精蓄锐听从召唤把天下的母猪全配完……”" class="headerlink" title="一头猪就是一枚射向帝修反的炮弹我小白身为公猪重任在肩一定要养精蓄锐听从召唤把天下的母猪全配完……”"></a>一头猪就是一枚射向帝修反的炮弹我小白身为公猪重任在肩一定要养精蓄锐听从召唤把天下的母猪全配完……”</h1><ul><li>您在第 342 页（位置 #5243-5245）的标注 | 添加于 2023年3月8日星期三 下午12:51:04</li></ul><h1 id="，这月亮悲壮苍凉，是专为逝世的毛泽东而来。我们看到毛泽东坐在月亮上——他肥胖的身体使月亮受压而成椭圆——身上披着红旗，手指夹着香烟，微仰着沉重的头颅，脸上是若有所思的表情。"><a href="#，这月亮悲壮苍凉，是专为逝世的毛泽东而来。我们看到毛泽东坐在月亮上——他肥胖的身体使月亮受压而成椭圆——身上披着红旗，手指夹着香烟，微仰着沉重的头颅，脸上是若有所思的表情。" class="headerlink" title="，这月亮悲壮苍凉，是专为逝世的毛泽东而来。我们看到毛泽东坐在月亮上——他肥胖的身体使月亮受压而成椭圆——身上披着红旗，手指夹着香烟，微仰着沉重的头颅，脸上是若有所思的表情。"></a>，这月亮悲壮苍凉，是专为逝世的毛泽东而来。我们看到毛泽东坐在月亮上——他肥胖的身体使月亮受压而成椭圆——身上披着红旗，手指夹着香烟，微仰着沉重的头颅，脸上是若有所思的表情。</h1><ul><li>您在第 363 页（位置 #5558-5558）的标注 | 添加于 2023年3月8日星期三 下午1:06:47</li></ul><h1 id="亲兄弟都要分家，一群杂姓人，硬捏合到一块儿，怎么好得了？"><a href="#亲兄弟都要分家，一群杂姓人，硬捏合到一块儿，怎么好得了？" class="headerlink" title="亲兄弟都要分家，一群杂姓人，硬捏合到一块儿，怎么好得了？"></a>亲兄弟都要分家，一群杂姓人，硬捏合到一块儿，怎么好得了？</h1><ul><li>您在第 365 页（位置 #5593-5594）的标注 | 添加于 2023年3月8日星期三 下午1:08:30</li></ul><h1 id="“我不捐，我好不容易挣几个钱，凭什么要捐出来修庙？……我请你们打我，我当年揍过你几下，你就还我几下，不是我欠你们的账，是你们欠我的账"><a href="#“我不捐，我好不容易挣几个钱，凭什么要捐出来修庙？……我请你们打我，我当年揍过你几下，你就还我几下，不是我欠你们的账，是你们欠我的账" class="headerlink" title="“我不捐，我好不容易挣几个钱，凭什么要捐出来修庙？……我请你们打我，我当年揍过你几下，你就还我几下，不是我欠你们的账，是你们欠我的账"></a>“我不捐，我好不容易挣几个钱，凭什么要捐出来修庙？……我请你们打我，我当年揍过你几下，你就还我几下，不是我欠你们的账，是你们欠我的账</h1><ul><li>您在第 379 页（位置 #5803-5803）的标注 | 添加于 2023年3月8日星期三 下午1:20:41</li></ul><h1 id="起初，没有一头猪会认为这是一场屠杀的前奏"><a href="#起初，没有一头猪会认为这是一场屠杀的前奏" class="headerlink" title="起初，没有一头猪会认为这是一场屠杀的前奏"></a>起初，没有一头猪会认为这是一场屠杀的前奏</h1><ul><li>您在第 379 页（位置 #5803-5804）的标注 | 添加于 2023年3月8日星期三 下午1:20:54</li></ul><h1 id="起初，没有一头猪会认为这是一场屠杀的前奏，还以为是工厂、机关的共青团或者工会组织的秋游活动。"><a href="#起初，没有一头猪会认为这是一场屠杀的前奏，还以为是工厂、机关的共青团或者工会组织的秋游活动。" class="headerlink" title="起初，没有一头猪会认为这是一场屠杀的前奏，还以为是工厂、机关的共青团或者工会组织的秋游活动。"></a>起初，没有一头猪会认为这是一场屠杀的前奏，还以为是工厂、机关的共青团或者工会组织的秋游活动。</h1><ul><li>您在第 391 页（位置 #5992-5993）的标注 | 添加于 2023年3月8日星期三 下午1:28:29</li></ul><h1 id="这是个无声胜有声的世界，这是个无色胜有色的环境，是的，就权当一切都是在水底发生的。如果他听我的话，他就是一个伟大作家。"><a href="#这是个无声胜有声的世界，这是个无色胜有色的环境，是的，就权当一切都是在水底发生的。如果他听我的话，他就是一个伟大作家。" class="headerlink" title="这是个无声胜有声的世界，这是个无色胜有色的环境，是的，就权当一切都是在水底发生的。如果他听我的话，他就是一个伟大作家。"></a>这是个无声胜有声的世界，这是个无色胜有色的环境，是的，就权当一切都是在水底发生的。如果他听我的话，他就是一个伟大作家。</h1><ul><li>您在第 395 页（位置 #6056-6056）的标注 | 添加于 2023年3月8日星期三 下午1:33:22</li></ul><h1 id="哥们儿，你又来了！"><a href="#哥们儿，你又来了！" class="headerlink" title="哥们儿，你又来了！"></a>哥们儿，你又来了！</h1><ul><li>您在第 407 页（位置 #6232-6233）的标注 | 添加于 2023年3月8日星期三 下午1:47:12</li></ul><h1 id="狗娘养的，你他妈的叫唤什么？！"><a href="#狗娘养的，你他妈的叫唤什么？！" class="headerlink" title="狗娘养的，你他妈的叫唤什么？！"></a>狗娘养的，你他妈的叫唤什么？！</h1><ul><li>您在第 417 页（位置 #6391-6392）的标注 | 添加于 2023年3月8日星期三 下午1:56:07</li></ul><h1 id="屁股很实地坐在沙发上，背也靠实落了，双腿并拢支起，将那本《家畜常见病防治手册》放在膝盖上，极其入神地读"><a href="#屁股很实地坐在沙发上，背也靠实落了，双腿并拢支起，将那本《家畜常见病防治手册》放在膝盖上，极其入神地读" class="headerlink" title="屁股很实地坐在沙发上，背也靠实落了，双腿并拢支起，将那本《家畜常见病防治手册》放在膝盖上，极其入神地读"></a>屁股很实地坐在沙发上，背也靠实落了，双腿并拢支起，将那本《家畜常见病防治手册》放在膝盖上，极其入神地读</h1><ul><li>您在第 422 页（位置 #6464-6466）的标注 | 添加于 2023年3月8日星期三 下午1:59:52</li></ul><h1 id="人们训练工作犬并不能使狗的鼻子更灵，而是教会狗如何把气味用行为标识出来让鼻子不灵的人用眼睛感知，譬如把罪犯的鞋子从一堆鞋子里叼出来。对狗来说，叼出来的其实是那个人的气味，而人看到的是那个人的鞋子。"><a href="#人们训练工作犬并不能使狗的鼻子更灵，而是教会狗如何把气味用行为标识出来让鼻子不灵的人用眼睛感知，譬如把罪犯的鞋子从一堆鞋子里叼出来。对狗来说，叼出来的其实是那个人的气味，而人看到的是那个人的鞋子。" class="headerlink" title="人们训练工作犬并不能使狗的鼻子更灵，而是教会狗如何把气味用行为标识出来让鼻子不灵的人用眼睛感知，譬如把罪犯的鞋子从一堆鞋子里叼出来。对狗来说，叼出来的其实是那个人的气味，而人看到的是那个人的鞋子。"></a>人们训练工作犬并不能使狗的鼻子更灵，而是教会狗如何把气味用行为标识出来让鼻子不灵的人用眼睛感知，譬如把罪犯的鞋子从一堆鞋子里叼出来。对狗来说，叼出来的其实是那个人的气味，而人看到的是那个人的鞋子。</h1><ul><li>您在第 428 页（位置 #6559-6561）的标注 | 添加于 2023年3月8日星期三 下午2:06:13</li></ul><h1 id="我有时与他一起吃，有时不吃。我会开冰箱，也会开冰柜。冰柜里的东西和冰箱冷冻层的东西要提前叼出来，解冻后再吃，否则对牙齿不好。爱护牙齿，就是爱护生命。"><a href="#我有时与他一起吃，有时不吃。我会开冰箱，也会开冰柜。冰柜里的东西和冰箱冷冻层的东西要提前叼出来，解冻后再吃，否则对牙齿不好。爱护牙齿，就是爱护生命。" class="headerlink" title="我有时与他一起吃，有时不吃。我会开冰箱，也会开冰柜。冰柜里的东西和冰箱冷冻层的东西要提前叼出来，解冻后再吃，否则对牙齿不好。爱护牙齿，就是爱护生命。"></a>我有时与他一起吃，有时不吃。我会开冰箱，也会开冰柜。冰柜里的东西和冰箱冷冻层的东西要提前叼出来，解冻后再吃，否则对牙齿不好。爱护牙齿，就是爱护生命。</h1><ul><li>您在第 429 页（位置 #6571-6571）的标注 | 添加于 2023年3月8日星期三 下午2:07:08</li></ul><h1 id="。奶奶的，有些狗，变成了人的宠物；有些狗，把人变成宠物。"><a href="#。奶奶的，有些狗，变成了人的宠物；有些狗，把人变成宠物。" class="headerlink" title="。奶奶的，有些狗，变成了人的宠物；有些狗，把人变成宠物。"></a>。奶奶的，有些狗，变成了人的宠物；有些狗，把人变成宠物。</h1><ul><li>您在第 443 页（位置 #6786-6788）的标注 | 添加于 2023年3月8日星期三 下午2:19:42</li></ul><h1 id="“你们高密狗，太野蛮了。我们北京狗，举行月光party时，一个个珠光宝气，轻歌曼舞，大家跳舞，谈艺术，如果喝，那也只喝一点红酒，或者冰水，如果吃，那也是用牙签插一根小香肠儿，吃着玩儿，哪像它们，你看那个黑毛白爪的家伙——”"><a href="#“你们高密狗，太野蛮了。我们北京狗，举行月光party时，一个个珠光宝气，轻歌曼舞，大家跳舞，谈艺术，如果喝，那也只喝一点红酒，或者冰水，如果吃，那也是用牙签插一根小香肠儿，吃着玩儿，哪像它们，你看那个黑毛白爪的家伙——”" class="headerlink" title="“你们高密狗，太野蛮了。我们北京狗，举行月光party时，一个个珠光宝气，轻歌曼舞，大家跳舞，谈艺术，如果喝，那也只喝一点红酒，或者冰水，如果吃，那也是用牙签插一根小香肠儿，吃着玩儿，哪像它们，你看那个黑毛白爪的家伙——”"></a>“你们高密狗，太野蛮了。我们北京狗，举行月光party时，一个个珠光宝气，轻歌曼舞，大家跳舞，谈艺术，如果喝，那也只喝一点红酒，或者冰水，如果吃，那也是用牙签插一根小香肠儿，吃着玩儿，哪像它们，你看那个黑毛白爪的家伙——”</h1><ul><li>您在第 471 页（位置 #7213-7213）的标注 | 添加于 2023年3月8日星期三 下午3:32:47</li></ul><h1 id="。世事犹如书籍，一页页被翻过去。人要向前看，少翻历史旧账；狗也要与时俱进，面对现实生活"><a href="#。世事犹如书籍，一页页被翻过去。人要向前看，少翻历史旧账；狗也要与时俱进，面对现实生活" class="headerlink" title="。世事犹如书籍，一页页被翻过去。人要向前看，少翻历史旧账；狗也要与时俱进，面对现实生活"></a>。世事犹如书籍，一页页被翻过去。人要向前看，少翻历史旧账；狗也要与时俱进，面对现实生活</h1><ul><li>您在第 473 页（位置 #7247-7248）的标注 | 添加于 2023年3月8日星期三 下午3:38:14</li></ul><h1 id="我绕着西门闹和白氏的坟墓转了三圈，然后，跷起一条后腿，将一泡百感交集的狗尿，撒在了他们的墓碑上"><a href="#我绕着西门闹和白氏的坟墓转了三圈，然后，跷起一条后腿，将一泡百感交集的狗尿，撒在了他们的墓碑上" class="headerlink" title="我绕着西门闹和白氏的坟墓转了三圈，然后，跷起一条后腿，将一泡百感交集的狗尿，撒在了他们的墓碑上"></a>我绕着西门闹和白氏的坟墓转了三圈，然后，跷起一条后腿，将一泡百感交集的狗尿，撒在了他们的墓碑上</h1><ul><li>您在第 477 页（位置 #7314-7314）的标注 | 添加于 2023年3月8日星期三 下午3:41:35</li></ul><h1 id="要保持一条狗的尊严"><a href="#要保持一条狗的尊严" class="headerlink" title="要保持一条狗的尊严"></a>要保持一条狗的尊严</h1><ul><li>您在第 477 页（位置 #7314-7314）的标注 | 添加于 2023年3月8日星期三 下午3:41:38</li></ul><h1 id="我要保持一条狗的尊严"><a href="#我要保持一条狗的尊严" class="headerlink" title="我要保持一条狗的尊严"></a>我要保持一条狗的尊严</h1><ul><li>您在第 478 页（位置 #7324-7325）的标注 | 添加于 2023年3月8日星期三 下午3:42:19</li></ul><h1 id="数字分崩离析，时间成为碎片。"><a href="#数字分崩离析，时间成为碎片。" class="headerlink" title="数字分崩离析，时间成为碎片。"></a>数字分崩离析，时间成为碎片。</h1><ul><li>您在第 500 页（位置 #7653-7654）的标注 | 添加于 2023年3月8日星期三 下午4:03:46</li></ul><h1 id="人民需要油条，就等于人民需要妈妈。"><a href="#人民需要油条，就等于人民需要妈妈。" class="headerlink" title="人民需要油条，就等于人民需要妈妈。"></a>人民需要油条，就等于人民需要妈妈。</h1><ul><li>您在第 536 页（位置 #8215-8217）的标注 | 添加于 2023年3月8日星期三 下午4:35:30</li></ul><h1 id="是……最后的斗争……团结起来到明天……英特纳雄耐尔……一定要……”-一口血“哇”地喷出，有尺把高，溅到了周围的土地上。他的两只眼睛突然明亮起来，像燃烧鸡毛时放出的光，闪烁一下，又闪烁一下，便黯淡下去，永远地熄灭了。"><a href="#是……最后的斗争……团结起来到明天……英特纳雄耐尔……一定要……”-一口血“哇”地喷出，有尺把高，溅到了周围的土地上。他的两只眼睛突然明亮起来，像燃烧鸡毛时放出的光，闪烁一下，又闪烁一下，便黯淡下去，永远地熄灭了。" class="headerlink" title="是……最后的斗争……团结起来到明天……英特纳雄耐尔……一定要……” 一口血“哇”地喷出，有尺把高，溅到了周围的土地上。他的两只眼睛突然明亮起来，像燃烧鸡毛时放出的光，闪烁一下，又闪烁一下，便黯淡下去，永远地熄灭了。"></a>是……最后的斗争……团结起来到明天……英特纳雄耐尔……一定要……” 一口血“哇”地喷出，有尺把高，溅到了周围的土地上。他的两只眼睛突然明亮起来，像燃烧鸡毛时放出的光，闪烁一下，又闪烁一下，便黯淡下去，永远地熄灭了。</h1><ul><li>您在第 542 页（位置 #8298-8299）的标注 | 添加于 2023年3月8日星期三 下午4:41:48</li></ul><h1 id="在西门家死者坟墓的北边，隔着几十米的距离，你爹站定了，四周环顾，看了一会儿，跺跺脚下的土地，说："><a href="#在西门家死者坟墓的北边，隔着几十米的距离，你爹站定了，四周环顾，看了一会儿，跺跺脚下的土地，说：" class="headerlink" title="在西门家死者坟墓的北边，隔着几十米的距离，你爹站定了，四周环顾，看了一会儿，跺跺脚下的土地，说："></a>在西门家死者坟墓的北边，隔着几十米的距离，你爹站定了，四周环顾，看了一会儿，跺跺脚下的土地，说：</h1><ul><li>您在第 542 页（位置 #8304-8304）的标注 | 添加于 2023年3月8日星期三 下午4:42:09</li></ul><h1 id="老狗，这地方归你了，我和月亮为你做证。”"><a href="#老狗，这地方归你了，我和月亮为你做证。”" class="headerlink" title="老狗，这地方归你了，我和月亮为你做证。”"></a>老狗，这地方归你了，我和月亮为你做证。”</h1><ul><li>您在第 544 页（位置 #8329-8331）的标注 | 添加于 2023年3月8日星期三 下午4:44:32</li></ul><h1 id="亲戚朋友也不用去报丧，你找张苇席，把我卷了去悄没声地埋了就行。我缸里的粮食，你全部倒进墓穴里，让粮食盖住我的身体盖住我的脸。这是我的土地里产的粮食，还应该回到我的土地里去。我死了谁也不许哭，没什么好哭的。"><a href="#亲戚朋友也不用去报丧，你找张苇席，把我卷了去悄没声地埋了就行。我缸里的粮食，你全部倒进墓穴里，让粮食盖住我的身体盖住我的脸。这是我的土地里产的粮食，还应该回到我的土地里去。我死了谁也不许哭，没什么好哭的。" class="headerlink" title="亲戚朋友也不用去报丧，你找张苇席，把我卷了去悄没声地埋了就行。我缸里的粮食，你全部倒进墓穴里，让粮食盖住我的身体盖住我的脸。这是我的土地里产的粮食，还应该回到我的土地里去。我死了谁也不许哭，没什么好哭的。"></a>亲戚朋友也不用去报丧，你找张苇席，把我卷了去悄没声地埋了就行。我缸里的粮食，你全部倒进墓穴里，让粮食盖住我的身体盖住我的脸。这是我的土地里产的粮食，还应该回到我的土地里去。我死了谁也不许哭，没什么好哭的。</h1><ul><li>您在第 545 页（位置 #8344-8345）的标注 | 添加于 2023年3月8日星期三 下午4:45:25</li></ul><h1 id="我让开放去把你们找来，就是想对你们说，我没有几天熬头了，你们也不用东躲西藏了……也是我糊涂，当初为什么不成全了你们呢……”"><a href="#我让开放去把你们找来，就是想对你们说，我没有几天熬头了，你们也不用东躲西藏了……也是我糊涂，当初为什么不成全了你们呢……”" class="headerlink" title="我让开放去把你们找来，就是想对你们说，我没有几天熬头了，你们也不用东躲西藏了……也是我糊涂，当初为什么不成全了你们呢……”"></a>我让开放去把你们找来，就是想对你们说，我没有几天熬头了，你们也不用东躲西藏了……也是我糊涂，当初为什么不成全了你们呢……”</h1><ul><li>您在第 545 页（位置 #8355-8355）的标注 | 添加于 2023年3月8日星期三 下午4:46:16</li></ul><h1 id="当天夜里，吴秋香吊死在大院当中那棵杏树上的那根往东南方向倾斜的枯枝上。"><a href="#当天夜里，吴秋香吊死在大院当中那棵杏树上的那根往东南方向倾斜的枯枝上。" class="headerlink" title="当天夜里，吴秋香吊死在大院当中那棵杏树上的那根往东南方向倾斜的枯枝上。"></a>当天夜里，吴秋香吊死在大院当中那棵杏树上的那根往东南方向倾斜的枯枝上。</h1><ul><li>您在第 546 页（位置 #8372-8375）的标注 | 添加于 2023年3月8日星期三 下午4:48:32</li></ul><h1 id="你爹端着一杯酒，对着月亮泼上去。月亮颤抖了一下，月光突然黯淡了，仿佛有一层雾遮住了它的脸，片刻之后，月光重新明亮，更加温婉，更加凄清，院子里的一切，房屋、树木、人、狗，都宛若浸泡在澄澈的浅蓝墨水里。-你爹把第二杯酒，浇在地上。-你爹把第三杯酒，倒在我的嘴里。"><a href="#你爹端着一杯酒，对着月亮泼上去。月亮颤抖了一下，月光突然黯淡了，仿佛有一层雾遮住了它的脸，片刻之后，月光重新明亮，更加温婉，更加凄清，院子里的一切，房屋、树木、人、狗，都宛若浸泡在澄澈的浅蓝墨水里。-你爹把第二杯酒，浇在地上。-你爹把第三杯酒，倒在我的嘴里。" class="headerlink" title="你爹端着一杯酒，对着月亮泼上去。月亮颤抖了一下，月光突然黯淡了，仿佛有一层雾遮住了它的脸，片刻之后，月光重新明亮，更加温婉，更加凄清，院子里的一切，房屋、树木、人、狗，都宛若浸泡在澄澈的浅蓝墨水里。 你爹把第二杯酒，浇在地上。 你爹把第三杯酒，倒在我的嘴里。"></a>你爹端着一杯酒，对着月亮泼上去。月亮颤抖了一下，月光突然黯淡了，仿佛有一层雾遮住了它的脸，片刻之后，月光重新明亮，更加温婉，更加凄清，院子里的一切，房屋、树木、人、狗，都宛若浸泡在澄澈的浅蓝墨水里。 你爹把第二杯酒，浇在地上。 你爹把第三杯酒，倒在我的嘴里。</h1><ul><li>您在第 547 页（位置 #8387-8389）的标注 | 添加于 2023年3月8日星期三 下午4:50:04</li></ul><h1 id="等我们终于抵达了那一亩六分、犹如黄金铸成的土地时，月亮已经改变了颜色。它先是变成茄花般的浅紫色，又慢慢地变成了蔚蓝。此时，在我们上下左右，月光如同蔚蓝的海水与浩瀚的天空连成一体，而我们，则是这海底的小小生物。"><a href="#等我们终于抵达了那一亩六分、犹如黄金铸成的土地时，月亮已经改变了颜色。它先是变成茄花般的浅紫色，又慢慢地变成了蔚蓝。此时，在我们上下左右，月光如同蔚蓝的海水与浩瀚的天空连成一体，而我们，则是这海底的小小生物。" class="headerlink" title="等我们终于抵达了那一亩六分、犹如黄金铸成的土地时，月亮已经改变了颜色。它先是变成茄花般的浅紫色，又慢慢地变成了蔚蓝。此时，在我们上下左右，月光如同蔚蓝的海水与浩瀚的天空连成一体，而我们，则是这海底的小小生物。"></a>等我们终于抵达了那一亩六分、犹如黄金铸成的土地时，月亮已经改变了颜色。它先是变成茄花般的浅紫色，又慢慢地变成了蔚蓝。此时，在我们上下左右，月光如同蔚蓝的海水与浩瀚的天空连成一体，而我们，则是这海底的小小生物。</h1><ul><li>您在第 548 页（位置 #8402-8402）的标注 | 添加于 2023年3月8日星期三 下午4:50:46</li></ul><h1 id="一切来自土地的都将回归土地。"><a href="#一切来自土地的都将回归土地。" class="headerlink" title="一切来自土地的都将回归土地。"></a>一切来自土地的都将回归土地。</h1><ul><li>您在第 551 页（位置 #8441-8442）的标注 | 添加于 2023年3月8日星期三 下午4:54:52</li></ul><h1 id="；那就算是我的独创吗？不，那依然是对经典的笨拙的摹仿。"><a href="#；那就算是我的独创吗？不，那依然是对经典的笨拙的摹仿。" class="headerlink" title="；那就算是我的独创吗？不，那依然是对经典的笨拙的摹仿。"></a>；那就算是我的独创吗？不，那依然是对经典的笨拙的摹仿。</h1><ul><li>您在第 561 页（位置 #8595-8597）的标注 | 添加于 2023年3月8日星期三 下午5:05:54</li></ul><h1 id="。我国的作家阿城，曾经撰文说爱情是一种化学反应，此论标新立异，听来颇感新鲜，但如果爱情能用化学方式制造并能用化学方式控制，小说家就没有用武之地了。因此，即便他说的是真理，我也要反对。"><a href="#。我国的作家阿城，曾经撰文说爱情是一种化学反应，此论标新立异，听来颇感新鲜，但如果爱情能用化学方式制造并能用化学方式控制，小说家就没有用武之地了。因此，即便他说的是真理，我也要反对。" class="headerlink" title="。我国的作家阿城，曾经撰文说爱情是一种化学反应，此论标新立异，听来颇感新鲜，但如果爱情能用化学方式制造并能用化学方式控制，小说家就没有用武之地了。因此，即便他说的是真理，我也要反对。"></a>。我国的作家阿城，曾经撰文说爱情是一种化学反应，此论标新立异，听来颇感新鲜，但如果爱情能用化学方式制造并能用化学方式控制，小说家就没有用武之地了。因此，即便他说的是真理，我也要反对。</h1>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摘抄</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《生死疲劳》</title>
    <link href="/2023/03/09/Life-and-Death-are-Wearing-Me-Out/"/>
    <url>/2023/03/09/Life-and-Death-are-Wearing-Me-Out/</url>
    
    <content type="html"><![CDATA[<h1 id="读《生死疲劳》"><a href="#读《生死疲劳》" class="headerlink" title="读《生死疲劳》"></a>读《生死疲劳》</h1><p>莫言，因为我之前，确切地说是高中，做过一篇以他的文章为文本的阅读题。那篇文章我读来觉得太压抑，就一直不喜。所以尽管书柜上有一本他的短篇集《白狗秋千架》，我也没有去翻看过。</p><p>《生死疲劳》，算是我读的第一本他的书。</p><p>同样是在高中时，语文老师就又推荐过这本书，推荐语我倒记得清楚：讲一个人的几世轮回，很有意思。那时候就想读，但直到几年后的前天，才真正捧读。</p><p>3月7日晚上，选修课，为了打发时间选的这本书，但一开始读就有点停不下来。</p><p>有种说法，人会把陌生的东西与自己较为熟悉的东西相关联，来获得安全感。我虽然不是很喜欢下面这种描述，但还是不自觉地把《生死疲劳》和《百年孤独》联系到一起。因为觉得他们都用魔幻现实主义的笔触来描述一个家族。我又想到《平凡的世界》《白鹿原》，因为从时间线上来说都是描述建国前夕到改开之后的故事。</p><p>对这本书有这些印象：</p><ul><li><p>人称变化。很有趣，读前几章的时候突然来个“你”，觉得很突兀。到后面才发现是转世成人的西门闹，或者说是蓝千岁在和蓝解放对话。我感觉这个人称变化得很有意思。书中比较吸引我的是一个有着人类意识的动物身边所发生的事。但有些地方动物去不了，有些事动物看不到，总是动物视角也会腻。这时候用这个对话的形式就真的很妙。</p></li><li><p>作者的频频出现。我读过的小说，应该是第一次见作者以其名出现在小说中，并几乎贯穿着故事的发展，甚至是推动着故事发展的。莫言引蓝解放去看蓝金龙在树上和黄互助交合，后来又介绍庞春苗和蓝解放相识。书中也多次出现故事的主要讲述者，对莫言的评价。这个也是很新奇的。虽然我不是很喜欢，因为觉得稍显过多了。但又想到那张图：有人拿着《活着》找莫言签名，他还给签了，而且签的是余华。想到这里我就对莫言印象不错。</p></li><li><p>结尾。其实到倒数第二章，莫言就要让故事结束，他是这样说的</p><blockquote><p>亲爱的读者诸君，小说写到此处，本该见好就收，但书中的许多人物，尚无最终结局，而希望看到最终结局，又是大多数读者的愿望。那么，就让我们的叙事主人公——蓝解放和大头儿——休息休息，由我——他们的朋友莫言，接着他们的话茬儿，在这个堪称漫长的故事上，再续上一个尾巴。</p></blockquote><p>我觉得莫言这段话说得真好。我欣赏见好就收的结尾，但作为一名读者，一名读进去了的读者，我还是蛮想知道书中人物的后续的。所以我还是读了这五十四章，读完后甚至觉得有点懊悔。因为把事情讲透了，讲完了，常常就没那么美了。我更喜欢五十三章作为结尾，以那句话作为结尾：</p><blockquote><p>一切来自土地的都将回归土地。</p></blockquote><p>谈几个书中的人物：</p><ul><li><p>蓝脸。</p><p>我，没有种过一天地，倒是有下过田，但就此和我的一只拖鞋说了再见。但我还是对土地情有独钟。我想了下原因，可能跟我小学的时候，在爷爷奶奶的菜籽摊上度过有关，可能和陪伴我高中两年多的水稻田有关，可能和我读过的那些小小说中描述的有关。总而言之，我对土地，对农业有些感情。因此，也不仅仅是这个原因，我先谈的是蓝脸。</p><p>最为欣赏的是他向月亮敬酒，书中出现过两次，至少我印象中是；一次是孩儿们结婚，妻子迎春给他送了瓶酒，他的第一杯就是敬给月亮的。</p><blockquote><p>他把瓶中的酒对着月亮挥洒着，以我很少见到的激昂态度、悲壮而苍凉地喊叫着：“月亮，十几年来，都是你陪着我干活，你是老天爷送给我的灯笼。你照着我耕田锄地，照着我播种间苗，照着我收割脱粒……你不言不语，不怒不怨，我欠着你一大些感情。今夜，就让我祭你一壶酒，表表我的心，月亮，你辛苦了！”</p></blockquote><p>还有一次是中秋家宴</p><blockquote><p>你爹端着一杯酒，对着月亮泼上去。月亮颤抖了一下，月光突然黯淡了，仿佛有一层雾遮住了它的脸，片刻之后，月光重新明亮，更加温婉，更加凄清，院子里的一切，房屋、树木、人、狗，都宛若浸泡在澄澈的浅蓝墨水里。</p></blockquote><p>太美了，太浪漫了。向月亮敬酒绝非莫言或者蓝脸的独创。李白的《月下独酌》里就有</p><blockquote><p>举杯邀明月，对影成三人<br>但我觉得没有蓝脸的对月亮洒酒的美。他是把月亮当作了劳动伙伴，而非像李白那样因为孤独而行乐。蓝脸后面和狗小四约定的时候，也提到了月亮。<br>“老狗，你做证，月亮也做证，这地方，我躺过了，占住了，谁也夺不去了。”<br>我喜欢他对月亮的态度。</p></blockquote></li></ul></li></ul><p><em>可以算是第一次写书评，或者说是读后感会更好些。我没什么资格去评价，去批判这些书，我只是说说自己读书的感想。之前读完书，也自然会有些感想，但因犯懒，加上习惯看完书就立刻去搜别人的书评，然后本来就朦胧的想法被他人的想法占领，就没有去写。这篇可以说是我第一次克服那股懒劲，并且有意无意地没有去搜书评来看。这次写完，感觉不错，至少把自己的一些想法，用文字的方式尽可能地表达出来了</em><br>——2023年3月9日</p>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>书评</tag>
      
      <tag>人物</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RSS折腾记</title>
    <link href="/2023/03/08/RssTossing/"/>
    <url>/2023/03/08/RssTossing/</url>
    
    <content type="html"><![CDATA[<h1 id="RSS折腾记"><a href="#RSS折腾记" class="headerlink" title="RSS折腾记"></a>RSS折腾记</h1><p>3月7日，下午没有课，很闲。玩了会吸血鬼幸存者觉得索然无味，就想着试下之前没有成功的服务器。</p><p>先是试了下AZURE，但学生验证没过，放弃了。然后尝试阿里云。他有一个飞天加速3.0-高校计划，可以领取七个月的ECS。还是蛮顺利的。</p><p>领取后第一个想法是搭自己的RSS服务。基本上是照着<a href="https://sspai.com/post/57498#!">找不到满意的 RSS 服务？你可以自己搭建一个</a>，来完成的。但中间还是有些曲折，踩了一些坑。</p><ul><li><p>首先是网络问题。文中给的地址都是Github上的，但下载速度实在不行。16M的文件要下载半个多小时。这个有两种解决方式是。首先尝试的是用镜像站，但因为尝试的镜像站有问题，再加上我后续还想在服务器上搭telegram机器人。于是选择用代理。参考了<a href="https://www.jianshu.com/p/53457e21fcd4">如何让国内的阿里云服务器可以高速下载Github代码</a>,和所用机场的教程。但关于如何更换节点，还不清楚。现在会了，记录在<a href="https://euds63.github.io/2023/03/11/network/">网络</a></p></li><li><p>其次是文中给的ttrss 的 docker-compose 配置文件有问题，自己修改后下的东西也不对。然后就想到直接复制过来。但对vim的操作实在是不熟悉，加上yml对间隔格式要求很严，在这上面折腾了好一会儿。<br>  (发现是自己愚蠢，GitHub提供了相应的下载方式：点raw，跳转到的就是所需的网址了。比如我这步所需的代码就是<code>curl -fLo a.yml https://raw.githubusercontent.com/HenryQW/Awesome-TTRSS/main/docker-compose.yml</code>)</p></li><li><p>容器启动后，按照描述，我访问<code>&#123;服务器 IP&#125;:181</code>，应该可以直接看到 Tiny Tiny RSS 的 Web 前端。但却报502。后来想到，默认的181端口是不开放的，在安全组中添加了就可以了。</p></li><li><p>阅读器的选择也花了我很多时间，先是试已经使用过一段时间的<code>Fluent Reader</code>,但按照文档里所给的地址不成功，然后是选用<code>TTRSS-Reader</code>,这个就很顺利，但界面比较复古，加上功能不够多，也可能是我还没有发掘出来，就转而使用<code>FeedMe</code>,首先用的是TTRSS的api，但出现的问题是订阅地址能过来，但内容拉取不到，看issue才发现这是好几个月前就出现的bug，还没被修复，解决方法是转用fever api。但这个也是坑。首先是网页给的地址是<code>http:/[您的地址]/plugins.local/fever/</code>,而文档给的地址是<code>https://[您的地址]/plugins/fever</code>。但可能是不同阅读器设置的过滤方法不一样，<code>FeedMe</code>能用的地址是<code>http://[您的地址]/</code>,而<code>Fluent Reader</code>则是<code>http://[您的地址]//plugins/fever/</code>。</p></li></ul><p>以上就是整个搭建过程中所遇到的问题，目前发现<code>FeedMe</code>的功能明显得多，还有RSSHub也想用起来，订阅源想扩大到除了个人博客之外的其他。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>李志</title>
    <link href="/2023/03/05/lizhizhuangbi/"/>
    <url>/2023/03/05/lizhizhuangbi/</url>
    
    <content type="html"><![CDATA[<h1 id="李志"><a href="#李志" class="headerlink" title="李志"></a>李志</h1><div class="note note-info">            <p>最近中文歌听得最多的就是李志的歌了，期末复习的时候，复习不下去的很多时候都是听他的歌来休息的，所以觉得有必要开一篇来记录。包括我听歌的感受，某些觉得有意思的歌词，他人的评价等等</p>          </div><h2 id="第一次"><a href="#第一次" class="headerlink" title="第一次"></a>第一次</h2><p>大学听到《热河》的时候感觉很熟悉，翻了下MP3才发现自己高一的时候就从同学那边拷了。发现这个的时候觉得很惊喜，可能是冥冥中的缘分吧。因为李志曾就读东南大学。然后自己在不知道李志的情况下，选择了来南京的东南大学。</p><h2 id="歌"><a href="#歌" class="headerlink" title="歌"></a>歌</h2><p>歌的话，对他的讲爱情的，没什么感觉。比较喜欢的是这几首：<br><a href="https://www.youtube.com/watch?v=K2QE-FRAP0o&ab_channel=%E6%9D%8E%E5%BF%97Lizhi">《热河》</a>，<a href="https://www.youtube.com/watch?v=fOHpIDVVYxo&list=RD2n52uYI7eII&index=10&ab_channel=sghgpwt">《他们》</a>,<a href="https://www.youtube.com/watch?v=buxL8RZ4gpA&list=RD2n52uYI7eII&index=27&ab_channel=%E8%80%BF%E7%82%8E%E6%97%B6%E9%97%B4">《人民不需要自由》</a>。喜欢这几首的原因，可能倒不是因为什么政治，因为华语歌情情爱爱的比例太高了，相比来说，这几首就感觉很好。简单分别说下感受。</p><ul><li><a href="https://www.youtube.com/watch?v=K2QE-FRAP0o&ab_channel=%E6%9D%8E%E5%BF%97Lizhi">《热河》</a></li></ul><p>白描，就是简单地描述些地名和场景，但表现力很强。单听歌就能想象出热河路的那个环境。这种类型的歌不是很常见。</p><ul><li><a href="https://www.youtube.com/watch?v=fOHpIDVVYxo&list=RD2n52uYI7eII&index=10&ab_channel=sghgpwt">《他们》</a></li></ul><p>可能是目前最喜欢的一首李志的歌了。歌词很简单，旋律好像也是，不懂。很容易唱出来。但歌词却很辛辣。</p><ul><li><a href="https://www.youtube.com/watch?v=buxL8RZ4gpA&list=RD2n52uYI7eII&index=27&ab_channel=%E8%80%BF%E7%82%8E%E6%97%B6%E9%97%B4">《人民不需要自由》</a><br>这首歌的歌词同样也是比较地简单，但现场表演却十分地棒。通过合唱反复地唱“人民不需要自由，这是最好的年代。”但李志却用将近一半的时间给他乐队里的成员独立的表现时间。一个个点名过去，这还是我第一次见这种表演，觉得很惊艳。说是人民不需要自由，但有了自由的人民（乐队队员），却能有很棒的表现。</li></ul><h2 id="人"><a href="#人" class="headerlink" title="人"></a>人</h2><p>看他几次演唱会的录像，发现很华丽，很多人参加到表演中。包括观众，给到的镜头都能看到观众很投入。乐队里有很多人，这是我比较少见的，因为我常听的几乎都是四个人的乐队，比如Queen,Beatles这些。但这种表演形式也不错。</p><p>关于他的封杀，尝试去搜了下，还是看得莫名其妙。他的几首比较敏感的歌，都算是早期的作品了。但他在那之后依旧办了好几年的跨年演唱会，和网易云也有合作。但有一天却说封就封了。搞得想听都只能在youtube上听。不懂。</p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><p>今天上网翻到了他的博客。<br><a href="http://lizhizhuangbi.blogspot.com/">请叫我傻逼：一半是火焰</a><br><a href="https://web.archive.org/web/20130104132323/http://www.lizhizhuangbi.com/">李志官方网站</a></p><p>还是蛮有意思的。<br>这里记录几点：</p><ul><li>他对其作品的售价理念是这样的。<br>&gt;免费下载，自由定价</li><li>1997年—1999年 在东南大学学习如何成为一个工程师，未遂。</li><li>博客的slogan是<br>&gt;不一定正确，但绝不说谎</li></ul><h2 id="某句话"><a href="#某句话" class="headerlink" title="某句话"></a>某句话</h2><p>  看过他的一个记录片——<a href="https://youtu.be/l97xzUFM2c8">李志 这个世界会好的</a>，对其中一句话印象很深</p><blockquote><p>我们从济南开始就讨论一个问题，有两种观点，一种就是：音乐就是音乐，如果你想改变，你牛逼，你就用音乐本身把它改变掉，你就音乐牛逼，你不用讲任何话就把他们打死。如果我要有那个天赋，我也想那么做。我什么都不用做，我只要把音乐做好往那里一摆，就把你给吓死。你没有呀，所以音乐才会变成工具。      –李志</p></blockquote><p>   这句话就感觉他活得挺通透的，至少对音乐的理解很深。</p><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><ul><li>2023年3月30日，今天有一个电影团队来我校路演，去之前还有点奇怪为什么会选择这里。结果后来导演上台的时候就讲，自己对南京有种特别的感情，因为那位南京市民。当时全场就有种默契的笑。也听到有人就直接说出李志。电影是场不错的电影，感谢李志校友。</li></ul>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>歌手</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我看人工智能</title>
    <link href="/2023/02/17/ai/"/>
    <url>/2023/02/17/ai/</url>
    
    <content type="html"><![CDATA[<h1 id="我看人工智能"><a href="#我看人工智能" class="headerlink" title="我看人工智能"></a>我看人工智能</h1><p><em>从2022年12月ChatGPT发布后，人工智能，或者更具体地说LLM，将要或者说已经改变了生活。我将在这里记录下我的一些想法，我其实应该更早地写下这篇，因为我12月份ChatGPT刚出没多久的时候就用上了，但因为懒，一直没写</em></p><h2 id="2022年12月15日"><a href="#2022年12月15日" class="headerlink" title="2022年12月15日"></a>2022年12月15日</h2><p>了解了相关的原理，想到之前看过的“如果你有无穷多的时间，你可以用来学习，但你将世界上所有的知识都学了一遍并掌握后，你就拥有了全世界”。GPT只是学了一部分，就已经有如此的能力。太强了。</p><h2 id="2023年2月17日"><a href="#2023年2月17日" class="headerlink" title="2023年2月17日"></a>2023年2月17日</h2><p>虽然Github学生包中包含了Copilot的使用，但我还是没用上。因为依旧认为自己仍处于一个初学者阶段，编程还是尽量自己动手写比较好。<br>（5月17日，为了赶小组项目开始使用，因为有了GPT等的使用，没有觉得那么惊艳了，但还是很大程度上提高了我的效率）</p><h2 id="2023年3月20日"><a href="#2023年3月20日" class="headerlink" title="2023年3月20日"></a>2023年3月20日</h2><p>软件工程导论课，偏文，大部分人都在做自己的事情，一抬头，发现至少有三个人在用ChatGPT，然后又想到这墙，哈哈</p><h2 id="2023年3月23日"><a href="#2023年3月23日" class="headerlink" title="2023年3月23日"></a>2023年3月23日</h2><p>折磨了我一天的容器代理问题，搜索了好多，打开了好多个标签页，也没有解决的，被ChatGPT一句话解决了。</p><p>那时候最大的感觉是什么？无力感？也许吧</p><h2 id="2023年3月30日"><a href="#2023年3月30日" class="headerlink" title="2023年3月30日"></a>2023年3月30日</h2><p>今天上课突然想到一点，主要是因为瞟到一个同学用ChatGPT很频繁。然后就想到，在课上使用ChatGPT，可以很方便地让自己的疑惑点得到解答，这就相当于给每个人都配备了一名助教。</p><h2 id="2023年4月13日"><a href="#2023年4月13日" class="headerlink" title="2023年4月13日"></a>2023年4月13日</h2><p>逛<a href="https://jacobian.org/2022/oct/14/writing-with-copilot/">博客</a>看到这样一段话</p><blockquote><p>I’m still incredibly ambivalent about the ethics of Copilot specifically and the modern crop of AIs (GPT-3, DALL-E, Midjourney, StableDiffusion, Whisper, …) more generally. These systems are as great as they are because they’ve ingested a massive amount of training data without any sort of consent from creators. The fact that nobody working on creating these AIs seems to give a shit about consent gives me hives. I may still become an “AI vegan”. But I’ll likely keep using Copilot for a bit while I grapple with the ethics.<br>训练用的数据集，我印象中StableDiffusion等图像生成的模型比较受诟病，但对ChatGPT我看到的比较少。想了想，觉得这样的差异也能理解。这篇博文提到的“AI vegan”这个词挺有意思的。</p></blockquote><h2 id="2023年4月16日"><a href="#2023年4月16日" class="headerlink" title="2023年4月16日"></a>2023年4月16日</h2><p>睡觉的时候突然很兴奋，挺多想法的，但现在都不太记得起来了。</p><h2 id="2023年4月17日"><a href="#2023年4月17日" class="headerlink" title="2023年4月17日"></a>2023年4月17日</h2><p>想起来了一部分。</p><p>我对人工智能的发展很感兴趣也很挺有信心的。如果因其发展而导致我的就业受到影响，我认为我不应该对ai有怨言。因为这说明我无法创造出ai所创造不了的。</p><p>但我不能接受的一点是，那么好的科技，那么快的发展，我却没法去使用。那就太可惜了。</p><h2 id="2023年4月18日"><a href="#2023年4月18日" class="headerlink" title="2023年4月18日"></a>2023年4月18日</h2><p>涌现这个概念，我觉得这是技术积累到一定程度上必然出现的一种情况。利用ChatGPT的api，不用很高的技术力就可以做出一款还算实用的应用。这个例子不是很恰当，但我认为确实是个现象。</p><h2 id="2023年4月19日"><a href="#2023年4月19日" class="headerlink" title="2023年4月19日"></a>2023年4月19日</h2><p>看<a href="https://arxiv.org/abs/2304.03442">Generative Agents: Interactive Simulacra of Human Behavior</a>,他们尝试实现对人类行为的可信代理。而我最近在学os，os里有很多思想\策略都可以在平时生活中找到依据。反过来，有些用到的思想也可以帮助我们在生活中更好地决策（此处应该有例子）。我觉得对人类行为的可信代理的研究也能有这种效果。然后进一步，我想到；对ai的研究，相关技术的发展，也会去改变一些习惯和思维模式。我尝试去类比几次科技革命对人类生活方式的影响，但一时也没能想出比较好的例子，权记录于此。</p><h2 id="2023年4月30日"><a href="#2023年4月30日" class="headerlink" title="2023年4月30日"></a>2023年4月30日</h2><p>今天读到<a href="https://freemind.pluskid.org/misc/elden-ring-pvp-and-theory-of-mind/">Elden Ring PvP and Theory of Mind</a>。作者科普了ToM的概念，也谈到 AI 语言模型。让我想到之前看过的LLM继续发展下去，可能会有类似读心术的效果，能预测你下一步要做什么，甚至是在想什么。我觉得这在一定程度是可行的。因为现代所谓的一些读心术，很多都是基于微表情的观察和分析其过去的行为模式和经历上。</p><h2 id="2023年5月5日"><a href="#2023年5月5日" class="headerlink" title="2023年5月5日"></a>2023年5月5日</h2><p>看了<a href="https://www.joshwcomeau.com/blog/the-end-of-frontend-development/">The End of Front-End Development</a>，文章的主要结构是列举一个常见的观点，然后作者谈自己的看法。</p><ul><li><p>作者尝试从以下几点去说ai并不能完全取代程序员。</p><ul><li>从css诞生没多久，就一直有’no code’的工具</li><li>GPT擅长生成小型代码，而因为缺乏大型代码的训练和限制，所以大型代码就无能为力了。（我的想法是肯定会有解决的方法，因为GPT本身就是用海量数据中训练出来的）</li><li>精准度。非相关人士很难能很快地找到GPT所给代码的问题所在。是可以直接把报错直接提交给ai，但“not all hallucinations will lead to exceptions”。</li><li>security vulnerabilities。代码安全事故需要有背锅的。</li></ul></li><li><p>整篇文章写得很不错，但有几句我觉得值得我摘抄下来。</p><ul><li>作者认为“AI isn’t magic. It’s only as good as its training data.” 我现在也是这么想，但我还是期待着ai进一步突破的那天。但不知道会是先有鸡还是先有蛋——是人类先想明白思考的本质，再去赋予ai思考的能力；还是堆量到一定程度后，ai自己涌现出思考的能力。然后人类从中学习到为什么。</li><li>“We’re very quickly reaching the point where non-developers can sit down with a chatbot and crank out a small self-contained project”。 这点我已经体验到了，在ai的帮助下，我能减少学习成本，去实现之前所想的功能。</li><li>“if it turns out that LLMs can totally replace software developers? If that’s the case, I suspect LLMs will replace a huge majority of knowledge workers.” 作者安慰人有一手的。</li><li>“ Keep in mind that LLMs are 100% confident, but not 100% accurate.” 深有体会。</li></ul></li></ul><h2 id="2023年5月10日"><a href="#2023年5月10日" class="headerlink" title="2023年5月10日"></a>2023年5月10日</h2><p>晚上的时候看了下ai翻唱的教程。本来相关的模型都下好了，但看到显存要求在6g以上就被劝退了。不过还是觉得今年这场ai技术的进步很有魅力。太棒了！</p><h2 id="2023年5月16日"><a href="#2023年5月16日" class="headerlink" title="2023年5月16日"></a>2023年5月16日</h2><p>刷推时突然连着好几条都是差不多相同的内容，差不多是prompt的推荐。我觉得好的prompt有着不可否认的作用。但对于那些雷同的文章，我怀着恶意认为是因为技术不够没办法谈及更深的层次，但为了蹭流量所以就改为prompt。</p><p>现在我觉得我这个想法不好。人家只是在分享，我恶意那么大干嘛，不喜欢的话快点滑过去就行。</p><h2 id="2023年5月19日"><a href="#2023年5月19日" class="headerlink" title="2023年5月19日"></a>2023年5月19日</h2><p>苹果商店上架了openai的软件。意味着之前困扰中国用户的充值问题现在有了相对很成熟且快捷的解决方式。</p><p>虽然有些马后炮，但我觉得这算是一种趋势。现在openAI的优势相比于22年12月已经没有那么大了。各路公司都推出自己的模型。当然这和openAI对自己的部分研究成果开源的成果有关。</p><p>能看到这样的局面，而非某一家独步天下真的很棒。</p><p>但还是为自己没能用上GPT-4觉得可惜，特别想试试GPT-4宣传片中的多模态模型。</p>]]></content>
    
    
    <categories>
      
      <category>想法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>村上春树</title>
    <link href="/2022/12/26/Murakami-Haruki/"/>
    <url>/2022/12/26/Murakami-Haruki/</url>
    
    <content type="html"><![CDATA[<h1 id="村上春树"><a href="#村上春树" class="headerlink" title="村上春树"></a>村上春树</h1><div class="note note-info">            <p>每次开篇都有缘由，今天开启村上春树这一篇章，是我这几天在看《舞舞舞》，看得着实投入。我看书有个习惯，不好的习惯：看完后未待自己反应过来，就会去看别人如何点评这本书。这次也是。但看到的观点都不是很满意。稍微回忆了下，发现自己目前为止看的村上春树的书也不少：且听风吟，舞舞舞，海边的卡夫卡，挪威的森林。但都只是囫囵吞之，连情节都记不太清了。这不是我想要的。加上最近有写读后感的冲动，所以开此篇来记录下。</p>          </div><h2 id="总印象"><a href="#总印象" class="headerlink" title="总印象"></a>总印象</h2><p>村上春树之名，我蛮早的时候就有所听闻：诺奖得主，长跑爱好者。这是我最初的印象。但他的作品直到大二上才开始接触。一接触就爱上了这种风格。我也说不上来是什么风格，但几本看下来，就是喜欢。现想到几点原因，列如下：</p><ul><li>小说主角的生活方式很得我心：《海边的卡夫卡》中的田村卡夫卡，我喜欢，我欣赏那种自律，健康的生活。《舞舞舞》中的“我”。三十四岁独居生活，不枯燥，不堕落。</li><li>小说中的音乐占据很大一部分分量：尤以摇滚和古典为主。这两个类别都是我所喜欢的。我对古典乐还是不太能欣赏得来，不得要领，但我喜欢《海边的卡夫卡》中卡车司机星野在咖啡馆的那段我尤为喜欢。我希望自己哪天也有这样一个契机。</li><li>句子：很多都不甚明白，但就是喜欢这样的风格。其中有些句子还能让我觉得有趣。</li><li>作者本身：到目前为止，我最为喜欢的作家当属王小波。我佩服其智慧和幽默。其后是村上春树，佩服他坚持长跑。</li></ul><h2 id="《舞！舞！舞》"><a href="#《舞！舞！舞》" class="headerlink" title="《舞！舞！舞》"></a>《舞！舞！舞》</h2><ul><li>阅读时间：2023年1月2日至5日</li><li>一些感受：<ul><li>喜欢主角的独居生活，以后自己生活的时候也能像这样就好了。</li></ul></li></ul><h2 id="《世界尽头与人间仙境》"><a href="#《世界尽头与人间仙境》" class="headerlink" title="《世界尽头与人间仙境》"></a>《世界尽头与人间仙境》</h2><ul><li><h3 id="奇妙得犹如羽绒枕和搅冰勺、墨水瓶和莴苣一类组合。"><a href="#奇妙得犹如羽绒枕和搅冰勺、墨水瓶和莴苣一类组合。" class="headerlink" title="奇妙得犹如羽绒枕和搅冰勺、墨水瓶和莴苣一类组合。"></a>奇妙得犹如羽绒枕和搅冰勺、墨水瓶和莴苣一类组合。</h3>村上春树的书常常出现这种奇妙的组合，让人（尤其是我这种）看起来不知所云，但又觉得很有逼格。可能需要一种比较跳脱的思维。我尝试联想了下，记起些类似的：<ul><li><blockquote><p>“春天的原野里，你一个人正走着，对面走来一只可爱的小熊，浑身的毛活像天鹅绒，眼睛圆鼓鼓的。</p><p>它对你说道：’你好，小姐，和我一块儿打滚玩好吗？’接着，你就和小熊抱在一起，顺着长满三叶草的山坡‘咕噜咕噜’滚下去，玩了整整一天。你说棒不棒？”</p><p>“太棒了。”</p><p>“我就这么喜欢你。”</p></blockquote><p>——《挪威的森林》 渡边和绿子</p><p>  很浪漫。</p></li><li><blockquote><p>“16的下一位数是几？”——有人问我。“41。”…“25的下一位数？”——有人问。“71。”——我回答。”</p></blockquote><p>——《舞！舞！舞！》 “我”两次遭锤之前的问答。</p><p>  不知道这四个数字的意义是什么。</p></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>书评</tag>
      
      <tag>作家</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ozymandias</title>
    <link href="/2022/11/15/Ozymandias/"/>
    <url>/2022/11/15/Ozymandias/</url>
    
    <content type="html"><![CDATA[<h1 id="Ozymandias"><a href="#Ozymandias" class="headerlink" title="Ozymandias"></a>Ozymandias</h1><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p>I met a traveller from an antique land</p><p>Who said :”Two vast and trunkless legs of stone</p><p>Stand in the disert …Near them on the sand,</p><p>Half sunk, a shattered visage lies,whose frown</p><p>And wrinkled lip and sneer of cold command</p><p>Tell that its sculptor well those passions read </p><p>Which yet survive, stamped on these lifeless things,</p><p>The hand that mocked them and the heart that fed.</p><p>And on the pedestal these words appear:</p><p>‘My name is Ozymandias,King of Kings:</p><p>Look on my works,ye mighty,and despair!’</p><p>Nothing beside remains. Round the decay</p><p>Of that colossal wreck,boundless and bare,</p><p>The lone and level sands stretch far away.</p><h2 id="译本"><a href="#译本" class="headerlink" title="译本"></a>译本</h2><p><strong>终身成就奖得主江枫教授译本</strong></p><p>我遇到过一位来自古老故土的旅客，</p><p>他说：有一双巨大的石足，没有身躯，</p><p>矗立在沙漠……近旁的黄沙半裸着</p><p>一副破碎残缺的面孔，它眉峰紧蹙，</p><p>嘴唇起皱，【统帅万方、鄙夷一切的神色】，</p><p>【表明雕刻师对这类情欲曾经深有感受】，</p><p>它们，由于留痕在这无生命的物体上，</p><p>【竟比孕育了它们的心，仿造过它们的手】，</p><p>都存活得更加长久；在台座上石足下，</p><p>有这样的字迹依稀可读：“众王之王—</p><p>奥西曼达斯就是我，看看我的业绩吧，</p><p>纵然是一世之雄，也必定会颓然而绝望！”</p><p>残骸的周围，此外再没有留下什么，</p><p>寂寞、荒凉，无边的平沙伸向远方。 </p><hr><p><strong>王佐良教授译本</strong></p><p>客自海外归，曾见沙漠古国</p><p>有石像半毁，唯余巨腿</p><p>蹲立沙砾间。像头旁落，</p><p>半遭沙埋，但人面依然可畏，</p><p>那冷笑，那发号施令的高傲，</p><p>足见雕匠看透了主人的内心，</p><p>才把那石头刻得神情维肖，</p><p>而刻像的手和像主的心</p><p>早成灰烬。像座上大字在目：</p><p>“吾乃万王之王是也，</p><p>盖世功业，敢叫天公折服！”</p><p>此外无一物，但见废墟周围，</p><p>寂寞平沙空莽莽，</p><p>伸向荒凉的四方。</p><hr><p><strong>杨绛</strong><br>我遇见一位来自古国的旅人</p><p>他说：有两条巨大的石腿</p><p>半掩于沙漠之间</p><p>近旁的沙土中，有一张破碎的石脸</p><p>抿着嘴，蹙着眉，面孔依旧威严</p><p>想那雕刻者，必定深谙其人情感</p><p>那神态还留在石头上</p><p>而私人已逝，化作尘烟</p><p>看那石座上刻着字句：</p><p>“我是万王之王,奥兹曼斯迪亚斯</p><p>功业盖物,强者折服”</p><p>此外，荡然无物</p><p>废墟四周，唯余黄沙莽莽</p><p>寂寞荒凉，伸展四方。</p><hr><h2 id="个人的一些感受"><a href="#个人的一些感受" class="headerlink" title="个人的一些感受"></a>个人的一些感受</h2><p>我是在看游戏评论的时候看到这首诗的。说是文明5中有一幕，是关于这首诗的。评论取的是王佐良教授的译本。古色古香，令人触动。</p><p>我对翻译一直颇有兴趣。大学选的两门英语高级课程。一门选了笔译，一门是口译。</p><p>为什么我会对翻译感兴趣呢？</p><p>原因细数下来，蛮多的：</p><ul><li>我在阅读些专业书籍时，深受翻译之苦。有的中文翻译十分拗口，难以理解，反倒是英文原版更利于理解。</li><li>我英文歌听得比较多。我去看歌词时，常常发现译文十分有趣。</li><li>可以说是我的偶像吧：王小波。（写这里的时候我记成是金庸了）他在《我的师承》这篇文章中，盛赞了两位译者：查良铮，王道乾。初读这篇文章的时候，我还体会不到译诗的美，现在也还是不太能体会得到。希望以后的我能体会得到。</li></ul><p>再谈回这首诗。惭愧的是，我现在还不太能感受英文诗的美。但从中译本中，我还是能感受到那份苍凉。</p><p>我的第一感受是联想到“昔人已乘黄鹤去，此地空余黄鹤楼”。我会先想到这句其实也很正常：我经常yy，有一天我去英国旅行，特意去往温布利体育馆，再把之前的那条说说找出来，配文“此地空余黄鹤楼”。</p><p>而我刚才看赏析，说雪莱是借Ozymandias，来去告诫君王。我想不到那里去，不过也挺好的。不去想太多，只是感受，感受那“废墟四周，唯余黄沙莽莽，寂寞荒凉，伸展四方。”</p>]]></content>
    
    
    <categories>
      
      <category>什锦</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>摘抄</tag>
      
      <tag>翻译</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git学习笔记</title>
    <link href="/2022/09/04/gitLearning/"/>
    <url>/2022/09/04/gitLearning/</url>
    
    <content type="html"><![CDATA[<h1 id="git学习笔记"><a href="#git学习笔记" class="headerlink" title="git学习笔记"></a>git学习笔记</h1><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><h3 id="Github项目内搜索"><a href="#Github项目内搜索" class="headerlink" title="Github项目内搜索"></a>Github项目内搜索</h3><p>在仓库页面上按 T ，然后直接输入文件名</p><hr><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><h3 id="Gitee配置的记录"><a href="#Gitee配置的记录" class="headerlink" title="Gitee配置的记录"></a>Gitee配置的记录</h3><p>因为srtp项目是用gitee作托管，所以今天试着配置了下Gitee，还是花了些时间的，记录如下：</p><ol><li>主要参考的是<a href="https://cloud.tencent.com/developer/article/1774890">Git同时配置Gitee和GitHub</a>,但它上面第一步就是让清除git的全局设置，有点不敢，因为怕清除后自己之前设置的一些东西出错。</li><li>又看了几个教程，发现<a href="https://blog.csdn.net/weixin_43894513/article/details/104550377">Github 与 Gitee 共存配置</a>上并没有说要清楚全局设置，于是就跟着上面的一步步走，很顺利地就设置好了。</li><li>一个收获是<code>config</code>,<code>id_rsa</code>都是可以用记事本打开并编辑的。</li></ol><h3 id="多人协作时的流程"><a href="#多人协作时的流程" class="headerlink" title="多人协作时的流程"></a>多人协作时的流程</h3><p>这次小组项目用的是华为云，所以流程也都是基于华为云来说的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注：代码中的中文请根据实际情况进行替换</span><br><span class="hljs-comment">#确定好本次代码开发所要完成的任务，开好远程分支x，相关信息(分支名称，描述，关联工作项）要注明好</span><br>git pull <span class="hljs-comment">#确保代码、分支是最新的</span><br>git checkout -b 本地分支名 origin/远程分支名   <span class="hljs-comment">#检出远程分支到本地</span><br><span class="hljs-comment"># 代码开发</span><br>git add .<br>git commit -m<span class="hljs-string">&quot;适当的批注&quot;</span><br>git push <span class="hljs-comment">#将代码推送到远程分支，开发过程中这个操作可以频繁点，好处是：代码备份和版本管理</span><br><span class="hljs-comment"># 完成本次代码开发所要完成的任务后（请确定功能实现，本地调试没问题）</span><br><span class="hljs-comment"># 接下来进行分支的合并 </span><br><span class="hljs-comment"># 在华为云中新建合并请求（可设置检视人，评审人，让别人帮忙看看）</span><br><span class="hljs-comment"># 合并完成后（默认设置是分支合并后，源分支是删除的）</span><br>git remote prune origin <span class="hljs-comment">#当华为云上显示远程分支已经删除，但git branch -r仍然看到所删除的分支，执行该命令</span><br>git checkout master <span class="hljs-comment">#切回master分支（一次任务完成后，建议切回master分支，这样pull的时候可以避免自己写的代码丢失的问题）</span><br>git branch -d 本地分支名 <span class="hljs-comment">#删除本次任务所用的本地分支（也可以不删，当作备份）</span><br></code></pre></td></tr></table></figure><h3 id="对remote-branch的认识"><a href="#对remote-branch的认识" class="headerlink" title="对remote branch的认识"></a>对remote branch的认识</h3><p>There are potentially three versions of every remote branch:</p><ol><li>The actual branch on the remote repository</li><li>The snapshot of that branch locally</li><li>A local branch that might be tracking the remote branch</li></ol><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><ul><li><code>git add .</code> 会根据。gitignore做过滤</li><li><code>git add *</code> 会忽略。gitignore把任何文件都加入</li></ul><h3 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h3><p>文件推送的三个步骤：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">git <span class="hljs-keyword">add</span> <br>git commit -m<span class="hljs-string">&quot;输入想说的话&quot;</span><br>git <span class="hljs-keyword">push</span><br></code></pre></td></tr></table></figure><h3 id="查看状况"><a href="#查看状况" class="headerlink" title="查看状况"></a>查看状况</h3><p><code>git status</code></p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><ul><li><p>转到另一个分支 &#96;git checkout {分支名}</p></li><li><p>查看本地分支 <code>git branch</code></p></li><li><p>查看远程分支 <code>git branch -r</code></p></li><li><p>查看本地和远程分支 <code>git branch -a</code></p></li><li><p>删除本地分支 <code>git branch -d &#123;本地分支名&#125;</code></p></li><li><p>强制删除本地分支<code>git branch -D &#123;本地分支名&#125;</code></p></li><li><p>删除远程分支 <code>git push origin --delete &#123;远程分支名&#125;</code></p></li><li><p>已经删除的远程分支但仍<code>git branch -a</code>时仍显示 ：<code>git remote prune origin</code></p></li></ul><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li><code>git log</code> 查看分支提交历史</li><li><code>git reflog</code> 也是查看日志，主要区别是会显示<code>reset --hard</code></li></ul><h3 id="代码回退"><a href="#代码回退" class="headerlink" title="代码回退"></a>代码回退</h3><ul><li><code>git reset --hard &#123;commit_id&#125;</code></li><li><code>git reset --hard HEAD^ </code> 回退到上一版本</li></ul><hr><h2 id="报错与解决"><a href="#报错与解决" class="headerlink" title="报错与解决"></a>报错与解决</h2><ol><li><p>报错：</p><blockquote><p>Updates were rejected because the remote contains work that you donot have locally.</p></blockquote><ul><li><strong>场景</strong>:在尝试gitee的时候，先是建了个远程仓库。然后在本地新建了个同名的文件夹，然后   <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git init <br>git remote add origin https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/spike23187/</span>hello-gitee.git<br></code></pre></td></tr></table></figure> 在文件夹里新建了个文件，<code>push</code>的时候报的错</li><li><strong>解决</strong>: 根据下方的提示，是我没有先<code>pull</code>，本地文件不是最新的。</li></ul></li><li><blockquote><p>Updates were rejected because the tip of your current branch is behind its remote counterpart</p></blockquote><ul><li><strong>场景</strong>：上述那个场景中，<code>git pull origin master</code>后报的错</li><li><strong>解决</strong>：<code>git pull origin master --rebase</code></li><li><strong>参考链接</strong>：<a href="https://blog.csdn.net/weixin_42310154/article/details/118676936">Git常见报错：Updates were rejected because the tip of your current branch is behind</a></li><li><strong>收获</strong>：虽然使用GitHub托管代码有段时间了，但一直是用插件简化操作的。这次算是第一次用git bash，就报了两个错，感觉git要用好，还是有段路要走的。</li></ul></li><li><ul><li><strong>场景</strong>:push时报错,大意是网络问题</li><li><strong>解决</strong>：   <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> http<span class="hljs-selector-class">.proxy</span> <span class="hljs-string">&#x27;http://127.0.0.1:7890&#x27;</span><br>git config <span class="hljs-attr">--global</span> https<span class="hljs-selector-class">.proxy</span> <span class="hljs-string">&#x27;http://127.0.0.1:7890&#x27;</span><br></code></pre></td></tr></table></figure></li></ul></li></ol><hr><h1 id="可供参考的链接"><a href="#可供参考的链接" class="headerlink" title="可供参考的链接"></a>可供参考的链接</h1><ul><li><a href="https://www.yiibai.com/git">git教程</a></li><li><a href="https://www.theserverside.com/video/Git-reflog-vs-log-How-these-commit-history-tools-differ">Git reflog vs. log: How these commit history tools differ</a></li><li><a href="http://blog.ch3nyang.top/miscellaneous/git%E5%AD%A6%E4%B9%A0/">【杂】git学习</a></li><li><a href="https://zhuanlan.zhihu.com/p/137856034">拜托，不要再问我Git如何回滚代码</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
